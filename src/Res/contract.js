module.exports = {
	ABI: [
		{
			inputs: [],
			stateMutability: "nonpayable",
			type: "constructor",
		},
		{
			anonymous: false,
			inputs: [
				{
					indexed: true,
					internalType: "address",
					name: "owner",
					type: "address",
				},
				{
					indexed: true,
					internalType: "address",
					name: "approved",
					type: "address",
				},
				{
					indexed: true,
					internalType: "uint256",
					name: "tokenId",
					type: "uint256",
				},
			],
			name: "Approval",
			type: "event",
		},
		{
			anonymous: false,
			inputs: [
				{
					indexed: true,
					internalType: "address",
					name: "owner",
					type: "address",
				},
				{
					indexed: true,
					internalType: "address",
					name: "operator",
					type: "address",
				},
				{
					indexed: false,
					internalType: "bool",
					name: "approved",
					type: "bool",
				},
			],
			name: "ApprovalForAll",
			type: "event",
		},
		{
			anonymous: false,
			inputs: [
				{
					indexed: true,
					internalType: "address",
					name: "previousOwner",
					type: "address",
				},
				{
					indexed: true,
					internalType: "address",
					name: "newOwner",
					type: "address",
				},
			],
			name: "OwnershipTransferred",
			type: "event",
		},
		{
			anonymous: false,
			inputs: [
				{
					indexed: true,
					internalType: "address",
					name: "from",
					type: "address",
				},
				{
					indexed: true,
					internalType: "address",
					name: "to",
					type: "address",
				},
				{
					indexed: true,
					internalType: "uint256",
					name: "tokenId",
					type: "uint256",
				},
			],
			name: "Transfer",
			type: "event",
		},
		{
			inputs: [
				{
					internalType: "address",
					name: "to",
					type: "address",
				},
				{
					internalType: "uint256",
					name: "tokenId",
					type: "uint256",
				},
			],
			name: "approve",
			outputs: [],
			stateMutability: "nonpayable",
			type: "function",
		},
		{
			inputs: [
				{
					internalType: "address",
					name: "owner",
					type: "address",
				},
			],
			name: "balanceOf",
			outputs: [
				{
					internalType: "uint256",
					name: "",
					type: "uint256",
				},
			],
			stateMutability: "view",
			type: "function",
			constant: true,
		},
		{
			inputs: [
				{
					internalType: "uint256",
					name: "tokenId",
					type: "uint256",
				},
			],
			name: "getApproved",
			outputs: [
				{
					internalType: "address",
					name: "",
					type: "address",
				},
			],
			stateMutability: "view",
			type: "function",
			constant: true,
		},
		{
			inputs: [
				{
					internalType: "address",
					name: "owner",
					type: "address",
				},
				{
					internalType: "address",
					name: "operator",
					type: "address",
				},
			],
			name: "isApprovedForAll",
			outputs: [
				{
					internalType: "bool",
					name: "",
					type: "bool",
				},
			],
			stateMutability: "view",
			type: "function",
			constant: true,
		},
		{
			inputs: [],
			name: "name",
			outputs: [
				{
					internalType: "string",
					name: "",
					type: "string",
				},
			],
			stateMutability: "view",
			type: "function",
			constant: true,
		},
		{
			inputs: [],
			name: "owner",
			outputs: [
				{
					internalType: "address",
					name: "",
					type: "address",
				},
			],
			stateMutability: "view",
			type: "function",
			constant: true,
		},
		{
			inputs: [
				{
					internalType: "uint256",
					name: "tokenId",
					type: "uint256",
				},
			],
			name: "ownerOf",
			outputs: [
				{
					internalType: "address",
					name: "",
					type: "address",
				},
			],
			stateMutability: "view",
			type: "function",
			constant: true,
		},
		{
			inputs: [],
			name: "renounceOwnership",
			outputs: [],
			stateMutability: "nonpayable",
			type: "function",
		},
		{
			inputs: [
				{
					internalType: "address",
					name: "from",
					type: "address",
				},
				{
					internalType: "address",
					name: "to",
					type: "address",
				},
				{
					internalType: "uint256",
					name: "tokenId",
					type: "uint256",
				},
			],
			name: "safeTransferFrom",
			outputs: [],
			stateMutability: "nonpayable",
			type: "function",
		},
		{
			inputs: [
				{
					internalType: "address",
					name: "from",
					type: "address",
				},
				{
					internalType: "address",
					name: "to",
					type: "address",
				},
				{
					internalType: "uint256",
					name: "tokenId",
					type: "uint256",
				},
				{
					internalType: "bytes",
					name: "_data",
					type: "bytes",
				},
			],
			name: "safeTransferFrom",
			outputs: [],
			stateMutability: "nonpayable",
			type: "function",
		},
		{
			inputs: [
				{
					internalType: "address",
					name: "operator",
					type: "address",
				},
				{
					internalType: "bool",
					name: "approved",
					type: "bool",
				},
			],
			name: "setApprovalForAll",
			outputs: [],
			stateMutability: "nonpayable",
			type: "function",
		},
		{
			inputs: [
				{
					internalType: "bytes4",
					name: "interfaceId",
					type: "bytes4",
				},
			],
			name: "supportsInterface",
			outputs: [
				{
					internalType: "bool",
					name: "",
					type: "bool",
				},
			],
			stateMutability: "view",
			type: "function",
			constant: true,
		},
		{
			inputs: [],
			name: "symbol",
			outputs: [
				{
					internalType: "string",
					name: "",
					type: "string",
				},
			],
			stateMutability: "view",
			type: "function",
			constant: true,
		},
		{
			inputs: [
				{
					internalType: "uint256",
					name: "tokenId",
					type: "uint256",
				},
			],
			name: "tokenURI",
			outputs: [
				{
					internalType: "string",
					name: "",
					type: "string",
				},
			],
			stateMutability: "view",
			type: "function",
			constant: true,
		},
		{
			inputs: [
				{
					internalType: "address",
					name: "from",
					type: "address",
				},
				{
					internalType: "address",
					name: "to",
					type: "address",
				},
				{
					internalType: "uint256",
					name: "tokenId",
					type: "uint256",
				},
			],
			name: "transferFrom",
			outputs: [],
			stateMutability: "nonpayable",
			type: "function",
		},
		{
			inputs: [
				{
					internalType: "address",
					name: "newOwner",
					type: "address",
				},
			],
			name: "transferOwnership",
			outputs: [],
			stateMutability: "nonpayable",
			type: "function",
		},
		{
			inputs: [
				{
					internalType: "address",
					name: "owner",
					type: "address",
				},
				{
					internalType: "string",
					name: "tokenURI",
					type: "string",
				},
			],
			name: "mint",
			outputs: [],
			stateMutability: "nonpayable",
			type: "function",
		},
		{
			inputs: [
				{
					internalType: "address",
					name: "minter",
					type: "address",
				},
				{
					internalType: "uint256",
					name: "maxToken",
					type: "uint256",
				},
			],
			name: "setMinter",
			outputs: [],
			stateMutability: "nonpayable",
			type: "function",
		},
	],
	metadata:
		'{"compiler":{"version":"0.8.9+commit.e5eed63a"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"string","name":"tokenURI","type":"string"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"minter","type":"address"},{"internalType":"uint256","name":"maxToken","type":"uint256"}],"name":"setMinter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"owner()":{"details":"Returns the address of the current owner."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"project:/contracts/MunichNFT.sol":"MunichNFT"},"evmVersion":"london","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"keccak256":"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1","license":"MIT","urls":["bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163","dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro"]},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"keccak256":"0x7d2b8ba4b256bfcac347991b75242f9bc37f499c5236af50cf09d0b35943dc0c","license":"MIT","urls":["bzz-raw://d8eeaf6afe00229af4c232ca058bb08b7a24cc3886f0b387159ac49ffd8b5312","dweb:/ipfs/QmdnVKmDDWDvdRr6vtrxy3G6WafqA2TAhUZv1UFMsm4B4r"]},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"keccak256":"0xf101e8720213560fab41104d53b3cc7ba0456ef3a98455aa7f022391783144a0","license":"MIT","urls":["bzz-raw://3e7820bcf567e6892d937c3cb10db263a4042e446799bca602535868d822384e","dweb:/ipfs/QmPG2oeDjKncqsEeyYGjAN7CwAJmMgHterXGGnpzhha4z7"]},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"keccak256":"0xd9517254724276e2e8de3769183c1f738f445f0095c26fd9b86d3c6687e887b9","license":"MIT","urls":["bzz-raw://0e604bcdcd5e5b2fb299ad09769cde6db19d5aa1929d1b5e939234a0f10d7eb8","dweb:/ipfs/Qmd8hXE3GZfBHuWx3RNiYgFW2ci7KvHtib8DiwzJ2dgo9V"]},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"keccak256":"0x188d038a65a945481cc13fe30db334472dfbed61f7959d4478d05feb6303b1ea","license":"MIT","urls":["bzz-raw://7aec4efa22389811ffa393463569410bbca1ecaa551bc94d69020bc9567e9277","dweb:/ipfs/QmPwk5uVSHPQkepebrZSQ9xqgXdPABKqHwJZ2HkzNByLRE"]},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"keccak256":"0xd32fb7f530a914b1083d10a6bed3a586f2451952fec04fe542bcc670a82f7ba5","license":"MIT","urls":["bzz-raw://af63ab940a34687c45f0ad84960b048fc5f49330c92ccb422db7822a444733b9","dweb:/ipfs/QmUShaQEu8HS1GjDnsMJQ8jkZEBrecn6NuDZ3pfjY1gVck"]},"@openzeppelin/contracts/utils/Address.sol":{"keccak256":"0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a","license":"MIT","urls":["bzz-raw://39a05eec7083dfa0cc7e0cbfe6cd1bd085a340af1ede93fdff3ad047c5fb3d8e","dweb:/ipfs/QmVApz5fCUq2QC8gKTsNNdCmcedJ3ETHp68zR5N3WUKS4r"]},"@openzeppelin/contracts/utils/Context.sol":{"keccak256":"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f","license":"MIT","urls":["bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c","dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux"]},"@openzeppelin/contracts/utils/Counters.sol":{"keccak256":"0x78450f4e3b722cce467b21e285f72ce5eaf361e9ba9dd2241a413926246773cd","license":"MIT","urls":["bzz-raw://f103065051300cd995fd4599ba91188d4071b92175b52f26110e02db091617c0","dweb:/ipfs/QmSyDz67R2HCypDE8Pacn3voVwxw9x17NM66q47YgBnGqc"]},"@openzeppelin/contracts/utils/Strings.sol":{"keccak256":"0x391d3ba97ab6856a16b225d6ee29617ad15ff00db70f3b4df1ab5ea33aa47c9d","license":"MIT","urls":["bzz-raw://d636ba90bbbeed04a1ea7fe9ec2466757e30fd38ba2ca173636dbf69a518735e","dweb:/ipfs/QmQwCB2BHnEuYR22PYt9HkpbgeFDhq4rHmaYqAZbX3WRC7"]},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"keccak256":"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b","license":"MIT","urls":["bzz-raw://d10e1d9b26042424789246603906ad06143bf9a928f4e99de8b5e3bdc662f549","dweb:/ipfs/Qmejonoaj5MLekPus229rJQHcC6E9dz2xorjHJR84fMfmn"]},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"keccak256":"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4","license":"MIT","urls":["bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6","dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx"]},"project:/contracts/MunichNFT.sol":{"keccak256":"0xbace49af250bdd9dce8c068156ace7992ccea03fcbec6523e4ed9c570db01107","license":"MIT","urls":["bzz-raw://1a3ade3f5cab15681669326181ef0d58c182f0f25e8c7c5b03de549b6d1e6ac6","dweb:/ipfs/QmSDFavmZYB9h3F74NroaSHb6TVcifrCEHMNjEBXuWL7x5"]}},"version":1}',
	bytecode:
		"0x60806040523480156200001157600080fd5b506040518060400160405280600981526020017f4d756e6963684e465400000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4d55430000000000000000000000000000000000000000000000000000000000815250816000908051906020019062000096929190620001a6565b508060019080519060200190620000af929190620001a6565b505050620000d2620000c6620000d860201b60201c565b620000e060201b60201c565b620002bb565b600033905090565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b828054620001b49062000285565b90600052602060002090601f016020900481019282620001d8576000855562000224565b82601f10620001f357805160ff191683800117855562000224565b8280016001018555821562000224579182015b828111156200022357825182559160200191906001019062000206565b5b50905062000233919062000237565b5090565b5b808211156200025257600081600090555060010162000238565b5090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200029e57607f821691505b60208210811415620002b557620002b462000256565b5b50919050565b6131ef80620002cb6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80638da5cb5b116100a2578063b88d4fde11610071578063b88d4fde146102cb578063c87b56dd146102e7578063d0def52114610317578063e985e9c514610333578063f2fde38b1461036357610116565b80638da5cb5b1461025757806395d89b41146102755780639ce3899814610293578063a22cb465146102af57610116565b806323b872dd116100e957806323b872dd146101b557806342842e0e146101d15780636352211e146101ed57806370a082311461021d578063715018a61461024d57610116565b806301ffc9a71461011b57806306fdde031461014b578063081812fc14610169578063095ea7b314610199575b600080fd5b61013560048036038101906101309190611dc1565b61037f565b6040516101429190611e09565b60405180910390f35b610153610461565b6040516101609190611ebd565b60405180910390f35b610183600480360381019061017e9190611f15565b6104f3565b6040516101909190611f83565b60405180910390f35b6101b360048036038101906101ae9190611fca565b610578565b005b6101cf60048036038101906101ca919061200a565b610690565b005b6101eb60048036038101906101e6919061200a565b6106f0565b005b61020760048036038101906102029190611f15565b610710565b6040516102149190611f83565b60405180910390f35b6102376004803603810190610232919061205d565b6107c2565b6040516102449190612099565b60405180910390f35b61025561087a565b005b61025f610902565b60405161026c9190611f83565b60405180910390f35b61027d61092c565b60405161028a9190611ebd565b60405180910390f35b6102ad60048036038101906102a89190611fca565b6109be565b005b6102c960048036038101906102c491906120e0565b610a82565b005b6102e560048036038101906102e09190612255565b610c03565b005b61030160048036038101906102fc9190611f15565b610c65565b60405161030e9190611ebd565b60405180910390f35b610331600480360381019061032c9190612379565b610db7565b005b61034d600480360381019061034891906123d5565b610eff565b60405161035a9190611e09565b60405180910390f35b61037d6004803603810190610378919061205d565b610f93565b005b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061044a57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061045a57506104598261108b565b5b9050919050565b60606000805461047090612444565b80601f016020809104026020016040519081016040528092919081815260200182805461049c90612444565b80156104e95780601f106104be576101008083540402835291602001916104e9565b820191906000526020600020905b8154815290600101906020018083116104cc57829003601f168201915b5050505050905090565b60006104fe826110f5565b61053d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610534906124e8565b60405180910390fd5b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061058382610710565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156105f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105eb9061257a565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610613611161565b73ffffffffffffffffffffffffffffffffffffffff16148061064257506106418161063c611161565b610eff565b5b610681576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106789061260c565b60405180910390fd5b61068b8383611169565b505050565b6106a161069b611161565b82611222565b6106e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d79061269e565b60405180910390fd5b6106eb838383611300565b505050565b61070b83838360405180602001604052806000815250610c03565b505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156107b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b090612730565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610833576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082a906127c2565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610882611161565b73ffffffffffffffffffffffffffffffffffffffff166108a0610902565b73ffffffffffffffffffffffffffffffffffffffff16146108f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ed9061282e565b60405180910390fd5b610900600061155c565b565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606001805461093b90612444565b80601f016020809104026020016040519081016040528092919081815260200182805461096790612444565b80156109b45780601f10610989576101008083540402835291602001916109b4565b820191906000526020600020905b81548152906001019060200180831161099757829003601f168201915b5050505050905090565b6109c6611161565b73ffffffffffffffffffffffffffffffffffffffff166109e4610902565b73ffffffffffffffffffffffffffffffffffffffff1614610a3a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a319061282e565b60405180910390fd5b80600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b610a8a611161565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610af8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aef9061289a565b60405180910390fd5b8060056000610b05611161565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610bb2611161565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610bf79190611e09565b60405180910390a35050565b610c14610c0e611161565b83611222565b610c53576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4a9061269e565b60405180910390fd5b610c5f84848484611622565b50505050565b6060610c70826110f5565b610caf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca69061292c565b60405180910390fd5b6000600660008481526020019081526020016000208054610ccf90612444565b80601f0160208091040260200160405190810160405280929190818152602001828054610cfb90612444565b8015610d485780601f10610d1d57610100808354040283529160200191610d48565b820191906000526020600020905b815481529060010190602001808311610d2b57829003601f168201915b505050505090506000610d5961167e565b9050600081511415610d6f578192505050610db2565b600082511115610da4578082604051602001610d8c929190612988565b60405160208183030381529060405292505050610db2565b610dad84611695565b925050505b919050565b600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410610e77576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6e90612a1e565b60405180910390fd5b610e81600861173c565b6000610e8d6008611752565b9050610e998382611760565b610ea3818361192e565b6001600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ef39190612a6d565b92505081905550505050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b610f9b611161565b73ffffffffffffffffffffffffffffffffffffffff16610fb9610902565b73ffffffffffffffffffffffffffffffffffffffff161461100f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110069061282e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561107f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161107690612b35565b60405180910390fd5b6110888161155c565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff166111dc83610710565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600061122d826110f5565b61126c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161126390612bc7565b60405180910390fd5b600061127783610710565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806112e657508373ffffffffffffffffffffffffffffffffffffffff166112ce846104f3565b73ffffffffffffffffffffffffffffffffffffffff16145b806112f757506112f68185610eff565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff1661132082610710565b73ffffffffffffffffffffffffffffffffffffffff1614611376576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161136d90612c59565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156113e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113dd90612ceb565b60405180910390fd5b6113f18383836119a2565b6113fc600082611169565b6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461144c9190612d0b565b925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546114a39190612a6d565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61162d848484611300565b611639848484846119a7565b611678576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161166f90612db1565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b60606116a0826110f5565b6116df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116d690612e43565b60405180910390fd5b60006116e961167e565b905060008151116117095760405180602001604052806000815250611734565b8061171384611b3e565b604051602001611724929190612988565b6040516020818303038152906040525b915050919050565b6001816000016000828254019250508190555050565b600081600001549050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156117d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117c790612eaf565b60405180910390fd5b6117d9816110f5565b15611819576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161181090612f1b565b60405180910390fd5b611825600083836119a2565b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546118759190612a6d565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b611937826110f5565b611976576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161196d90612fad565b60405180910390fd5b8060066000848152602001908152602001600020908051906020019061199d929190611cb2565b505050565b505050565b60006119c88473ffffffffffffffffffffffffffffffffffffffff16611c9f565b15611b31578373ffffffffffffffffffffffffffffffffffffffff1663150b7a026119f1611161565b8786866040518563ffffffff1660e01b8152600401611a139493929190613022565b602060405180830381600087803b158015611a2d57600080fd5b505af1925050508015611a5e57506040513d601f19601f82011682018060405250810190611a5b9190613083565b60015b611ae1573d8060008114611a8e576040519150601f19603f3d011682016040523d82523d6000602084013e611a93565b606091505b50600081511415611ad9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ad090612db1565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611b36565b600190505b949350505050565b60606000821415611b86576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611c9a565b600082905060005b60008214611bb8578080611ba1906130b0565b915050600a82611bb19190613128565b9150611b8e565b60008167ffffffffffffffff811115611bd457611bd361212a565b5b6040519080825280601f01601f191660200182016040528015611c065781602001600182028036833780820191505090505b5090505b60008514611c9357600182611c1f9190612d0b565b9150600a85611c2e9190613159565b6030611c3a9190612a6d565b60f81b818381518110611c5057611c4f61318a565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a85611c8c9190613128565b9450611c0a565b8093505050505b919050565b600080823b905060008111915050919050565b828054611cbe90612444565b90600052602060002090601f016020900481019282611ce05760008555611d27565b82601f10611cf957805160ff1916838001178555611d27565b82800160010185558215611d27579182015b82811115611d26578251825591602001919060010190611d0b565b5b509050611d349190611d38565b5090565b5b80821115611d51576000816000905550600101611d39565b5090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611d9e81611d69565b8114611da957600080fd5b50565b600081359050611dbb81611d95565b92915050565b600060208284031215611dd757611dd6611d5f565b5b6000611de584828501611dac565b91505092915050565b60008115159050919050565b611e0381611dee565b82525050565b6000602082019050611e1e6000830184611dfa565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611e5e578082015181840152602081019050611e43565b83811115611e6d576000848401525b50505050565b6000601f19601f8301169050919050565b6000611e8f82611e24565b611e998185611e2f565b9350611ea9818560208601611e40565b611eb281611e73565b840191505092915050565b60006020820190508181036000830152611ed78184611e84565b905092915050565b6000819050919050565b611ef281611edf565b8114611efd57600080fd5b50565b600081359050611f0f81611ee9565b92915050565b600060208284031215611f2b57611f2a611d5f565b5b6000611f3984828501611f00565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611f6d82611f42565b9050919050565b611f7d81611f62565b82525050565b6000602082019050611f986000830184611f74565b92915050565b611fa781611f62565b8114611fb257600080fd5b50565b600081359050611fc481611f9e565b92915050565b60008060408385031215611fe157611fe0611d5f565b5b6000611fef85828601611fb5565b925050602061200085828601611f00565b9150509250929050565b60008060006060848603121561202357612022611d5f565b5b600061203186828701611fb5565b935050602061204286828701611fb5565b925050604061205386828701611f00565b9150509250925092565b60006020828403121561207357612072611d5f565b5b600061208184828501611fb5565b91505092915050565b61209381611edf565b82525050565b60006020820190506120ae600083018461208a565b92915050565b6120bd81611dee565b81146120c857600080fd5b50565b6000813590506120da816120b4565b92915050565b600080604083850312156120f7576120f6611d5f565b5b600061210585828601611fb5565b9250506020612116858286016120cb565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61216282611e73565b810181811067ffffffffffffffff821117156121815761218061212a565b5b80604052505050565b6000612194611d55565b90506121a08282612159565b919050565b600067ffffffffffffffff8211156121c0576121bf61212a565b5b6121c982611e73565b9050602081019050919050565b82818337600083830152505050565b60006121f86121f3846121a5565b61218a565b90508281526020810184848401111561221457612213612125565b5b61221f8482856121d6565b509392505050565b600082601f83011261223c5761223b612120565b5b813561224c8482602086016121e5565b91505092915050565b6000806000806080858703121561226f5761226e611d5f565b5b600061227d87828801611fb5565b945050602061228e87828801611fb5565b935050604061229f87828801611f00565b925050606085013567ffffffffffffffff8111156122c0576122bf611d64565b5b6122cc87828801612227565b91505092959194509250565b600067ffffffffffffffff8211156122f3576122f261212a565b5b6122fc82611e73565b9050602081019050919050565b600061231c612317846122d8565b61218a565b90508281526020810184848401111561233857612337612125565b5b6123438482856121d6565b509392505050565b600082601f8301126123605761235f612120565b5b8135612370848260208601612309565b91505092915050565b600080604083850312156123905761238f611d5f565b5b600061239e85828601611fb5565b925050602083013567ffffffffffffffff8111156123bf576123be611d64565b5b6123cb8582860161234b565b9150509250929050565b600080604083850312156123ec576123eb611d5f565b5b60006123fa85828601611fb5565b925050602061240b85828601611fb5565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061245c57607f821691505b602082108114156124705761246f612415565b5b50919050565b7f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b60006124d2602c83611e2f565b91506124dd82612476565b604082019050919050565b60006020820190508181036000830152612501816124c5565b9050919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000612564602183611e2f565b915061256f82612508565b604082019050919050565b6000602082019050818103600083015261259381612557565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000602082015250565b60006125f6603883611e2f565b91506126018261259a565b604082019050919050565b60006020820190508181036000830152612625816125e9565b9050919050565b7f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008201527f776e6572206e6f7220617070726f766564000000000000000000000000000000602082015250565b6000612688603183611e2f565b91506126938261262c565b604082019050919050565b600060208201905081810360008301526126b78161267b565b9050919050565b7f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460008201527f656e7420746f6b656e0000000000000000000000000000000000000000000000602082015250565b600061271a602983611e2f565b9150612725826126be565b604082019050919050565b600060208201905081810360008301526127498161270d565b9050919050565b7f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b60006127ac602a83611e2f565b91506127b782612750565b604082019050919050565b600060208201905081810360008301526127db8161279f565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000612818602083611e2f565b9150612823826127e2565b602082019050919050565b600060208201905081810360008301526128478161280b565b9050919050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b6000612884601983611e2f565b915061288f8261284e565b602082019050919050565b600060208201905081810360008301526128b381612877565b9050919050565b7f45524337323155524953746f726167653a2055524920717565727920666f722060008201527f6e6f6e6578697374656e7420746f6b656e000000000000000000000000000000602082015250565b6000612916603183611e2f565b9150612921826128ba565b604082019050919050565b6000602082019050818103600083015261294581612909565b9050919050565b600081905092915050565b600061296282611e24565b61296c818561294c565b935061297c818560208601611e40565b80840191505092915050565b60006129948285612957565b91506129a08284612957565b91508190509392505050565b7f4e6f742077686974656c6973746564206f7220616c6c6f77616e636520746f6f60008201527f206c6f772e000000000000000000000000000000000000000000000000000000602082015250565b6000612a08602583611e2f565b9150612a13826129ac565b604082019050919050565b60006020820190508181036000830152612a37816129fb565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612a7882611edf565b9150612a8383611edf565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612ab857612ab7612a3e565b5b828201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000612b1f602683611e2f565b9150612b2a82612ac3565b604082019050919050565b60006020820190508181036000830152612b4e81612b12565b9050919050565b7f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b6000612bb1602c83611e2f565b9150612bbc82612b55565b604082019050919050565b60006020820190508181036000830152612be081612ba4565b9050919050565b7f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960008201527f73206e6f74206f776e0000000000000000000000000000000000000000000000602082015250565b6000612c43602983611e2f565b9150612c4e82612be7565b604082019050919050565b60006020820190508181036000830152612c7281612c36565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000612cd5602483611e2f565b9150612ce082612c79565b604082019050919050565b60006020820190508181036000830152612d0481612cc8565b9050919050565b6000612d1682611edf565b9150612d2183611edf565b925082821015612d3457612d33612a3e565b5b828203905092915050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b6000612d9b603283611e2f565b9150612da682612d3f565b604082019050919050565b60006020820190508181036000830152612dca81612d8e565b9050919050565b7f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008201527f6e6578697374656e7420746f6b656e0000000000000000000000000000000000602082015250565b6000612e2d602f83611e2f565b9150612e3882612dd1565b604082019050919050565b60006020820190508181036000830152612e5c81612e20565b9050919050565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b6000612e99602083611e2f565b9150612ea482612e63565b602082019050919050565b60006020820190508181036000830152612ec881612e8c565b9050919050565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b6000612f05601c83611e2f565b9150612f1082612ecf565b602082019050919050565b60006020820190508181036000830152612f3481612ef8565b9050919050565b7f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60008201527f6578697374656e7420746f6b656e000000000000000000000000000000000000602082015250565b6000612f97602e83611e2f565b9150612fa282612f3b565b604082019050919050565b60006020820190508181036000830152612fc681612f8a565b9050919050565b600081519050919050565b600082825260208201905092915050565b6000612ff482612fcd565b612ffe8185612fd8565b935061300e818560208601611e40565b61301781611e73565b840191505092915050565b60006080820190506130376000830187611f74565b6130446020830186611f74565b613051604083018561208a565b81810360608301526130638184612fe9565b905095945050505050565b60008151905061307d81611d95565b92915050565b60006020828403121561309957613098611d5f565b5b60006130a78482850161306e565b91505092915050565b60006130bb82611edf565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156130ee576130ed612a3e565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061313382611edf565b915061313e83611edf565b92508261314e5761314d6130f9565b5b828204905092915050565b600061316482611edf565b915061316f83611edf565b92508261317f5761317e6130f9565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220ae6a0c19e4761abd4f74385ce90f5361310d36f02bdeb163e508758a333cc0a964736f6c63430008090033",
	deployedBytecode:
		"0x608060405234801561001057600080fd5b50600436106101165760003560e01c80638da5cb5b116100a2578063b88d4fde11610071578063b88d4fde146102cb578063c87b56dd146102e7578063d0def52114610317578063e985e9c514610333578063f2fde38b1461036357610116565b80638da5cb5b1461025757806395d89b41146102755780639ce3899814610293578063a22cb465146102af57610116565b806323b872dd116100e957806323b872dd146101b557806342842e0e146101d15780636352211e146101ed57806370a082311461021d578063715018a61461024d57610116565b806301ffc9a71461011b57806306fdde031461014b578063081812fc14610169578063095ea7b314610199575b600080fd5b61013560048036038101906101309190611dc1565b61037f565b6040516101429190611e09565b60405180910390f35b610153610461565b6040516101609190611ebd565b60405180910390f35b610183600480360381019061017e9190611f15565b6104f3565b6040516101909190611f83565b60405180910390f35b6101b360048036038101906101ae9190611fca565b610578565b005b6101cf60048036038101906101ca919061200a565b610690565b005b6101eb60048036038101906101e6919061200a565b6106f0565b005b61020760048036038101906102029190611f15565b610710565b6040516102149190611f83565b60405180910390f35b6102376004803603810190610232919061205d565b6107c2565b6040516102449190612099565b60405180910390f35b61025561087a565b005b61025f610902565b60405161026c9190611f83565b60405180910390f35b61027d61092c565b60405161028a9190611ebd565b60405180910390f35b6102ad60048036038101906102a89190611fca565b6109be565b005b6102c960048036038101906102c491906120e0565b610a82565b005b6102e560048036038101906102e09190612255565b610c03565b005b61030160048036038101906102fc9190611f15565b610c65565b60405161030e9190611ebd565b60405180910390f35b610331600480360381019061032c9190612379565b610db7565b005b61034d600480360381019061034891906123d5565b610eff565b60405161035a9190611e09565b60405180910390f35b61037d6004803603810190610378919061205d565b610f93565b005b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061044a57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061045a57506104598261108b565b5b9050919050565b60606000805461047090612444565b80601f016020809104026020016040519081016040528092919081815260200182805461049c90612444565b80156104e95780601f106104be576101008083540402835291602001916104e9565b820191906000526020600020905b8154815290600101906020018083116104cc57829003601f168201915b5050505050905090565b60006104fe826110f5565b61053d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610534906124e8565b60405180910390fd5b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061058382610710565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156105f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105eb9061257a565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610613611161565b73ffffffffffffffffffffffffffffffffffffffff16148061064257506106418161063c611161565b610eff565b5b610681576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106789061260c565b60405180910390fd5b61068b8383611169565b505050565b6106a161069b611161565b82611222565b6106e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d79061269e565b60405180910390fd5b6106eb838383611300565b505050565b61070b83838360405180602001604052806000815250610c03565b505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156107b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b090612730565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610833576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082a906127c2565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610882611161565b73ffffffffffffffffffffffffffffffffffffffff166108a0610902565b73ffffffffffffffffffffffffffffffffffffffff16146108f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ed9061282e565b60405180910390fd5b610900600061155c565b565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606001805461093b90612444565b80601f016020809104026020016040519081016040528092919081815260200182805461096790612444565b80156109b45780601f10610989576101008083540402835291602001916109b4565b820191906000526020600020905b81548152906001019060200180831161099757829003601f168201915b5050505050905090565b6109c6611161565b73ffffffffffffffffffffffffffffffffffffffff166109e4610902565b73ffffffffffffffffffffffffffffffffffffffff1614610a3a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a319061282e565b60405180910390fd5b80600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b610a8a611161565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610af8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aef9061289a565b60405180910390fd5b8060056000610b05611161565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610bb2611161565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610bf79190611e09565b60405180910390a35050565b610c14610c0e611161565b83611222565b610c53576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4a9061269e565b60405180910390fd5b610c5f84848484611622565b50505050565b6060610c70826110f5565b610caf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca69061292c565b60405180910390fd5b6000600660008481526020019081526020016000208054610ccf90612444565b80601f0160208091040260200160405190810160405280929190818152602001828054610cfb90612444565b8015610d485780601f10610d1d57610100808354040283529160200191610d48565b820191906000526020600020905b815481529060010190602001808311610d2b57829003601f168201915b505050505090506000610d5961167e565b9050600081511415610d6f578192505050610db2565b600082511115610da4578082604051602001610d8c929190612988565b60405160208183030381529060405292505050610db2565b610dad84611695565b925050505b919050565b600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410610e77576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6e90612a1e565b60405180910390fd5b610e81600861173c565b6000610e8d6008611752565b9050610e998382611760565b610ea3818361192e565b6001600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ef39190612a6d565b92505081905550505050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b610f9b611161565b73ffffffffffffffffffffffffffffffffffffffff16610fb9610902565b73ffffffffffffffffffffffffffffffffffffffff161461100f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110069061282e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561107f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161107690612b35565b60405180910390fd5b6110888161155c565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff166111dc83610710565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600061122d826110f5565b61126c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161126390612bc7565b60405180910390fd5b600061127783610710565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806112e657508373ffffffffffffffffffffffffffffffffffffffff166112ce846104f3565b73ffffffffffffffffffffffffffffffffffffffff16145b806112f757506112f68185610eff565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff1661132082610710565b73ffffffffffffffffffffffffffffffffffffffff1614611376576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161136d90612c59565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156113e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113dd90612ceb565b60405180910390fd5b6113f18383836119a2565b6113fc600082611169565b6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461144c9190612d0b565b925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546114a39190612a6d565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61162d848484611300565b611639848484846119a7565b611678576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161166f90612db1565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b60606116a0826110f5565b6116df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116d690612e43565b60405180910390fd5b60006116e961167e565b905060008151116117095760405180602001604052806000815250611734565b8061171384611b3e565b604051602001611724929190612988565b6040516020818303038152906040525b915050919050565b6001816000016000828254019250508190555050565b600081600001549050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156117d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117c790612eaf565b60405180910390fd5b6117d9816110f5565b15611819576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161181090612f1b565b60405180910390fd5b611825600083836119a2565b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546118759190612a6d565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b611937826110f5565b611976576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161196d90612fad565b60405180910390fd5b8060066000848152602001908152602001600020908051906020019061199d929190611cb2565b505050565b505050565b60006119c88473ffffffffffffffffffffffffffffffffffffffff16611c9f565b15611b31578373ffffffffffffffffffffffffffffffffffffffff1663150b7a026119f1611161565b8786866040518563ffffffff1660e01b8152600401611a139493929190613022565b602060405180830381600087803b158015611a2d57600080fd5b505af1925050508015611a5e57506040513d601f19601f82011682018060405250810190611a5b9190613083565b60015b611ae1573d8060008114611a8e576040519150601f19603f3d011682016040523d82523d6000602084013e611a93565b606091505b50600081511415611ad9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ad090612db1565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611b36565b600190505b949350505050565b60606000821415611b86576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611c9a565b600082905060005b60008214611bb8578080611ba1906130b0565b915050600a82611bb19190613128565b9150611b8e565b60008167ffffffffffffffff811115611bd457611bd361212a565b5b6040519080825280601f01601f191660200182016040528015611c065781602001600182028036833780820191505090505b5090505b60008514611c9357600182611c1f9190612d0b565b9150600a85611c2e9190613159565b6030611c3a9190612a6d565b60f81b818381518110611c5057611c4f61318a565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a85611c8c9190613128565b9450611c0a565b8093505050505b919050565b600080823b905060008111915050919050565b828054611cbe90612444565b90600052602060002090601f016020900481019282611ce05760008555611d27565b82601f10611cf957805160ff1916838001178555611d27565b82800160010185558215611d27579182015b82811115611d26578251825591602001919060010190611d0b565b5b509050611d349190611d38565b5090565b5b80821115611d51576000816000905550600101611d39565b5090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611d9e81611d69565b8114611da957600080fd5b50565b600081359050611dbb81611d95565b92915050565b600060208284031215611dd757611dd6611d5f565b5b6000611de584828501611dac565b91505092915050565b60008115159050919050565b611e0381611dee565b82525050565b6000602082019050611e1e6000830184611dfa565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611e5e578082015181840152602081019050611e43565b83811115611e6d576000848401525b50505050565b6000601f19601f8301169050919050565b6000611e8f82611e24565b611e998185611e2f565b9350611ea9818560208601611e40565b611eb281611e73565b840191505092915050565b60006020820190508181036000830152611ed78184611e84565b905092915050565b6000819050919050565b611ef281611edf565b8114611efd57600080fd5b50565b600081359050611f0f81611ee9565b92915050565b600060208284031215611f2b57611f2a611d5f565b5b6000611f3984828501611f00565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611f6d82611f42565b9050919050565b611f7d81611f62565b82525050565b6000602082019050611f986000830184611f74565b92915050565b611fa781611f62565b8114611fb257600080fd5b50565b600081359050611fc481611f9e565b92915050565b60008060408385031215611fe157611fe0611d5f565b5b6000611fef85828601611fb5565b925050602061200085828601611f00565b9150509250929050565b60008060006060848603121561202357612022611d5f565b5b600061203186828701611fb5565b935050602061204286828701611fb5565b925050604061205386828701611f00565b9150509250925092565b60006020828403121561207357612072611d5f565b5b600061208184828501611fb5565b91505092915050565b61209381611edf565b82525050565b60006020820190506120ae600083018461208a565b92915050565b6120bd81611dee565b81146120c857600080fd5b50565b6000813590506120da816120b4565b92915050565b600080604083850312156120f7576120f6611d5f565b5b600061210585828601611fb5565b9250506020612116858286016120cb565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61216282611e73565b810181811067ffffffffffffffff821117156121815761218061212a565b5b80604052505050565b6000612194611d55565b90506121a08282612159565b919050565b600067ffffffffffffffff8211156121c0576121bf61212a565b5b6121c982611e73565b9050602081019050919050565b82818337600083830152505050565b60006121f86121f3846121a5565b61218a565b90508281526020810184848401111561221457612213612125565b5b61221f8482856121d6565b509392505050565b600082601f83011261223c5761223b612120565b5b813561224c8482602086016121e5565b91505092915050565b6000806000806080858703121561226f5761226e611d5f565b5b600061227d87828801611fb5565b945050602061228e87828801611fb5565b935050604061229f87828801611f00565b925050606085013567ffffffffffffffff8111156122c0576122bf611d64565b5b6122cc87828801612227565b91505092959194509250565b600067ffffffffffffffff8211156122f3576122f261212a565b5b6122fc82611e73565b9050602081019050919050565b600061231c612317846122d8565b61218a565b90508281526020810184848401111561233857612337612125565b5b6123438482856121d6565b509392505050565b600082601f8301126123605761235f612120565b5b8135612370848260208601612309565b91505092915050565b600080604083850312156123905761238f611d5f565b5b600061239e85828601611fb5565b925050602083013567ffffffffffffffff8111156123bf576123be611d64565b5b6123cb8582860161234b565b9150509250929050565b600080604083850312156123ec576123eb611d5f565b5b60006123fa85828601611fb5565b925050602061240b85828601611fb5565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061245c57607f821691505b602082108114156124705761246f612415565b5b50919050565b7f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b60006124d2602c83611e2f565b91506124dd82612476565b604082019050919050565b60006020820190508181036000830152612501816124c5565b9050919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000612564602183611e2f565b915061256f82612508565b604082019050919050565b6000602082019050818103600083015261259381612557565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000602082015250565b60006125f6603883611e2f565b91506126018261259a565b604082019050919050565b60006020820190508181036000830152612625816125e9565b9050919050565b7f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008201527f776e6572206e6f7220617070726f766564000000000000000000000000000000602082015250565b6000612688603183611e2f565b91506126938261262c565b604082019050919050565b600060208201905081810360008301526126b78161267b565b9050919050565b7f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460008201527f656e7420746f6b656e0000000000000000000000000000000000000000000000602082015250565b600061271a602983611e2f565b9150612725826126be565b604082019050919050565b600060208201905081810360008301526127498161270d565b9050919050565b7f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b60006127ac602a83611e2f565b91506127b782612750565b604082019050919050565b600060208201905081810360008301526127db8161279f565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000612818602083611e2f565b9150612823826127e2565b602082019050919050565b600060208201905081810360008301526128478161280b565b9050919050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b6000612884601983611e2f565b915061288f8261284e565b602082019050919050565b600060208201905081810360008301526128b381612877565b9050919050565b7f45524337323155524953746f726167653a2055524920717565727920666f722060008201527f6e6f6e6578697374656e7420746f6b656e000000000000000000000000000000602082015250565b6000612916603183611e2f565b9150612921826128ba565b604082019050919050565b6000602082019050818103600083015261294581612909565b9050919050565b600081905092915050565b600061296282611e24565b61296c818561294c565b935061297c818560208601611e40565b80840191505092915050565b60006129948285612957565b91506129a08284612957565b91508190509392505050565b7f4e6f742077686974656c6973746564206f7220616c6c6f77616e636520746f6f60008201527f206c6f772e000000000000000000000000000000000000000000000000000000602082015250565b6000612a08602583611e2f565b9150612a13826129ac565b604082019050919050565b60006020820190508181036000830152612a37816129fb565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612a7882611edf565b9150612a8383611edf565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612ab857612ab7612a3e565b5b828201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000612b1f602683611e2f565b9150612b2a82612ac3565b604082019050919050565b60006020820190508181036000830152612b4e81612b12565b9050919050565b7f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b6000612bb1602c83611e2f565b9150612bbc82612b55565b604082019050919050565b60006020820190508181036000830152612be081612ba4565b9050919050565b7f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960008201527f73206e6f74206f776e0000000000000000000000000000000000000000000000602082015250565b6000612c43602983611e2f565b9150612c4e82612be7565b604082019050919050565b60006020820190508181036000830152612c7281612c36565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000612cd5602483611e2f565b9150612ce082612c79565b604082019050919050565b60006020820190508181036000830152612d0481612cc8565b9050919050565b6000612d1682611edf565b9150612d2183611edf565b925082821015612d3457612d33612a3e565b5b828203905092915050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b6000612d9b603283611e2f565b9150612da682612d3f565b604082019050919050565b60006020820190508181036000830152612dca81612d8e565b9050919050565b7f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008201527f6e6578697374656e7420746f6b656e0000000000000000000000000000000000602082015250565b6000612e2d602f83611e2f565b9150612e3882612dd1565b604082019050919050565b60006020820190508181036000830152612e5c81612e20565b9050919050565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b6000612e99602083611e2f565b9150612ea482612e63565b602082019050919050565b60006020820190508181036000830152612ec881612e8c565b9050919050565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b6000612f05601c83611e2f565b9150612f1082612ecf565b602082019050919050565b60006020820190508181036000830152612f3481612ef8565b9050919050565b7f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60008201527f6578697374656e7420746f6b656e000000000000000000000000000000000000602082015250565b6000612f97602e83611e2f565b9150612fa282612f3b565b604082019050919050565b60006020820190508181036000830152612fc681612f8a565b9050919050565b600081519050919050565b600082825260208201905092915050565b6000612ff482612fcd565b612ffe8185612fd8565b935061300e818560208601611e40565b61301781611e73565b840191505092915050565b60006080820190506130376000830187611f74565b6130446020830186611f74565b613051604083018561208a565b81810360608301526130638184612fe9565b905095945050505050565b60008151905061307d81611d95565b92915050565b60006020828403121561309957613098611d5f565b5b60006130a78482850161306e565b91505092915050565b60006130bb82611edf565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156130ee576130ed612a3e565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061313382611edf565b915061313e83611edf565b92508261314e5761314d6130f9565b5b828204905092915050565b600061316482611edf565b915061316f83611edf565b92508261317f5761317e6130f9565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220ae6a0c19e4761abd4f74385ce90f5361310d36f02bdeb163e508758a333cc0a964736f6c63430008090033",
	immutableReferences: {},
	generatedSources: [
		{
			ast: {
				nodeType: "YulBlock",
				src: "0:516:14",
				statements: [
					{
						body: {
							nodeType: "YulBlock",
							src: "35:152:14",
							statements: [
								{
									expression: {
										arguments: [
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "52:1:14",
												type: "",
												value: "0",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "55:77:14",
												type: "",
												value:
													"35408467139433450592217433187231851964531694900788300625387963629091585785856",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "45:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "45:88:14",
									},
									nodeType: "YulExpressionStatement",
									src: "45:88:14",
								},
								{
									expression: {
										arguments: [
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "149:1:14",
												type: "",
												value: "4",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "152:4:14",
												type: "",
												value: "0x22",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "142:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "142:15:14",
									},
									nodeType: "YulExpressionStatement",
									src: "142:15:14",
								},
								{
									expression: {
										arguments: [
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "173:1:14",
												type: "",
												value: "0",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "176:4:14",
												type: "",
												value: "0x24",
											},
										],
										functionName: {
											name: "revert",
											nodeType: "YulIdentifier",
											src: "166:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "166:15:14",
									},
									nodeType: "YulExpressionStatement",
									src: "166:15:14",
								},
							],
						},
						name: "panic_error_0x22",
						nodeType: "YulFunctionDefinition",
						src: "7:180:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "244:269:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "254:22:14",
									value: {
										arguments: [
											{
												name: "data",
												nodeType: "YulIdentifier",
												src: "268:4:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "274:1:14",
												type: "",
												value: "2",
											},
										],
										functionName: {
											name: "div",
											nodeType: "YulIdentifier",
											src: "264:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "264:12:14",
									},
									variableNames: [
										{
											name: "length",
											nodeType: "YulIdentifier",
											src: "254:6:14",
										},
									],
								},
								{
									nodeType: "YulVariableDeclaration",
									src: "285:38:14",
									value: {
										arguments: [
											{
												name: "data",
												nodeType: "YulIdentifier",
												src: "315:4:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "321:1:14",
												type: "",
												value: "1",
											},
										],
										functionName: {
											name: "and",
											nodeType: "YulIdentifier",
											src: "311:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "311:12:14",
									},
									variables: [
										{
											name: "outOfPlaceEncoding",
											nodeType: "YulTypedName",
											src: "289:18:14",
											type: "",
										},
									],
								},
								{
									body: {
										nodeType: "YulBlock",
										src: "362:51:14",
										statements: [
											{
												nodeType: "YulAssignment",
												src: "376:27:14",
												value: {
													arguments: [
														{
															name: "length",
															nodeType: "YulIdentifier",
															src: "390:6:14",
														},
														{
															kind: "number",
															nodeType: "YulLiteral",
															src: "398:4:14",
															type: "",
															value: "0x7f",
														},
													],
													functionName: {
														name: "and",
														nodeType: "YulIdentifier",
														src: "386:3:14",
													},
													nodeType: "YulFunctionCall",
													src: "386:17:14",
												},
												variableNames: [
													{
														name: "length",
														nodeType: "YulIdentifier",
														src: "376:6:14",
													},
												],
											},
										],
									},
									condition: {
										arguments: [
											{
												name: "outOfPlaceEncoding",
												nodeType: "YulIdentifier",
												src: "342:18:14",
											},
										],
										functionName: {
											name: "iszero",
											nodeType: "YulIdentifier",
											src: "335:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "335:26:14",
									},
									nodeType: "YulIf",
									src: "332:81:14",
								},
								{
									body: {
										nodeType: "YulBlock",
										src: "465:42:14",
										statements: [
											{
												expression: {
													arguments: [],
													functionName: {
														name: "panic_error_0x22",
														nodeType: "YulIdentifier",
														src: "479:16:14",
													},
													nodeType: "YulFunctionCall",
													src: "479:18:14",
												},
												nodeType: "YulExpressionStatement",
												src: "479:18:14",
											},
										],
									},
									condition: {
										arguments: [
											{
												name: "outOfPlaceEncoding",
												nodeType: "YulIdentifier",
												src: "429:18:14",
											},
											{
												arguments: [
													{
														name: "length",
														nodeType: "YulIdentifier",
														src: "452:6:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "460:2:14",
														type: "",
														value: "32",
													},
												],
												functionName: {
													name: "lt",
													nodeType: "YulIdentifier",
													src: "449:2:14",
												},
												nodeType: "YulFunctionCall",
												src: "449:14:14",
											},
										],
										functionName: {
											name: "eq",
											nodeType: "YulIdentifier",
											src: "426:2:14",
										},
										nodeType: "YulFunctionCall",
										src: "426:38:14",
									},
									nodeType: "YulIf",
									src: "423:84:14",
								},
							],
						},
						name: "extract_byte_array_length",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "data",
								nodeType: "YulTypedName",
								src: "228:4:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "length",
								nodeType: "YulTypedName",
								src: "237:6:14",
								type: "",
							},
						],
						src: "193:320:14",
					},
				],
			},
			contents:
				"{\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n",
			id: 14,
			language: "Yul",
			name: "#utility.yul",
		},
	],
	deployedGeneratedSources: [
		{
			ast: {
				nodeType: "YulBlock",
				src: "0:36655:14",
				statements: [
					{
						body: {
							nodeType: "YulBlock",
							src: "47:35:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "57:19:14",
									value: {
										arguments: [
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "73:2:14",
												type: "",
												value: "64",
											},
										],
										functionName: {
											name: "mload",
											nodeType: "YulIdentifier",
											src: "67:5:14",
										},
										nodeType: "YulFunctionCall",
										src: "67:9:14",
									},
									variableNames: [
										{
											name: "memPtr",
											nodeType: "YulIdentifier",
											src: "57:6:14",
										},
									],
								},
							],
						},
						name: "allocate_unbounded",
						nodeType: "YulFunctionDefinition",
						returnVariables: [
							{
								name: "memPtr",
								nodeType: "YulTypedName",
								src: "40:6:14",
								type: "",
							},
						],
						src: "7:75:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "177:28:14",
							statements: [
								{
									expression: {
										arguments: [
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "194:1:14",
												type: "",
												value: "0",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "197:1:14",
												type: "",
												value: "0",
											},
										],
										functionName: {
											name: "revert",
											nodeType: "YulIdentifier",
											src: "187:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "187:12:14",
									},
									nodeType: "YulExpressionStatement",
									src: "187:12:14",
								},
							],
						},
						name:
							"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
						nodeType: "YulFunctionDefinition",
						src: "88:117:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "300:28:14",
							statements: [
								{
									expression: {
										arguments: [
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "317:1:14",
												type: "",
												value: "0",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "320:1:14",
												type: "",
												value: "0",
											},
										],
										functionName: {
											name: "revert",
											nodeType: "YulIdentifier",
											src: "310:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "310:12:14",
									},
									nodeType: "YulExpressionStatement",
									src: "310:12:14",
								},
							],
						},
						name:
							"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
						nodeType: "YulFunctionDefinition",
						src: "211:117:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "378:105:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "388:89:14",
									value: {
										arguments: [
											{
												name: "value",
												nodeType: "YulIdentifier",
												src: "403:5:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "410:66:14",
												type: "",
												value:
													"0xffffffff00000000000000000000000000000000000000000000000000000000",
											},
										],
										functionName: {
											name: "and",
											nodeType: "YulIdentifier",
											src: "399:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "399:78:14",
									},
									variableNames: [
										{
											name: "cleaned",
											nodeType: "YulIdentifier",
											src: "388:7:14",
										},
									],
								},
							],
						},
						name: "cleanup_t_bytes4",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "value",
								nodeType: "YulTypedName",
								src: "360:5:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "cleaned",
								nodeType: "YulTypedName",
								src: "370:7:14",
								type: "",
							},
						],
						src: "334:149:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "531:78:14",
							statements: [
								{
									body: {
										nodeType: "YulBlock",
										src: "587:16:14",
										statements: [
											{
												expression: {
													arguments: [
														{
															kind: "number",
															nodeType: "YulLiteral",
															src: "596:1:14",
															type: "",
															value: "0",
														},
														{
															kind: "number",
															nodeType: "YulLiteral",
															src: "599:1:14",
															type: "",
															value: "0",
														},
													],
													functionName: {
														name: "revert",
														nodeType: "YulIdentifier",
														src: "589:6:14",
													},
													nodeType: "YulFunctionCall",
													src: "589:12:14",
												},
												nodeType: "YulExpressionStatement",
												src: "589:12:14",
											},
										],
									},
									condition: {
										arguments: [
											{
												arguments: [
													{
														name: "value",
														nodeType: "YulIdentifier",
														src: "554:5:14",
													},
													{
														arguments: [
															{
																name: "value",
																nodeType: "YulIdentifier",
																src: "578:5:14",
															},
														],
														functionName: {
															name: "cleanup_t_bytes4",
															nodeType: "YulIdentifier",
															src: "561:16:14",
														},
														nodeType: "YulFunctionCall",
														src: "561:23:14",
													},
												],
												functionName: {
													name: "eq",
													nodeType: "YulIdentifier",
													src: "551:2:14",
												},
												nodeType: "YulFunctionCall",
												src: "551:34:14",
											},
										],
										functionName: {
											name: "iszero",
											nodeType: "YulIdentifier",
											src: "544:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "544:42:14",
									},
									nodeType: "YulIf",
									src: "541:62:14",
								},
							],
						},
						name: "validator_revert_t_bytes4",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "value",
								nodeType: "YulTypedName",
								src: "524:5:14",
								type: "",
							},
						],
						src: "489:120:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "666:86:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "676:29:14",
									value: {
										arguments: [
											{
												name: "offset",
												nodeType: "YulIdentifier",
												src: "698:6:14",
											},
										],
										functionName: {
											name: "calldataload",
											nodeType: "YulIdentifier",
											src: "685:12:14",
										},
										nodeType: "YulFunctionCall",
										src: "685:20:14",
									},
									variableNames: [
										{
											name: "value",
											nodeType: "YulIdentifier",
											src: "676:5:14",
										},
									],
								},
								{
									expression: {
										arguments: [
											{
												name: "value",
												nodeType: "YulIdentifier",
												src: "740:5:14",
											},
										],
										functionName: {
											name: "validator_revert_t_bytes4",
											nodeType: "YulIdentifier",
											src: "714:25:14",
										},
										nodeType: "YulFunctionCall",
										src: "714:32:14",
									},
									nodeType: "YulExpressionStatement",
									src: "714:32:14",
								},
							],
						},
						name: "abi_decode_t_bytes4",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "offset",
								nodeType: "YulTypedName",
								src: "644:6:14",
								type: "",
							},
							{
								name: "end",
								nodeType: "YulTypedName",
								src: "652:3:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "value",
								nodeType: "YulTypedName",
								src: "660:5:14",
								type: "",
							},
						],
						src: "615:137:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "823:262:14",
							statements: [
								{
									body: {
										nodeType: "YulBlock",
										src: "869:83:14",
										statements: [
											{
												expression: {
													arguments: [],
													functionName: {
														name:
															"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
														nodeType: "YulIdentifier",
														src: "871:77:14",
													},
													nodeType: "YulFunctionCall",
													src: "871:79:14",
												},
												nodeType: "YulExpressionStatement",
												src: "871:79:14",
											},
										],
									},
									condition: {
										arguments: [
											{
												arguments: [
													{
														name: "dataEnd",
														nodeType: "YulIdentifier",
														src: "844:7:14",
													},
													{
														name: "headStart",
														nodeType: "YulIdentifier",
														src: "853:9:14",
													},
												],
												functionName: {
													name: "sub",
													nodeType: "YulIdentifier",
													src: "840:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "840:23:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "865:2:14",
												type: "",
												value: "32",
											},
										],
										functionName: {
											name: "slt",
											nodeType: "YulIdentifier",
											src: "836:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "836:32:14",
									},
									nodeType: "YulIf",
									src: "833:119:14",
								},
								{
									nodeType: "YulBlock",
									src: "962:116:14",
									statements: [
										{
											nodeType: "YulVariableDeclaration",
											src: "977:15:14",
											value: {
												kind: "number",
												nodeType: "YulLiteral",
												src: "991:1:14",
												type: "",
												value: "0",
											},
											variables: [
												{
													name: "offset",
													nodeType: "YulTypedName",
													src: "981:6:14",
													type: "",
												},
											],
										},
										{
											nodeType: "YulAssignment",
											src: "1006:62:14",
											value: {
												arguments: [
													{
														arguments: [
															{
																name: "headStart",
																nodeType: "YulIdentifier",
																src: "1040:9:14",
															},
															{
																name: "offset",
																nodeType: "YulIdentifier",
																src: "1051:6:14",
															},
														],
														functionName: {
															name: "add",
															nodeType: "YulIdentifier",
															src: "1036:3:14",
														},
														nodeType: "YulFunctionCall",
														src: "1036:22:14",
													},
													{
														name: "dataEnd",
														nodeType: "YulIdentifier",
														src: "1060:7:14",
													},
												],
												functionName: {
													name: "abi_decode_t_bytes4",
													nodeType: "YulIdentifier",
													src: "1016:19:14",
												},
												nodeType: "YulFunctionCall",
												src: "1016:52:14",
											},
											variableNames: [
												{
													name: "value0",
													nodeType: "YulIdentifier",
													src: "1006:6:14",
												},
											],
										},
									],
								},
							],
						},
						name: "abi_decode_tuple_t_bytes4",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "headStart",
								nodeType: "YulTypedName",
								src: "793:9:14",
								type: "",
							},
							{
								name: "dataEnd",
								nodeType: "YulTypedName",
								src: "804:7:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "value0",
								nodeType: "YulTypedName",
								src: "816:6:14",
								type: "",
							},
						],
						src: "758:327:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "1133:48:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "1143:32:14",
									value: {
										arguments: [
											{
												arguments: [
													{
														name: "value",
														nodeType: "YulIdentifier",
														src: "1168:5:14",
													},
												],
												functionName: {
													name: "iszero",
													nodeType: "YulIdentifier",
													src: "1161:6:14",
												},
												nodeType: "YulFunctionCall",
												src: "1161:13:14",
											},
										],
										functionName: {
											name: "iszero",
											nodeType: "YulIdentifier",
											src: "1154:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "1154:21:14",
									},
									variableNames: [
										{
											name: "cleaned",
											nodeType: "YulIdentifier",
											src: "1143:7:14",
										},
									],
								},
							],
						},
						name: "cleanup_t_bool",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "value",
								nodeType: "YulTypedName",
								src: "1115:5:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "cleaned",
								nodeType: "YulTypedName",
								src: "1125:7:14",
								type: "",
							},
						],
						src: "1091:90:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "1246:50:14",
							statements: [
								{
									expression: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "1263:3:14",
											},
											{
												arguments: [
													{
														name: "value",
														nodeType: "YulIdentifier",
														src: "1283:5:14",
													},
												],
												functionName: {
													name: "cleanup_t_bool",
													nodeType: "YulIdentifier",
													src: "1268:14:14",
												},
												nodeType: "YulFunctionCall",
												src: "1268:21:14",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "1256:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "1256:34:14",
									},
									nodeType: "YulExpressionStatement",
									src: "1256:34:14",
								},
							],
						},
						name: "abi_encode_t_bool_to_t_bool_fromStack",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "value",
								nodeType: "YulTypedName",
								src: "1234:5:14",
								type: "",
							},
							{
								name: "pos",
								nodeType: "YulTypedName",
								src: "1241:3:14",
								type: "",
							},
						],
						src: "1187:109:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "1394:118:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "1404:26:14",
									value: {
										arguments: [
											{
												name: "headStart",
												nodeType: "YulIdentifier",
												src: "1416:9:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "1427:2:14",
												type: "",
												value: "32",
											},
										],
										functionName: {
											name: "add",
											nodeType: "YulIdentifier",
											src: "1412:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "1412:18:14",
									},
									variableNames: [
										{
											name: "tail",
											nodeType: "YulIdentifier",
											src: "1404:4:14",
										},
									],
								},
								{
									expression: {
										arguments: [
											{
												name: "value0",
												nodeType: "YulIdentifier",
												src: "1478:6:14",
											},
											{
												arguments: [
													{
														name: "headStart",
														nodeType: "YulIdentifier",
														src: "1491:9:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "1502:1:14",
														type: "",
														value: "0",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "1487:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "1487:17:14",
											},
										],
										functionName: {
											name: "abi_encode_t_bool_to_t_bool_fromStack",
											nodeType: "YulIdentifier",
											src: "1440:37:14",
										},
										nodeType: "YulFunctionCall",
										src: "1440:65:14",
									},
									nodeType: "YulExpressionStatement",
									src: "1440:65:14",
								},
							],
						},
						name: "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "headStart",
								nodeType: "YulTypedName",
								src: "1366:9:14",
								type: "",
							},
							{
								name: "value0",
								nodeType: "YulTypedName",
								src: "1378:6:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "tail",
								nodeType: "YulTypedName",
								src: "1389:4:14",
								type: "",
							},
						],
						src: "1302:210:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "1577:40:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "1588:22:14",
									value: {
										arguments: [
											{
												name: "value",
												nodeType: "YulIdentifier",
												src: "1604:5:14",
											},
										],
										functionName: {
											name: "mload",
											nodeType: "YulIdentifier",
											src: "1598:5:14",
										},
										nodeType: "YulFunctionCall",
										src: "1598:12:14",
									},
									variableNames: [
										{
											name: "length",
											nodeType: "YulIdentifier",
											src: "1588:6:14",
										},
									],
								},
							],
						},
						name: "array_length_t_string_memory_ptr",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "value",
								nodeType: "YulTypedName",
								src: "1560:5:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "length",
								nodeType: "YulTypedName",
								src: "1570:6:14",
								type: "",
							},
						],
						src: "1518:99:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "1719:73:14",
							statements: [
								{
									expression: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "1736:3:14",
											},
											{
												name: "length",
												nodeType: "YulIdentifier",
												src: "1741:6:14",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "1729:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "1729:19:14",
									},
									nodeType: "YulExpressionStatement",
									src: "1729:19:14",
								},
								{
									nodeType: "YulAssignment",
									src: "1757:29:14",
									value: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "1776:3:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "1781:4:14",
												type: "",
												value: "0x20",
											},
										],
										functionName: {
											name: "add",
											nodeType: "YulIdentifier",
											src: "1772:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "1772:14:14",
									},
									variableNames: [
										{
											name: "updated_pos",
											nodeType: "YulIdentifier",
											src: "1757:11:14",
										},
									],
								},
							],
						},
						name: "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "pos",
								nodeType: "YulTypedName",
								src: "1691:3:14",
								type: "",
							},
							{
								name: "length",
								nodeType: "YulTypedName",
								src: "1696:6:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "updated_pos",
								nodeType: "YulTypedName",
								src: "1707:11:14",
								type: "",
							},
						],
						src: "1623:169:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "1847:258:14",
							statements: [
								{
									nodeType: "YulVariableDeclaration",
									src: "1857:10:14",
									value: {
										kind: "number",
										nodeType: "YulLiteral",
										src: "1866:1:14",
										type: "",
										value: "0",
									},
									variables: [
										{
											name: "i",
											nodeType: "YulTypedName",
											src: "1861:1:14",
											type: "",
										},
									],
								},
								{
									body: {
										nodeType: "YulBlock",
										src: "1926:63:14",
										statements: [
											{
												expression: {
													arguments: [
														{
															arguments: [
																{
																	name: "dst",
																	nodeType: "YulIdentifier",
																	src: "1951:3:14",
																},
																{
																	name: "i",
																	nodeType: "YulIdentifier",
																	src: "1956:1:14",
																},
															],
															functionName: {
																name: "add",
																nodeType: "YulIdentifier",
																src: "1947:3:14",
															},
															nodeType: "YulFunctionCall",
															src: "1947:11:14",
														},
														{
															arguments: [
																{
																	arguments: [
																		{
																			name: "src",
																			nodeType: "YulIdentifier",
																			src: "1970:3:14",
																		},
																		{
																			name: "i",
																			nodeType: "YulIdentifier",
																			src: "1975:1:14",
																		},
																	],
																	functionName: {
																		name: "add",
																		nodeType: "YulIdentifier",
																		src: "1966:3:14",
																	},
																	nodeType: "YulFunctionCall",
																	src: "1966:11:14",
																},
															],
															functionName: {
																name: "mload",
																nodeType: "YulIdentifier",
																src: "1960:5:14",
															},
															nodeType: "YulFunctionCall",
															src: "1960:18:14",
														},
													],
													functionName: {
														name: "mstore",
														nodeType: "YulIdentifier",
														src: "1940:6:14",
													},
													nodeType: "YulFunctionCall",
													src: "1940:39:14",
												},
												nodeType: "YulExpressionStatement",
												src: "1940:39:14",
											},
										],
									},
									condition: {
										arguments: [
											{
												name: "i",
												nodeType: "YulIdentifier",
												src: "1887:1:14",
											},
											{
												name: "length",
												nodeType: "YulIdentifier",
												src: "1890:6:14",
											},
										],
										functionName: {
											name: "lt",
											nodeType: "YulIdentifier",
											src: "1884:2:14",
										},
										nodeType: "YulFunctionCall",
										src: "1884:13:14",
									},
									nodeType: "YulForLoop",
									post: {
										nodeType: "YulBlock",
										src: "1898:19:14",
										statements: [
											{
												nodeType: "YulAssignment",
												src: "1900:15:14",
												value: {
													arguments: [
														{
															name: "i",
															nodeType: "YulIdentifier",
															src: "1909:1:14",
														},
														{
															kind: "number",
															nodeType: "YulLiteral",
															src: "1912:2:14",
															type: "",
															value: "32",
														},
													],
													functionName: {
														name: "add",
														nodeType: "YulIdentifier",
														src: "1905:3:14",
													},
													nodeType: "YulFunctionCall",
													src: "1905:10:14",
												},
												variableNames: [
													{
														name: "i",
														nodeType: "YulIdentifier",
														src: "1900:1:14",
													},
												],
											},
										],
									},
									pre: {
										nodeType: "YulBlock",
										src: "1880:3:14",
										statements: [],
									},
									src: "1876:113:14",
								},
								{
									body: {
										nodeType: "YulBlock",
										src: "2023:76:14",
										statements: [
											{
												expression: {
													arguments: [
														{
															arguments: [
																{
																	name: "dst",
																	nodeType: "YulIdentifier",
																	src: "2073:3:14",
																},
																{
																	name: "length",
																	nodeType: "YulIdentifier",
																	src: "2078:6:14",
																},
															],
															functionName: {
																name: "add",
																nodeType: "YulIdentifier",
																src: "2069:3:14",
															},
															nodeType: "YulFunctionCall",
															src: "2069:16:14",
														},
														{
															kind: "number",
															nodeType: "YulLiteral",
															src: "2087:1:14",
															type: "",
															value: "0",
														},
													],
													functionName: {
														name: "mstore",
														nodeType: "YulIdentifier",
														src: "2062:6:14",
													},
													nodeType: "YulFunctionCall",
													src: "2062:27:14",
												},
												nodeType: "YulExpressionStatement",
												src: "2062:27:14",
											},
										],
									},
									condition: {
										arguments: [
											{
												name: "i",
												nodeType: "YulIdentifier",
												src: "2004:1:14",
											},
											{
												name: "length",
												nodeType: "YulIdentifier",
												src: "2007:6:14",
											},
										],
										functionName: {
											name: "gt",
											nodeType: "YulIdentifier",
											src: "2001:2:14",
										},
										nodeType: "YulFunctionCall",
										src: "2001:13:14",
									},
									nodeType: "YulIf",
									src: "1998:101:14",
								},
							],
						},
						name: "copy_memory_to_memory",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "src",
								nodeType: "YulTypedName",
								src: "1829:3:14",
								type: "",
							},
							{
								name: "dst",
								nodeType: "YulTypedName",
								src: "1834:3:14",
								type: "",
							},
							{
								name: "length",
								nodeType: "YulTypedName",
								src: "1839:6:14",
								type: "",
							},
						],
						src: "1798:307:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "2159:54:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "2169:38:14",
									value: {
										arguments: [
											{
												arguments: [
													{
														name: "value",
														nodeType: "YulIdentifier",
														src: "2187:5:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "2194:2:14",
														type: "",
														value: "31",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "2183:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "2183:14:14",
											},
											{
												arguments: [
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "2203:2:14",
														type: "",
														value: "31",
													},
												],
												functionName: {
													name: "not",
													nodeType: "YulIdentifier",
													src: "2199:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "2199:7:14",
											},
										],
										functionName: {
											name: "and",
											nodeType: "YulIdentifier",
											src: "2179:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "2179:28:14",
									},
									variableNames: [
										{
											name: "result",
											nodeType: "YulIdentifier",
											src: "2169:6:14",
										},
									],
								},
							],
						},
						name: "round_up_to_mul_of_32",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "value",
								nodeType: "YulTypedName",
								src: "2142:5:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "result",
								nodeType: "YulTypedName",
								src: "2152:6:14",
								type: "",
							},
						],
						src: "2111:102:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "2311:272:14",
							statements: [
								{
									nodeType: "YulVariableDeclaration",
									src: "2321:53:14",
									value: {
										arguments: [
											{
												name: "value",
												nodeType: "YulIdentifier",
												src: "2368:5:14",
											},
										],
										functionName: {
											name: "array_length_t_string_memory_ptr",
											nodeType: "YulIdentifier",
											src: "2335:32:14",
										},
										nodeType: "YulFunctionCall",
										src: "2335:39:14",
									},
									variables: [
										{
											name: "length",
											nodeType: "YulTypedName",
											src: "2325:6:14",
											type: "",
										},
									],
								},
								{
									nodeType: "YulAssignment",
									src: "2383:78:14",
									value: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "2449:3:14",
											},
											{
												name: "length",
												nodeType: "YulIdentifier",
												src: "2454:6:14",
											},
										],
										functionName: {
											name:
												"array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
											nodeType: "YulIdentifier",
											src: "2390:58:14",
										},
										nodeType: "YulFunctionCall",
										src: "2390:71:14",
									},
									variableNames: [
										{
											name: "pos",
											nodeType: "YulIdentifier",
											src: "2383:3:14",
										},
									],
								},
								{
									expression: {
										arguments: [
											{
												arguments: [
													{
														name: "value",
														nodeType: "YulIdentifier",
														src: "2496:5:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "2503:4:14",
														type: "",
														value: "0x20",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "2492:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "2492:16:14",
											},
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "2510:3:14",
											},
											{
												name: "length",
												nodeType: "YulIdentifier",
												src: "2515:6:14",
											},
										],
										functionName: {
											name: "copy_memory_to_memory",
											nodeType: "YulIdentifier",
											src: "2470:21:14",
										},
										nodeType: "YulFunctionCall",
										src: "2470:52:14",
									},
									nodeType: "YulExpressionStatement",
									src: "2470:52:14",
								},
								{
									nodeType: "YulAssignment",
									src: "2531:46:14",
									value: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "2542:3:14",
											},
											{
												arguments: [
													{
														name: "length",
														nodeType: "YulIdentifier",
														src: "2569:6:14",
													},
												],
												functionName: {
													name: "round_up_to_mul_of_32",
													nodeType: "YulIdentifier",
													src: "2547:21:14",
												},
												nodeType: "YulFunctionCall",
												src: "2547:29:14",
											},
										],
										functionName: {
											name: "add",
											nodeType: "YulIdentifier",
											src: "2538:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "2538:39:14",
									},
									variableNames: [
										{
											name: "end",
											nodeType: "YulIdentifier",
											src: "2531:3:14",
										},
									],
								},
							],
						},
						name:
							"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "value",
								nodeType: "YulTypedName",
								src: "2292:5:14",
								type: "",
							},
							{
								name: "pos",
								nodeType: "YulTypedName",
								src: "2299:3:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "end",
								nodeType: "YulTypedName",
								src: "2307:3:14",
								type: "",
							},
						],
						src: "2219:364:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "2707:195:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "2717:26:14",
									value: {
										arguments: [
											{
												name: "headStart",
												nodeType: "YulIdentifier",
												src: "2729:9:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "2740:2:14",
												type: "",
												value: "32",
											},
										],
										functionName: {
											name: "add",
											nodeType: "YulIdentifier",
											src: "2725:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "2725:18:14",
									},
									variableNames: [
										{
											name: "tail",
											nodeType: "YulIdentifier",
											src: "2717:4:14",
										},
									],
								},
								{
									expression: {
										arguments: [
											{
												arguments: [
													{
														name: "headStart",
														nodeType: "YulIdentifier",
														src: "2764:9:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "2775:1:14",
														type: "",
														value: "0",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "2760:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "2760:17:14",
											},
											{
												arguments: [
													{
														name: "tail",
														nodeType: "YulIdentifier",
														src: "2783:4:14",
													},
													{
														name: "headStart",
														nodeType: "YulIdentifier",
														src: "2789:9:14",
													},
												],
												functionName: {
													name: "sub",
													nodeType: "YulIdentifier",
													src: "2779:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "2779:20:14",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "2753:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "2753:47:14",
									},
									nodeType: "YulExpressionStatement",
									src: "2753:47:14",
								},
								{
									nodeType: "YulAssignment",
									src: "2809:86:14",
									value: {
										arguments: [
											{
												name: "value0",
												nodeType: "YulIdentifier",
												src: "2881:6:14",
											},
											{
												name: "tail",
												nodeType: "YulIdentifier",
												src: "2890:4:14",
											},
										],
										functionName: {
											name:
												"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
											nodeType: "YulIdentifier",
											src: "2817:63:14",
										},
										nodeType: "YulFunctionCall",
										src: "2817:78:14",
									},
									variableNames: [
										{
											name: "tail",
											nodeType: "YulIdentifier",
											src: "2809:4:14",
										},
									],
								},
							],
						},
						name:
							"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "headStart",
								nodeType: "YulTypedName",
								src: "2679:9:14",
								type: "",
							},
							{
								name: "value0",
								nodeType: "YulTypedName",
								src: "2691:6:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "tail",
								nodeType: "YulTypedName",
								src: "2702:4:14",
								type: "",
							},
						],
						src: "2589:313:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "2953:32:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "2963:16:14",
									value: {
										name: "value",
										nodeType: "YulIdentifier",
										src: "2974:5:14",
									},
									variableNames: [
										{
											name: "cleaned",
											nodeType: "YulIdentifier",
											src: "2963:7:14",
										},
									],
								},
							],
						},
						name: "cleanup_t_uint256",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "value",
								nodeType: "YulTypedName",
								src: "2935:5:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "cleaned",
								nodeType: "YulTypedName",
								src: "2945:7:14",
								type: "",
							},
						],
						src: "2908:77:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "3034:79:14",
							statements: [
								{
									body: {
										nodeType: "YulBlock",
										src: "3091:16:14",
										statements: [
											{
												expression: {
													arguments: [
														{
															kind: "number",
															nodeType: "YulLiteral",
															src: "3100:1:14",
															type: "",
															value: "0",
														},
														{
															kind: "number",
															nodeType: "YulLiteral",
															src: "3103:1:14",
															type: "",
															value: "0",
														},
													],
													functionName: {
														name: "revert",
														nodeType: "YulIdentifier",
														src: "3093:6:14",
													},
													nodeType: "YulFunctionCall",
													src: "3093:12:14",
												},
												nodeType: "YulExpressionStatement",
												src: "3093:12:14",
											},
										],
									},
									condition: {
										arguments: [
											{
												arguments: [
													{
														name: "value",
														nodeType: "YulIdentifier",
														src: "3057:5:14",
													},
													{
														arguments: [
															{
																name: "value",
																nodeType: "YulIdentifier",
																src: "3082:5:14",
															},
														],
														functionName: {
															name: "cleanup_t_uint256",
															nodeType: "YulIdentifier",
															src: "3064:17:14",
														},
														nodeType: "YulFunctionCall",
														src: "3064:24:14",
													},
												],
												functionName: {
													name: "eq",
													nodeType: "YulIdentifier",
													src: "3054:2:14",
												},
												nodeType: "YulFunctionCall",
												src: "3054:35:14",
											},
										],
										functionName: {
											name: "iszero",
											nodeType: "YulIdentifier",
											src: "3047:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "3047:43:14",
									},
									nodeType: "YulIf",
									src: "3044:63:14",
								},
							],
						},
						name: "validator_revert_t_uint256",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "value",
								nodeType: "YulTypedName",
								src: "3027:5:14",
								type: "",
							},
						],
						src: "2991:122:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "3171:87:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "3181:29:14",
									value: {
										arguments: [
											{
												name: "offset",
												nodeType: "YulIdentifier",
												src: "3203:6:14",
											},
										],
										functionName: {
											name: "calldataload",
											nodeType: "YulIdentifier",
											src: "3190:12:14",
										},
										nodeType: "YulFunctionCall",
										src: "3190:20:14",
									},
									variableNames: [
										{
											name: "value",
											nodeType: "YulIdentifier",
											src: "3181:5:14",
										},
									],
								},
								{
									expression: {
										arguments: [
											{
												name: "value",
												nodeType: "YulIdentifier",
												src: "3246:5:14",
											},
										],
										functionName: {
											name: "validator_revert_t_uint256",
											nodeType: "YulIdentifier",
											src: "3219:26:14",
										},
										nodeType: "YulFunctionCall",
										src: "3219:33:14",
									},
									nodeType: "YulExpressionStatement",
									src: "3219:33:14",
								},
							],
						},
						name: "abi_decode_t_uint256",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "offset",
								nodeType: "YulTypedName",
								src: "3149:6:14",
								type: "",
							},
							{
								name: "end",
								nodeType: "YulTypedName",
								src: "3157:3:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "value",
								nodeType: "YulTypedName",
								src: "3165:5:14",
								type: "",
							},
						],
						src: "3119:139:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "3330:263:14",
							statements: [
								{
									body: {
										nodeType: "YulBlock",
										src: "3376:83:14",
										statements: [
											{
												expression: {
													arguments: [],
													functionName: {
														name:
															"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
														nodeType: "YulIdentifier",
														src: "3378:77:14",
													},
													nodeType: "YulFunctionCall",
													src: "3378:79:14",
												},
												nodeType: "YulExpressionStatement",
												src: "3378:79:14",
											},
										],
									},
									condition: {
										arguments: [
											{
												arguments: [
													{
														name: "dataEnd",
														nodeType: "YulIdentifier",
														src: "3351:7:14",
													},
													{
														name: "headStart",
														nodeType: "YulIdentifier",
														src: "3360:9:14",
													},
												],
												functionName: {
													name: "sub",
													nodeType: "YulIdentifier",
													src: "3347:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "3347:23:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "3372:2:14",
												type: "",
												value: "32",
											},
										],
										functionName: {
											name: "slt",
											nodeType: "YulIdentifier",
											src: "3343:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "3343:32:14",
									},
									nodeType: "YulIf",
									src: "3340:119:14",
								},
								{
									nodeType: "YulBlock",
									src: "3469:117:14",
									statements: [
										{
											nodeType: "YulVariableDeclaration",
											src: "3484:15:14",
											value: {
												kind: "number",
												nodeType: "YulLiteral",
												src: "3498:1:14",
												type: "",
												value: "0",
											},
											variables: [
												{
													name: "offset",
													nodeType: "YulTypedName",
													src: "3488:6:14",
													type: "",
												},
											],
										},
										{
											nodeType: "YulAssignment",
											src: "3513:63:14",
											value: {
												arguments: [
													{
														arguments: [
															{
																name: "headStart",
																nodeType: "YulIdentifier",
																src: "3548:9:14",
															},
															{
																name: "offset",
																nodeType: "YulIdentifier",
																src: "3559:6:14",
															},
														],
														functionName: {
															name: "add",
															nodeType: "YulIdentifier",
															src: "3544:3:14",
														},
														nodeType: "YulFunctionCall",
														src: "3544:22:14",
													},
													{
														name: "dataEnd",
														nodeType: "YulIdentifier",
														src: "3568:7:14",
													},
												],
												functionName: {
													name: "abi_decode_t_uint256",
													nodeType: "YulIdentifier",
													src: "3523:20:14",
												},
												nodeType: "YulFunctionCall",
												src: "3523:53:14",
											},
											variableNames: [
												{
													name: "value0",
													nodeType: "YulIdentifier",
													src: "3513:6:14",
												},
											],
										},
									],
								},
							],
						},
						name: "abi_decode_tuple_t_uint256",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "headStart",
								nodeType: "YulTypedName",
								src: "3300:9:14",
								type: "",
							},
							{
								name: "dataEnd",
								nodeType: "YulTypedName",
								src: "3311:7:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "value0",
								nodeType: "YulTypedName",
								src: "3323:6:14",
								type: "",
							},
						],
						src: "3264:329:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "3644:81:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "3654:65:14",
									value: {
										arguments: [
											{
												name: "value",
												nodeType: "YulIdentifier",
												src: "3669:5:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "3676:42:14",
												type: "",
												value: "0xffffffffffffffffffffffffffffffffffffffff",
											},
										],
										functionName: {
											name: "and",
											nodeType: "YulIdentifier",
											src: "3665:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "3665:54:14",
									},
									variableNames: [
										{
											name: "cleaned",
											nodeType: "YulIdentifier",
											src: "3654:7:14",
										},
									],
								},
							],
						},
						name: "cleanup_t_uint160",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "value",
								nodeType: "YulTypedName",
								src: "3626:5:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "cleaned",
								nodeType: "YulTypedName",
								src: "3636:7:14",
								type: "",
							},
						],
						src: "3599:126:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "3776:51:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "3786:35:14",
									value: {
										arguments: [
											{
												name: "value",
												nodeType: "YulIdentifier",
												src: "3815:5:14",
											},
										],
										functionName: {
											name: "cleanup_t_uint160",
											nodeType: "YulIdentifier",
											src: "3797:17:14",
										},
										nodeType: "YulFunctionCall",
										src: "3797:24:14",
									},
									variableNames: [
										{
											name: "cleaned",
											nodeType: "YulIdentifier",
											src: "3786:7:14",
										},
									],
								},
							],
						},
						name: "cleanup_t_address",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "value",
								nodeType: "YulTypedName",
								src: "3758:5:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "cleaned",
								nodeType: "YulTypedName",
								src: "3768:7:14",
								type: "",
							},
						],
						src: "3731:96:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "3898:53:14",
							statements: [
								{
									expression: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "3915:3:14",
											},
											{
												arguments: [
													{
														name: "value",
														nodeType: "YulIdentifier",
														src: "3938:5:14",
													},
												],
												functionName: {
													name: "cleanup_t_address",
													nodeType: "YulIdentifier",
													src: "3920:17:14",
												},
												nodeType: "YulFunctionCall",
												src: "3920:24:14",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "3908:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "3908:37:14",
									},
									nodeType: "YulExpressionStatement",
									src: "3908:37:14",
								},
							],
						},
						name: "abi_encode_t_address_to_t_address_fromStack",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "value",
								nodeType: "YulTypedName",
								src: "3886:5:14",
								type: "",
							},
							{
								name: "pos",
								nodeType: "YulTypedName",
								src: "3893:3:14",
								type: "",
							},
						],
						src: "3833:118:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "4055:124:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "4065:26:14",
									value: {
										arguments: [
											{
												name: "headStart",
												nodeType: "YulIdentifier",
												src: "4077:9:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "4088:2:14",
												type: "",
												value: "32",
											},
										],
										functionName: {
											name: "add",
											nodeType: "YulIdentifier",
											src: "4073:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "4073:18:14",
									},
									variableNames: [
										{
											name: "tail",
											nodeType: "YulIdentifier",
											src: "4065:4:14",
										},
									],
								},
								{
									expression: {
										arguments: [
											{
												name: "value0",
												nodeType: "YulIdentifier",
												src: "4145:6:14",
											},
											{
												arguments: [
													{
														name: "headStart",
														nodeType: "YulIdentifier",
														src: "4158:9:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "4169:1:14",
														type: "",
														value: "0",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "4154:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "4154:17:14",
											},
										],
										functionName: {
											name: "abi_encode_t_address_to_t_address_fromStack",
											nodeType: "YulIdentifier",
											src: "4101:43:14",
										},
										nodeType: "YulFunctionCall",
										src: "4101:71:14",
									},
									nodeType: "YulExpressionStatement",
									src: "4101:71:14",
								},
							],
						},
						name:
							"abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "headStart",
								nodeType: "YulTypedName",
								src: "4027:9:14",
								type: "",
							},
							{
								name: "value0",
								nodeType: "YulTypedName",
								src: "4039:6:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "tail",
								nodeType: "YulTypedName",
								src: "4050:4:14",
								type: "",
							},
						],
						src: "3957:222:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "4228:79:14",
							statements: [
								{
									body: {
										nodeType: "YulBlock",
										src: "4285:16:14",
										statements: [
											{
												expression: {
													arguments: [
														{
															kind: "number",
															nodeType: "YulLiteral",
															src: "4294:1:14",
															type: "",
															value: "0",
														},
														{
															kind: "number",
															nodeType: "YulLiteral",
															src: "4297:1:14",
															type: "",
															value: "0",
														},
													],
													functionName: {
														name: "revert",
														nodeType: "YulIdentifier",
														src: "4287:6:14",
													},
													nodeType: "YulFunctionCall",
													src: "4287:12:14",
												},
												nodeType: "YulExpressionStatement",
												src: "4287:12:14",
											},
										],
									},
									condition: {
										arguments: [
											{
												arguments: [
													{
														name: "value",
														nodeType: "YulIdentifier",
														src: "4251:5:14",
													},
													{
														arguments: [
															{
																name: "value",
																nodeType: "YulIdentifier",
																src: "4276:5:14",
															},
														],
														functionName: {
															name: "cleanup_t_address",
															nodeType: "YulIdentifier",
															src: "4258:17:14",
														},
														nodeType: "YulFunctionCall",
														src: "4258:24:14",
													},
												],
												functionName: {
													name: "eq",
													nodeType: "YulIdentifier",
													src: "4248:2:14",
												},
												nodeType: "YulFunctionCall",
												src: "4248:35:14",
											},
										],
										functionName: {
											name: "iszero",
											nodeType: "YulIdentifier",
											src: "4241:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "4241:43:14",
									},
									nodeType: "YulIf",
									src: "4238:63:14",
								},
							],
						},
						name: "validator_revert_t_address",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "value",
								nodeType: "YulTypedName",
								src: "4221:5:14",
								type: "",
							},
						],
						src: "4185:122:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "4365:87:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "4375:29:14",
									value: {
										arguments: [
											{
												name: "offset",
												nodeType: "YulIdentifier",
												src: "4397:6:14",
											},
										],
										functionName: {
											name: "calldataload",
											nodeType: "YulIdentifier",
											src: "4384:12:14",
										},
										nodeType: "YulFunctionCall",
										src: "4384:20:14",
									},
									variableNames: [
										{
											name: "value",
											nodeType: "YulIdentifier",
											src: "4375:5:14",
										},
									],
								},
								{
									expression: {
										arguments: [
											{
												name: "value",
												nodeType: "YulIdentifier",
												src: "4440:5:14",
											},
										],
										functionName: {
											name: "validator_revert_t_address",
											nodeType: "YulIdentifier",
											src: "4413:26:14",
										},
										nodeType: "YulFunctionCall",
										src: "4413:33:14",
									},
									nodeType: "YulExpressionStatement",
									src: "4413:33:14",
								},
							],
						},
						name: "abi_decode_t_address",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "offset",
								nodeType: "YulTypedName",
								src: "4343:6:14",
								type: "",
							},
							{
								name: "end",
								nodeType: "YulTypedName",
								src: "4351:3:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "value",
								nodeType: "YulTypedName",
								src: "4359:5:14",
								type: "",
							},
						],
						src: "4313:139:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "4541:391:14",
							statements: [
								{
									body: {
										nodeType: "YulBlock",
										src: "4587:83:14",
										statements: [
											{
												expression: {
													arguments: [],
													functionName: {
														name:
															"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
														nodeType: "YulIdentifier",
														src: "4589:77:14",
													},
													nodeType: "YulFunctionCall",
													src: "4589:79:14",
												},
												nodeType: "YulExpressionStatement",
												src: "4589:79:14",
											},
										],
									},
									condition: {
										arguments: [
											{
												arguments: [
													{
														name: "dataEnd",
														nodeType: "YulIdentifier",
														src: "4562:7:14",
													},
													{
														name: "headStart",
														nodeType: "YulIdentifier",
														src: "4571:9:14",
													},
												],
												functionName: {
													name: "sub",
													nodeType: "YulIdentifier",
													src: "4558:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "4558:23:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "4583:2:14",
												type: "",
												value: "64",
											},
										],
										functionName: {
											name: "slt",
											nodeType: "YulIdentifier",
											src: "4554:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "4554:32:14",
									},
									nodeType: "YulIf",
									src: "4551:119:14",
								},
								{
									nodeType: "YulBlock",
									src: "4680:117:14",
									statements: [
										{
											nodeType: "YulVariableDeclaration",
											src: "4695:15:14",
											value: {
												kind: "number",
												nodeType: "YulLiteral",
												src: "4709:1:14",
												type: "",
												value: "0",
											},
											variables: [
												{
													name: "offset",
													nodeType: "YulTypedName",
													src: "4699:6:14",
													type: "",
												},
											],
										},
										{
											nodeType: "YulAssignment",
											src: "4724:63:14",
											value: {
												arguments: [
													{
														arguments: [
															{
																name: "headStart",
																nodeType: "YulIdentifier",
																src: "4759:9:14",
															},
															{
																name: "offset",
																nodeType: "YulIdentifier",
																src: "4770:6:14",
															},
														],
														functionName: {
															name: "add",
															nodeType: "YulIdentifier",
															src: "4755:3:14",
														},
														nodeType: "YulFunctionCall",
														src: "4755:22:14",
													},
													{
														name: "dataEnd",
														nodeType: "YulIdentifier",
														src: "4779:7:14",
													},
												],
												functionName: {
													name: "abi_decode_t_address",
													nodeType: "YulIdentifier",
													src: "4734:20:14",
												},
												nodeType: "YulFunctionCall",
												src: "4734:53:14",
											},
											variableNames: [
												{
													name: "value0",
													nodeType: "YulIdentifier",
													src: "4724:6:14",
												},
											],
										},
									],
								},
								{
									nodeType: "YulBlock",
									src: "4807:118:14",
									statements: [
										{
											nodeType: "YulVariableDeclaration",
											src: "4822:16:14",
											value: {
												kind: "number",
												nodeType: "YulLiteral",
												src: "4836:2:14",
												type: "",
												value: "32",
											},
											variables: [
												{
													name: "offset",
													nodeType: "YulTypedName",
													src: "4826:6:14",
													type: "",
												},
											],
										},
										{
											nodeType: "YulAssignment",
											src: "4852:63:14",
											value: {
												arguments: [
													{
														arguments: [
															{
																name: "headStart",
																nodeType: "YulIdentifier",
																src: "4887:9:14",
															},
															{
																name: "offset",
																nodeType: "YulIdentifier",
																src: "4898:6:14",
															},
														],
														functionName: {
															name: "add",
															nodeType: "YulIdentifier",
															src: "4883:3:14",
														},
														nodeType: "YulFunctionCall",
														src: "4883:22:14",
													},
													{
														name: "dataEnd",
														nodeType: "YulIdentifier",
														src: "4907:7:14",
													},
												],
												functionName: {
													name: "abi_decode_t_uint256",
													nodeType: "YulIdentifier",
													src: "4862:20:14",
												},
												nodeType: "YulFunctionCall",
												src: "4862:53:14",
											},
											variableNames: [
												{
													name: "value1",
													nodeType: "YulIdentifier",
													src: "4852:6:14",
												},
											],
										},
									],
								},
							],
						},
						name: "abi_decode_tuple_t_addresst_uint256",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "headStart",
								nodeType: "YulTypedName",
								src: "4503:9:14",
								type: "",
							},
							{
								name: "dataEnd",
								nodeType: "YulTypedName",
								src: "4514:7:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "value0",
								nodeType: "YulTypedName",
								src: "4526:6:14",
								type: "",
							},
							{
								name: "value1",
								nodeType: "YulTypedName",
								src: "4534:6:14",
								type: "",
							},
						],
						src: "4458:474:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "5038:519:14",
							statements: [
								{
									body: {
										nodeType: "YulBlock",
										src: "5084:83:14",
										statements: [
											{
												expression: {
													arguments: [],
													functionName: {
														name:
															"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
														nodeType: "YulIdentifier",
														src: "5086:77:14",
													},
													nodeType: "YulFunctionCall",
													src: "5086:79:14",
												},
												nodeType: "YulExpressionStatement",
												src: "5086:79:14",
											},
										],
									},
									condition: {
										arguments: [
											{
												arguments: [
													{
														name: "dataEnd",
														nodeType: "YulIdentifier",
														src: "5059:7:14",
													},
													{
														name: "headStart",
														nodeType: "YulIdentifier",
														src: "5068:9:14",
													},
												],
												functionName: {
													name: "sub",
													nodeType: "YulIdentifier",
													src: "5055:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "5055:23:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "5080:2:14",
												type: "",
												value: "96",
											},
										],
										functionName: {
											name: "slt",
											nodeType: "YulIdentifier",
											src: "5051:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "5051:32:14",
									},
									nodeType: "YulIf",
									src: "5048:119:14",
								},
								{
									nodeType: "YulBlock",
									src: "5177:117:14",
									statements: [
										{
											nodeType: "YulVariableDeclaration",
											src: "5192:15:14",
											value: {
												kind: "number",
												nodeType: "YulLiteral",
												src: "5206:1:14",
												type: "",
												value: "0",
											},
											variables: [
												{
													name: "offset",
													nodeType: "YulTypedName",
													src: "5196:6:14",
													type: "",
												},
											],
										},
										{
											nodeType: "YulAssignment",
											src: "5221:63:14",
											value: {
												arguments: [
													{
														arguments: [
															{
																name: "headStart",
																nodeType: "YulIdentifier",
																src: "5256:9:14",
															},
															{
																name: "offset",
																nodeType: "YulIdentifier",
																src: "5267:6:14",
															},
														],
														functionName: {
															name: "add",
															nodeType: "YulIdentifier",
															src: "5252:3:14",
														},
														nodeType: "YulFunctionCall",
														src: "5252:22:14",
													},
													{
														name: "dataEnd",
														nodeType: "YulIdentifier",
														src: "5276:7:14",
													},
												],
												functionName: {
													name: "abi_decode_t_address",
													nodeType: "YulIdentifier",
													src: "5231:20:14",
												},
												nodeType: "YulFunctionCall",
												src: "5231:53:14",
											},
											variableNames: [
												{
													name: "value0",
													nodeType: "YulIdentifier",
													src: "5221:6:14",
												},
											],
										},
									],
								},
								{
									nodeType: "YulBlock",
									src: "5304:118:14",
									statements: [
										{
											nodeType: "YulVariableDeclaration",
											src: "5319:16:14",
											value: {
												kind: "number",
												nodeType: "YulLiteral",
												src: "5333:2:14",
												type: "",
												value: "32",
											},
											variables: [
												{
													name: "offset",
													nodeType: "YulTypedName",
													src: "5323:6:14",
													type: "",
												},
											],
										},
										{
											nodeType: "YulAssignment",
											src: "5349:63:14",
											value: {
												arguments: [
													{
														arguments: [
															{
																name: "headStart",
																nodeType: "YulIdentifier",
																src: "5384:9:14",
															},
															{
																name: "offset",
																nodeType: "YulIdentifier",
																src: "5395:6:14",
															},
														],
														functionName: {
															name: "add",
															nodeType: "YulIdentifier",
															src: "5380:3:14",
														},
														nodeType: "YulFunctionCall",
														src: "5380:22:14",
													},
													{
														name: "dataEnd",
														nodeType: "YulIdentifier",
														src: "5404:7:14",
													},
												],
												functionName: {
													name: "abi_decode_t_address",
													nodeType: "YulIdentifier",
													src: "5359:20:14",
												},
												nodeType: "YulFunctionCall",
												src: "5359:53:14",
											},
											variableNames: [
												{
													name: "value1",
													nodeType: "YulIdentifier",
													src: "5349:6:14",
												},
											],
										},
									],
								},
								{
									nodeType: "YulBlock",
									src: "5432:118:14",
									statements: [
										{
											nodeType: "YulVariableDeclaration",
											src: "5447:16:14",
											value: {
												kind: "number",
												nodeType: "YulLiteral",
												src: "5461:2:14",
												type: "",
												value: "64",
											},
											variables: [
												{
													name: "offset",
													nodeType: "YulTypedName",
													src: "5451:6:14",
													type: "",
												},
											],
										},
										{
											nodeType: "YulAssignment",
											src: "5477:63:14",
											value: {
												arguments: [
													{
														arguments: [
															{
																name: "headStart",
																nodeType: "YulIdentifier",
																src: "5512:9:14",
															},
															{
																name: "offset",
																nodeType: "YulIdentifier",
																src: "5523:6:14",
															},
														],
														functionName: {
															name: "add",
															nodeType: "YulIdentifier",
															src: "5508:3:14",
														},
														nodeType: "YulFunctionCall",
														src: "5508:22:14",
													},
													{
														name: "dataEnd",
														nodeType: "YulIdentifier",
														src: "5532:7:14",
													},
												],
												functionName: {
													name: "abi_decode_t_uint256",
													nodeType: "YulIdentifier",
													src: "5487:20:14",
												},
												nodeType: "YulFunctionCall",
												src: "5487:53:14",
											},
											variableNames: [
												{
													name: "value2",
													nodeType: "YulIdentifier",
													src: "5477:6:14",
												},
											],
										},
									],
								},
							],
						},
						name: "abi_decode_tuple_t_addresst_addresst_uint256",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "headStart",
								nodeType: "YulTypedName",
								src: "4992:9:14",
								type: "",
							},
							{
								name: "dataEnd",
								nodeType: "YulTypedName",
								src: "5003:7:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "value0",
								nodeType: "YulTypedName",
								src: "5015:6:14",
								type: "",
							},
							{
								name: "value1",
								nodeType: "YulTypedName",
								src: "5023:6:14",
								type: "",
							},
							{
								name: "value2",
								nodeType: "YulTypedName",
								src: "5031:6:14",
								type: "",
							},
						],
						src: "4938:619:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "5629:263:14",
							statements: [
								{
									body: {
										nodeType: "YulBlock",
										src: "5675:83:14",
										statements: [
											{
												expression: {
													arguments: [],
													functionName: {
														name:
															"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
														nodeType: "YulIdentifier",
														src: "5677:77:14",
													},
													nodeType: "YulFunctionCall",
													src: "5677:79:14",
												},
												nodeType: "YulExpressionStatement",
												src: "5677:79:14",
											},
										],
									},
									condition: {
										arguments: [
											{
												arguments: [
													{
														name: "dataEnd",
														nodeType: "YulIdentifier",
														src: "5650:7:14",
													},
													{
														name: "headStart",
														nodeType: "YulIdentifier",
														src: "5659:9:14",
													},
												],
												functionName: {
													name: "sub",
													nodeType: "YulIdentifier",
													src: "5646:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "5646:23:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "5671:2:14",
												type: "",
												value: "32",
											},
										],
										functionName: {
											name: "slt",
											nodeType: "YulIdentifier",
											src: "5642:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "5642:32:14",
									},
									nodeType: "YulIf",
									src: "5639:119:14",
								},
								{
									nodeType: "YulBlock",
									src: "5768:117:14",
									statements: [
										{
											nodeType: "YulVariableDeclaration",
											src: "5783:15:14",
											value: {
												kind: "number",
												nodeType: "YulLiteral",
												src: "5797:1:14",
												type: "",
												value: "0",
											},
											variables: [
												{
													name: "offset",
													nodeType: "YulTypedName",
													src: "5787:6:14",
													type: "",
												},
											],
										},
										{
											nodeType: "YulAssignment",
											src: "5812:63:14",
											value: {
												arguments: [
													{
														arguments: [
															{
																name: "headStart",
																nodeType: "YulIdentifier",
																src: "5847:9:14",
															},
															{
																name: "offset",
																nodeType: "YulIdentifier",
																src: "5858:6:14",
															},
														],
														functionName: {
															name: "add",
															nodeType: "YulIdentifier",
															src: "5843:3:14",
														},
														nodeType: "YulFunctionCall",
														src: "5843:22:14",
													},
													{
														name: "dataEnd",
														nodeType: "YulIdentifier",
														src: "5867:7:14",
													},
												],
												functionName: {
													name: "abi_decode_t_address",
													nodeType: "YulIdentifier",
													src: "5822:20:14",
												},
												nodeType: "YulFunctionCall",
												src: "5822:53:14",
											},
											variableNames: [
												{
													name: "value0",
													nodeType: "YulIdentifier",
													src: "5812:6:14",
												},
											],
										},
									],
								},
							],
						},
						name: "abi_decode_tuple_t_address",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "headStart",
								nodeType: "YulTypedName",
								src: "5599:9:14",
								type: "",
							},
							{
								name: "dataEnd",
								nodeType: "YulTypedName",
								src: "5610:7:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "value0",
								nodeType: "YulTypedName",
								src: "5622:6:14",
								type: "",
							},
						],
						src: "5563:329:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "5963:53:14",
							statements: [
								{
									expression: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "5980:3:14",
											},
											{
												arguments: [
													{
														name: "value",
														nodeType: "YulIdentifier",
														src: "6003:5:14",
													},
												],
												functionName: {
													name: "cleanup_t_uint256",
													nodeType: "YulIdentifier",
													src: "5985:17:14",
												},
												nodeType: "YulFunctionCall",
												src: "5985:24:14",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "5973:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "5973:37:14",
									},
									nodeType: "YulExpressionStatement",
									src: "5973:37:14",
								},
							],
						},
						name: "abi_encode_t_uint256_to_t_uint256_fromStack",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "value",
								nodeType: "YulTypedName",
								src: "5951:5:14",
								type: "",
							},
							{
								name: "pos",
								nodeType: "YulTypedName",
								src: "5958:3:14",
								type: "",
							},
						],
						src: "5898:118:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "6120:124:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "6130:26:14",
									value: {
										arguments: [
											{
												name: "headStart",
												nodeType: "YulIdentifier",
												src: "6142:9:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "6153:2:14",
												type: "",
												value: "32",
											},
										],
										functionName: {
											name: "add",
											nodeType: "YulIdentifier",
											src: "6138:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "6138:18:14",
									},
									variableNames: [
										{
											name: "tail",
											nodeType: "YulIdentifier",
											src: "6130:4:14",
										},
									],
								},
								{
									expression: {
										arguments: [
											{
												name: "value0",
												nodeType: "YulIdentifier",
												src: "6210:6:14",
											},
											{
												arguments: [
													{
														name: "headStart",
														nodeType: "YulIdentifier",
														src: "6223:9:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "6234:1:14",
														type: "",
														value: "0",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "6219:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "6219:17:14",
											},
										],
										functionName: {
											name: "abi_encode_t_uint256_to_t_uint256_fromStack",
											nodeType: "YulIdentifier",
											src: "6166:43:14",
										},
										nodeType: "YulFunctionCall",
										src: "6166:71:14",
									},
									nodeType: "YulExpressionStatement",
									src: "6166:71:14",
								},
							],
						},
						name:
							"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "headStart",
								nodeType: "YulTypedName",
								src: "6092:9:14",
								type: "",
							},
							{
								name: "value0",
								nodeType: "YulTypedName",
								src: "6104:6:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "tail",
								nodeType: "YulTypedName",
								src: "6115:4:14",
								type: "",
							},
						],
						src: "6022:222:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "6290:76:14",
							statements: [
								{
									body: {
										nodeType: "YulBlock",
										src: "6344:16:14",
										statements: [
											{
												expression: {
													arguments: [
														{
															kind: "number",
															nodeType: "YulLiteral",
															src: "6353:1:14",
															type: "",
															value: "0",
														},
														{
															kind: "number",
															nodeType: "YulLiteral",
															src: "6356:1:14",
															type: "",
															value: "0",
														},
													],
													functionName: {
														name: "revert",
														nodeType: "YulIdentifier",
														src: "6346:6:14",
													},
													nodeType: "YulFunctionCall",
													src: "6346:12:14",
												},
												nodeType: "YulExpressionStatement",
												src: "6346:12:14",
											},
										],
									},
									condition: {
										arguments: [
											{
												arguments: [
													{
														name: "value",
														nodeType: "YulIdentifier",
														src: "6313:5:14",
													},
													{
														arguments: [
															{
																name: "value",
																nodeType: "YulIdentifier",
																src: "6335:5:14",
															},
														],
														functionName: {
															name: "cleanup_t_bool",
															nodeType: "YulIdentifier",
															src: "6320:14:14",
														},
														nodeType: "YulFunctionCall",
														src: "6320:21:14",
													},
												],
												functionName: {
													name: "eq",
													nodeType: "YulIdentifier",
													src: "6310:2:14",
												},
												nodeType: "YulFunctionCall",
												src: "6310:32:14",
											},
										],
										functionName: {
											name: "iszero",
											nodeType: "YulIdentifier",
											src: "6303:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "6303:40:14",
									},
									nodeType: "YulIf",
									src: "6300:60:14",
								},
							],
						},
						name: "validator_revert_t_bool",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "value",
								nodeType: "YulTypedName",
								src: "6283:5:14",
								type: "",
							},
						],
						src: "6250:116:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "6421:84:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "6431:29:14",
									value: {
										arguments: [
											{
												name: "offset",
												nodeType: "YulIdentifier",
												src: "6453:6:14",
											},
										],
										functionName: {
											name: "calldataload",
											nodeType: "YulIdentifier",
											src: "6440:12:14",
										},
										nodeType: "YulFunctionCall",
										src: "6440:20:14",
									},
									variableNames: [
										{
											name: "value",
											nodeType: "YulIdentifier",
											src: "6431:5:14",
										},
									],
								},
								{
									expression: {
										arguments: [
											{
												name: "value",
												nodeType: "YulIdentifier",
												src: "6493:5:14",
											},
										],
										functionName: {
											name: "validator_revert_t_bool",
											nodeType: "YulIdentifier",
											src: "6469:23:14",
										},
										nodeType: "YulFunctionCall",
										src: "6469:30:14",
									},
									nodeType: "YulExpressionStatement",
									src: "6469:30:14",
								},
							],
						},
						name: "abi_decode_t_bool",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "offset",
								nodeType: "YulTypedName",
								src: "6399:6:14",
								type: "",
							},
							{
								name: "end",
								nodeType: "YulTypedName",
								src: "6407:3:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "value",
								nodeType: "YulTypedName",
								src: "6415:5:14",
								type: "",
							},
						],
						src: "6372:133:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "6591:388:14",
							statements: [
								{
									body: {
										nodeType: "YulBlock",
										src: "6637:83:14",
										statements: [
											{
												expression: {
													arguments: [],
													functionName: {
														name:
															"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
														nodeType: "YulIdentifier",
														src: "6639:77:14",
													},
													nodeType: "YulFunctionCall",
													src: "6639:79:14",
												},
												nodeType: "YulExpressionStatement",
												src: "6639:79:14",
											},
										],
									},
									condition: {
										arguments: [
											{
												arguments: [
													{
														name: "dataEnd",
														nodeType: "YulIdentifier",
														src: "6612:7:14",
													},
													{
														name: "headStart",
														nodeType: "YulIdentifier",
														src: "6621:9:14",
													},
												],
												functionName: {
													name: "sub",
													nodeType: "YulIdentifier",
													src: "6608:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "6608:23:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "6633:2:14",
												type: "",
												value: "64",
											},
										],
										functionName: {
											name: "slt",
											nodeType: "YulIdentifier",
											src: "6604:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "6604:32:14",
									},
									nodeType: "YulIf",
									src: "6601:119:14",
								},
								{
									nodeType: "YulBlock",
									src: "6730:117:14",
									statements: [
										{
											nodeType: "YulVariableDeclaration",
											src: "6745:15:14",
											value: {
												kind: "number",
												nodeType: "YulLiteral",
												src: "6759:1:14",
												type: "",
												value: "0",
											},
											variables: [
												{
													name: "offset",
													nodeType: "YulTypedName",
													src: "6749:6:14",
													type: "",
												},
											],
										},
										{
											nodeType: "YulAssignment",
											src: "6774:63:14",
											value: {
												arguments: [
													{
														arguments: [
															{
																name: "headStart",
																nodeType: "YulIdentifier",
																src: "6809:9:14",
															},
															{
																name: "offset",
																nodeType: "YulIdentifier",
																src: "6820:6:14",
															},
														],
														functionName: {
															name: "add",
															nodeType: "YulIdentifier",
															src: "6805:3:14",
														},
														nodeType: "YulFunctionCall",
														src: "6805:22:14",
													},
													{
														name: "dataEnd",
														nodeType: "YulIdentifier",
														src: "6829:7:14",
													},
												],
												functionName: {
													name: "abi_decode_t_address",
													nodeType: "YulIdentifier",
													src: "6784:20:14",
												},
												nodeType: "YulFunctionCall",
												src: "6784:53:14",
											},
											variableNames: [
												{
													name: "value0",
													nodeType: "YulIdentifier",
													src: "6774:6:14",
												},
											],
										},
									],
								},
								{
									nodeType: "YulBlock",
									src: "6857:115:14",
									statements: [
										{
											nodeType: "YulVariableDeclaration",
											src: "6872:16:14",
											value: {
												kind: "number",
												nodeType: "YulLiteral",
												src: "6886:2:14",
												type: "",
												value: "32",
											},
											variables: [
												{
													name: "offset",
													nodeType: "YulTypedName",
													src: "6876:6:14",
													type: "",
												},
											],
										},
										{
											nodeType: "YulAssignment",
											src: "6902:60:14",
											value: {
												arguments: [
													{
														arguments: [
															{
																name: "headStart",
																nodeType: "YulIdentifier",
																src: "6934:9:14",
															},
															{
																name: "offset",
																nodeType: "YulIdentifier",
																src: "6945:6:14",
															},
														],
														functionName: {
															name: "add",
															nodeType: "YulIdentifier",
															src: "6930:3:14",
														},
														nodeType: "YulFunctionCall",
														src: "6930:22:14",
													},
													{
														name: "dataEnd",
														nodeType: "YulIdentifier",
														src: "6954:7:14",
													},
												],
												functionName: {
													name: "abi_decode_t_bool",
													nodeType: "YulIdentifier",
													src: "6912:17:14",
												},
												nodeType: "YulFunctionCall",
												src: "6912:50:14",
											},
											variableNames: [
												{
													name: "value1",
													nodeType: "YulIdentifier",
													src: "6902:6:14",
												},
											],
										},
									],
								},
							],
						},
						name: "abi_decode_tuple_t_addresst_bool",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "headStart",
								nodeType: "YulTypedName",
								src: "6553:9:14",
								type: "",
							},
							{
								name: "dataEnd",
								nodeType: "YulTypedName",
								src: "6564:7:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "value0",
								nodeType: "YulTypedName",
								src: "6576:6:14",
								type: "",
							},
							{
								name: "value1",
								nodeType: "YulTypedName",
								src: "6584:6:14",
								type: "",
							},
						],
						src: "6511:468:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "7074:28:14",
							statements: [
								{
									expression: {
										arguments: [
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "7091:1:14",
												type: "",
												value: "0",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "7094:1:14",
												type: "",
												value: "0",
											},
										],
										functionName: {
											name: "revert",
											nodeType: "YulIdentifier",
											src: "7084:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "7084:12:14",
									},
									nodeType: "YulExpressionStatement",
									src: "7084:12:14",
								},
							],
						},
						name:
							"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
						nodeType: "YulFunctionDefinition",
						src: "6985:117:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "7197:28:14",
							statements: [
								{
									expression: {
										arguments: [
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "7214:1:14",
												type: "",
												value: "0",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "7217:1:14",
												type: "",
												value: "0",
											},
										],
										functionName: {
											name: "revert",
											nodeType: "YulIdentifier",
											src: "7207:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "7207:12:14",
									},
									nodeType: "YulExpressionStatement",
									src: "7207:12:14",
								},
							],
						},
						name:
							"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
						nodeType: "YulFunctionDefinition",
						src: "7108:117:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "7259:152:14",
							statements: [
								{
									expression: {
										arguments: [
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "7276:1:14",
												type: "",
												value: "0",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "7279:77:14",
												type: "",
												value:
													"35408467139433450592217433187231851964531694900788300625387963629091585785856",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "7269:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "7269:88:14",
									},
									nodeType: "YulExpressionStatement",
									src: "7269:88:14",
								},
								{
									expression: {
										arguments: [
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "7373:1:14",
												type: "",
												value: "4",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "7376:4:14",
												type: "",
												value: "0x41",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "7366:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "7366:15:14",
									},
									nodeType: "YulExpressionStatement",
									src: "7366:15:14",
								},
								{
									expression: {
										arguments: [
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "7397:1:14",
												type: "",
												value: "0",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "7400:4:14",
												type: "",
												value: "0x24",
											},
										],
										functionName: {
											name: "revert",
											nodeType: "YulIdentifier",
											src: "7390:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "7390:15:14",
									},
									nodeType: "YulExpressionStatement",
									src: "7390:15:14",
								},
							],
						},
						name: "panic_error_0x41",
						nodeType: "YulFunctionDefinition",
						src: "7231:180:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "7460:238:14",
							statements: [
								{
									nodeType: "YulVariableDeclaration",
									src: "7470:58:14",
									value: {
										arguments: [
											{
												name: "memPtr",
												nodeType: "YulIdentifier",
												src: "7492:6:14",
											},
											{
												arguments: [
													{
														name: "size",
														nodeType: "YulIdentifier",
														src: "7522:4:14",
													},
												],
												functionName: {
													name: "round_up_to_mul_of_32",
													nodeType: "YulIdentifier",
													src: "7500:21:14",
												},
												nodeType: "YulFunctionCall",
												src: "7500:27:14",
											},
										],
										functionName: {
											name: "add",
											nodeType: "YulIdentifier",
											src: "7488:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "7488:40:14",
									},
									variables: [
										{
											name: "newFreePtr",
											nodeType: "YulTypedName",
											src: "7474:10:14",
											type: "",
										},
									],
								},
								{
									body: {
										nodeType: "YulBlock",
										src: "7639:22:14",
										statements: [
											{
												expression: {
													arguments: [],
													functionName: {
														name: "panic_error_0x41",
														nodeType: "YulIdentifier",
														src: "7641:16:14",
													},
													nodeType: "YulFunctionCall",
													src: "7641:18:14",
												},
												nodeType: "YulExpressionStatement",
												src: "7641:18:14",
											},
										],
									},
									condition: {
										arguments: [
											{
												arguments: [
													{
														name: "newFreePtr",
														nodeType: "YulIdentifier",
														src: "7582:10:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "7594:18:14",
														type: "",
														value: "0xffffffffffffffff",
													},
												],
												functionName: {
													name: "gt",
													nodeType: "YulIdentifier",
													src: "7579:2:14",
												},
												nodeType: "YulFunctionCall",
												src: "7579:34:14",
											},
											{
												arguments: [
													{
														name: "newFreePtr",
														nodeType: "YulIdentifier",
														src: "7618:10:14",
													},
													{
														name: "memPtr",
														nodeType: "YulIdentifier",
														src: "7630:6:14",
													},
												],
												functionName: {
													name: "lt",
													nodeType: "YulIdentifier",
													src: "7615:2:14",
												},
												nodeType: "YulFunctionCall",
												src: "7615:22:14",
											},
										],
										functionName: {
											name: "or",
											nodeType: "YulIdentifier",
											src: "7576:2:14",
										},
										nodeType: "YulFunctionCall",
										src: "7576:62:14",
									},
									nodeType: "YulIf",
									src: "7573:88:14",
								},
								{
									expression: {
										arguments: [
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "7677:2:14",
												type: "",
												value: "64",
											},
											{
												name: "newFreePtr",
												nodeType: "YulIdentifier",
												src: "7681:10:14",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "7670:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "7670:22:14",
									},
									nodeType: "YulExpressionStatement",
									src: "7670:22:14",
								},
							],
						},
						name: "finalize_allocation",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "memPtr",
								nodeType: "YulTypedName",
								src: "7446:6:14",
								type: "",
							},
							{
								name: "size",
								nodeType: "YulTypedName",
								src: "7454:4:14",
								type: "",
							},
						],
						src: "7417:281:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "7745:88:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "7755:30:14",
									value: {
										arguments: [],
										functionName: {
											name: "allocate_unbounded",
											nodeType: "YulIdentifier",
											src: "7765:18:14",
										},
										nodeType: "YulFunctionCall",
										src: "7765:20:14",
									},
									variableNames: [
										{
											name: "memPtr",
											nodeType: "YulIdentifier",
											src: "7755:6:14",
										},
									],
								},
								{
									expression: {
										arguments: [
											{
												name: "memPtr",
												nodeType: "YulIdentifier",
												src: "7814:6:14",
											},
											{
												name: "size",
												nodeType: "YulIdentifier",
												src: "7822:4:14",
											},
										],
										functionName: {
											name: "finalize_allocation",
											nodeType: "YulIdentifier",
											src: "7794:19:14",
										},
										nodeType: "YulFunctionCall",
										src: "7794:33:14",
									},
									nodeType: "YulExpressionStatement",
									src: "7794:33:14",
								},
							],
						},
						name: "allocate_memory",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "size",
								nodeType: "YulTypedName",
								src: "7729:4:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "memPtr",
								nodeType: "YulTypedName",
								src: "7738:6:14",
								type: "",
							},
						],
						src: "7704:129:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "7905:241:14",
							statements: [
								{
									body: {
										nodeType: "YulBlock",
										src: "8010:22:14",
										statements: [
											{
												expression: {
													arguments: [],
													functionName: {
														name: "panic_error_0x41",
														nodeType: "YulIdentifier",
														src: "8012:16:14",
													},
													nodeType: "YulFunctionCall",
													src: "8012:18:14",
												},
												nodeType: "YulExpressionStatement",
												src: "8012:18:14",
											},
										],
									},
									condition: {
										arguments: [
											{
												name: "length",
												nodeType: "YulIdentifier",
												src: "7982:6:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "7990:18:14",
												type: "",
												value: "0xffffffffffffffff",
											},
										],
										functionName: {
											name: "gt",
											nodeType: "YulIdentifier",
											src: "7979:2:14",
										},
										nodeType: "YulFunctionCall",
										src: "7979:30:14",
									},
									nodeType: "YulIf",
									src: "7976:56:14",
								},
								{
									nodeType: "YulAssignment",
									src: "8042:37:14",
									value: {
										arguments: [
											{
												name: "length",
												nodeType: "YulIdentifier",
												src: "8072:6:14",
											},
										],
										functionName: {
											name: "round_up_to_mul_of_32",
											nodeType: "YulIdentifier",
											src: "8050:21:14",
										},
										nodeType: "YulFunctionCall",
										src: "8050:29:14",
									},
									variableNames: [
										{
											name: "size",
											nodeType: "YulIdentifier",
											src: "8042:4:14",
										},
									],
								},
								{
									nodeType: "YulAssignment",
									src: "8116:23:14",
									value: {
										arguments: [
											{
												name: "size",
												nodeType: "YulIdentifier",
												src: "8128:4:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "8134:4:14",
												type: "",
												value: "0x20",
											},
										],
										functionName: {
											name: "add",
											nodeType: "YulIdentifier",
											src: "8124:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "8124:15:14",
									},
									variableNames: [
										{
											name: "size",
											nodeType: "YulIdentifier",
											src: "8116:4:14",
										},
									],
								},
							],
						},
						name: "array_allocation_size_t_bytes_memory_ptr",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "length",
								nodeType: "YulTypedName",
								src: "7889:6:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "size",
								nodeType: "YulTypedName",
								src: "7900:4:14",
								type: "",
							},
						],
						src: "7839:307:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "8203:103:14",
							statements: [
								{
									expression: {
										arguments: [
											{
												name: "dst",
												nodeType: "YulIdentifier",
												src: "8226:3:14",
											},
											{
												name: "src",
												nodeType: "YulIdentifier",
												src: "8231:3:14",
											},
											{
												name: "length",
												nodeType: "YulIdentifier",
												src: "8236:6:14",
											},
										],
										functionName: {
											name: "calldatacopy",
											nodeType: "YulIdentifier",
											src: "8213:12:14",
										},
										nodeType: "YulFunctionCall",
										src: "8213:30:14",
									},
									nodeType: "YulExpressionStatement",
									src: "8213:30:14",
								},
								{
									expression: {
										arguments: [
											{
												arguments: [
													{
														name: "dst",
														nodeType: "YulIdentifier",
														src: "8284:3:14",
													},
													{
														name: "length",
														nodeType: "YulIdentifier",
														src: "8289:6:14",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "8280:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "8280:16:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "8298:1:14",
												type: "",
												value: "0",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "8273:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "8273:27:14",
									},
									nodeType: "YulExpressionStatement",
									src: "8273:27:14",
								},
							],
						},
						name: "copy_calldata_to_memory",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "src",
								nodeType: "YulTypedName",
								src: "8185:3:14",
								type: "",
							},
							{
								name: "dst",
								nodeType: "YulTypedName",
								src: "8190:3:14",
								type: "",
							},
							{
								name: "length",
								nodeType: "YulTypedName",
								src: "8195:6:14",
								type: "",
							},
						],
						src: "8152:154:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "8395:327:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "8405:74:14",
									value: {
										arguments: [
											{
												arguments: [
													{
														name: "length",
														nodeType: "YulIdentifier",
														src: "8471:6:14",
													},
												],
												functionName: {
													name: "array_allocation_size_t_bytes_memory_ptr",
													nodeType: "YulIdentifier",
													src: "8430:40:14",
												},
												nodeType: "YulFunctionCall",
												src: "8430:48:14",
											},
										],
										functionName: {
											name: "allocate_memory",
											nodeType: "YulIdentifier",
											src: "8414:15:14",
										},
										nodeType: "YulFunctionCall",
										src: "8414:65:14",
									},
									variableNames: [
										{
											name: "array",
											nodeType: "YulIdentifier",
											src: "8405:5:14",
										},
									],
								},
								{
									expression: {
										arguments: [
											{
												name: "array",
												nodeType: "YulIdentifier",
												src: "8495:5:14",
											},
											{
												name: "length",
												nodeType: "YulIdentifier",
												src: "8502:6:14",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "8488:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "8488:21:14",
									},
									nodeType: "YulExpressionStatement",
									src: "8488:21:14",
								},
								{
									nodeType: "YulVariableDeclaration",
									src: "8518:27:14",
									value: {
										arguments: [
											{
												name: "array",
												nodeType: "YulIdentifier",
												src: "8533:5:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "8540:4:14",
												type: "",
												value: "0x20",
											},
										],
										functionName: {
											name: "add",
											nodeType: "YulIdentifier",
											src: "8529:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "8529:16:14",
									},
									variables: [
										{
											name: "dst",
											nodeType: "YulTypedName",
											src: "8522:3:14",
											type: "",
										},
									],
								},
								{
									body: {
										nodeType: "YulBlock",
										src: "8583:83:14",
										statements: [
											{
												expression: {
													arguments: [],
													functionName: {
														name:
															"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
														nodeType: "YulIdentifier",
														src: "8585:77:14",
													},
													nodeType: "YulFunctionCall",
													src: "8585:79:14",
												},
												nodeType: "YulExpressionStatement",
												src: "8585:79:14",
											},
										],
									},
									condition: {
										arguments: [
											{
												arguments: [
													{
														name: "src",
														nodeType: "YulIdentifier",
														src: "8564:3:14",
													},
													{
														name: "length",
														nodeType: "YulIdentifier",
														src: "8569:6:14",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "8560:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "8560:16:14",
											},
											{
												name: "end",
												nodeType: "YulIdentifier",
												src: "8578:3:14",
											},
										],
										functionName: {
											name: "gt",
											nodeType: "YulIdentifier",
											src: "8557:2:14",
										},
										nodeType: "YulFunctionCall",
										src: "8557:25:14",
									},
									nodeType: "YulIf",
									src: "8554:112:14",
								},
								{
									expression: {
										arguments: [
											{
												name: "src",
												nodeType: "YulIdentifier",
												src: "8699:3:14",
											},
											{
												name: "dst",
												nodeType: "YulIdentifier",
												src: "8704:3:14",
											},
											{
												name: "length",
												nodeType: "YulIdentifier",
												src: "8709:6:14",
											},
										],
										functionName: {
											name: "copy_calldata_to_memory",
											nodeType: "YulIdentifier",
											src: "8675:23:14",
										},
										nodeType: "YulFunctionCall",
										src: "8675:41:14",
									},
									nodeType: "YulExpressionStatement",
									src: "8675:41:14",
								},
							],
						},
						name: "abi_decode_available_length_t_bytes_memory_ptr",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "src",
								nodeType: "YulTypedName",
								src: "8368:3:14",
								type: "",
							},
							{
								name: "length",
								nodeType: "YulTypedName",
								src: "8373:6:14",
								type: "",
							},
							{
								name: "end",
								nodeType: "YulTypedName",
								src: "8381:3:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "array",
								nodeType: "YulTypedName",
								src: "8389:5:14",
								type: "",
							},
						],
						src: "8312:410:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "8802:277:14",
							statements: [
								{
									body: {
										nodeType: "YulBlock",
										src: "8851:83:14",
										statements: [
											{
												expression: {
													arguments: [],
													functionName: {
														name:
															"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
														nodeType: "YulIdentifier",
														src: "8853:77:14",
													},
													nodeType: "YulFunctionCall",
													src: "8853:79:14",
												},
												nodeType: "YulExpressionStatement",
												src: "8853:79:14",
											},
										],
									},
									condition: {
										arguments: [
											{
												arguments: [
													{
														arguments: [
															{
																name: "offset",
																nodeType: "YulIdentifier",
																src: "8830:6:14",
															},
															{
																kind: "number",
																nodeType: "YulLiteral",
																src: "8838:4:14",
																type: "",
																value: "0x1f",
															},
														],
														functionName: {
															name: "add",
															nodeType: "YulIdentifier",
															src: "8826:3:14",
														},
														nodeType: "YulFunctionCall",
														src: "8826:17:14",
													},
													{
														name: "end",
														nodeType: "YulIdentifier",
														src: "8845:3:14",
													},
												],
												functionName: {
													name: "slt",
													nodeType: "YulIdentifier",
													src: "8822:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "8822:27:14",
											},
										],
										functionName: {
											name: "iszero",
											nodeType: "YulIdentifier",
											src: "8815:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "8815:35:14",
									},
									nodeType: "YulIf",
									src: "8812:122:14",
								},
								{
									nodeType: "YulVariableDeclaration",
									src: "8943:34:14",
									value: {
										arguments: [
											{
												name: "offset",
												nodeType: "YulIdentifier",
												src: "8970:6:14",
											},
										],
										functionName: {
											name: "calldataload",
											nodeType: "YulIdentifier",
											src: "8957:12:14",
										},
										nodeType: "YulFunctionCall",
										src: "8957:20:14",
									},
									variables: [
										{
											name: "length",
											nodeType: "YulTypedName",
											src: "8947:6:14",
											type: "",
										},
									],
								},
								{
									nodeType: "YulAssignment",
									src: "8986:87:14",
									value: {
										arguments: [
											{
												arguments: [
													{
														name: "offset",
														nodeType: "YulIdentifier",
														src: "9046:6:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "9054:4:14",
														type: "",
														value: "0x20",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "9042:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "9042:17:14",
											},
											{
												name: "length",
												nodeType: "YulIdentifier",
												src: "9061:6:14",
											},
											{
												name: "end",
												nodeType: "YulIdentifier",
												src: "9069:3:14",
											},
										],
										functionName: {
											name: "abi_decode_available_length_t_bytes_memory_ptr",
											nodeType: "YulIdentifier",
											src: "8995:46:14",
										},
										nodeType: "YulFunctionCall",
										src: "8995:78:14",
									},
									variableNames: [
										{
											name: "array",
											nodeType: "YulIdentifier",
											src: "8986:5:14",
										},
									],
								},
							],
						},
						name: "abi_decode_t_bytes_memory_ptr",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "offset",
								nodeType: "YulTypedName",
								src: "8780:6:14",
								type: "",
							},
							{
								name: "end",
								nodeType: "YulTypedName",
								src: "8788:3:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "array",
								nodeType: "YulTypedName",
								src: "8796:5:14",
								type: "",
							},
						],
						src: "8741:338:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "9211:817:14",
							statements: [
								{
									body: {
										nodeType: "YulBlock",
										src: "9258:83:14",
										statements: [
											{
												expression: {
													arguments: [],
													functionName: {
														name:
															"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
														nodeType: "YulIdentifier",
														src: "9260:77:14",
													},
													nodeType: "YulFunctionCall",
													src: "9260:79:14",
												},
												nodeType: "YulExpressionStatement",
												src: "9260:79:14",
											},
										],
									},
									condition: {
										arguments: [
											{
												arguments: [
													{
														name: "dataEnd",
														nodeType: "YulIdentifier",
														src: "9232:7:14",
													},
													{
														name: "headStart",
														nodeType: "YulIdentifier",
														src: "9241:9:14",
													},
												],
												functionName: {
													name: "sub",
													nodeType: "YulIdentifier",
													src: "9228:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "9228:23:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "9253:3:14",
												type: "",
												value: "128",
											},
										],
										functionName: {
											name: "slt",
											nodeType: "YulIdentifier",
											src: "9224:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "9224:33:14",
									},
									nodeType: "YulIf",
									src: "9221:120:14",
								},
								{
									nodeType: "YulBlock",
									src: "9351:117:14",
									statements: [
										{
											nodeType: "YulVariableDeclaration",
											src: "9366:15:14",
											value: {
												kind: "number",
												nodeType: "YulLiteral",
												src: "9380:1:14",
												type: "",
												value: "0",
											},
											variables: [
												{
													name: "offset",
													nodeType: "YulTypedName",
													src: "9370:6:14",
													type: "",
												},
											],
										},
										{
											nodeType: "YulAssignment",
											src: "9395:63:14",
											value: {
												arguments: [
													{
														arguments: [
															{
																name: "headStart",
																nodeType: "YulIdentifier",
																src: "9430:9:14",
															},
															{
																name: "offset",
																nodeType: "YulIdentifier",
																src: "9441:6:14",
															},
														],
														functionName: {
															name: "add",
															nodeType: "YulIdentifier",
															src: "9426:3:14",
														},
														nodeType: "YulFunctionCall",
														src: "9426:22:14",
													},
													{
														name: "dataEnd",
														nodeType: "YulIdentifier",
														src: "9450:7:14",
													},
												],
												functionName: {
													name: "abi_decode_t_address",
													nodeType: "YulIdentifier",
													src: "9405:20:14",
												},
												nodeType: "YulFunctionCall",
												src: "9405:53:14",
											},
											variableNames: [
												{
													name: "value0",
													nodeType: "YulIdentifier",
													src: "9395:6:14",
												},
											],
										},
									],
								},
								{
									nodeType: "YulBlock",
									src: "9478:118:14",
									statements: [
										{
											nodeType: "YulVariableDeclaration",
											src: "9493:16:14",
											value: {
												kind: "number",
												nodeType: "YulLiteral",
												src: "9507:2:14",
												type: "",
												value: "32",
											},
											variables: [
												{
													name: "offset",
													nodeType: "YulTypedName",
													src: "9497:6:14",
													type: "",
												},
											],
										},
										{
											nodeType: "YulAssignment",
											src: "9523:63:14",
											value: {
												arguments: [
													{
														arguments: [
															{
																name: "headStart",
																nodeType: "YulIdentifier",
																src: "9558:9:14",
															},
															{
																name: "offset",
																nodeType: "YulIdentifier",
																src: "9569:6:14",
															},
														],
														functionName: {
															name: "add",
															nodeType: "YulIdentifier",
															src: "9554:3:14",
														},
														nodeType: "YulFunctionCall",
														src: "9554:22:14",
													},
													{
														name: "dataEnd",
														nodeType: "YulIdentifier",
														src: "9578:7:14",
													},
												],
												functionName: {
													name: "abi_decode_t_address",
													nodeType: "YulIdentifier",
													src: "9533:20:14",
												},
												nodeType: "YulFunctionCall",
												src: "9533:53:14",
											},
											variableNames: [
												{
													name: "value1",
													nodeType: "YulIdentifier",
													src: "9523:6:14",
												},
											],
										},
									],
								},
								{
									nodeType: "YulBlock",
									src: "9606:118:14",
									statements: [
										{
											nodeType: "YulVariableDeclaration",
											src: "9621:16:14",
											value: {
												kind: "number",
												nodeType: "YulLiteral",
												src: "9635:2:14",
												type: "",
												value: "64",
											},
											variables: [
												{
													name: "offset",
													nodeType: "YulTypedName",
													src: "9625:6:14",
													type: "",
												},
											],
										},
										{
											nodeType: "YulAssignment",
											src: "9651:63:14",
											value: {
												arguments: [
													{
														arguments: [
															{
																name: "headStart",
																nodeType: "YulIdentifier",
																src: "9686:9:14",
															},
															{
																name: "offset",
																nodeType: "YulIdentifier",
																src: "9697:6:14",
															},
														],
														functionName: {
															name: "add",
															nodeType: "YulIdentifier",
															src: "9682:3:14",
														},
														nodeType: "YulFunctionCall",
														src: "9682:22:14",
													},
													{
														name: "dataEnd",
														nodeType: "YulIdentifier",
														src: "9706:7:14",
													},
												],
												functionName: {
													name: "abi_decode_t_uint256",
													nodeType: "YulIdentifier",
													src: "9661:20:14",
												},
												nodeType: "YulFunctionCall",
												src: "9661:53:14",
											},
											variableNames: [
												{
													name: "value2",
													nodeType: "YulIdentifier",
													src: "9651:6:14",
												},
											],
										},
									],
								},
								{
									nodeType: "YulBlock",
									src: "9734:287:14",
									statements: [
										{
											nodeType: "YulVariableDeclaration",
											src: "9749:46:14",
											value: {
												arguments: [
													{
														arguments: [
															{
																name: "headStart",
																nodeType: "YulIdentifier",
																src: "9780:9:14",
															},
															{
																kind: "number",
																nodeType: "YulLiteral",
																src: "9791:2:14",
																type: "",
																value: "96",
															},
														],
														functionName: {
															name: "add",
															nodeType: "YulIdentifier",
															src: "9776:3:14",
														},
														nodeType: "YulFunctionCall",
														src: "9776:18:14",
													},
												],
												functionName: {
													name: "calldataload",
													nodeType: "YulIdentifier",
													src: "9763:12:14",
												},
												nodeType: "YulFunctionCall",
												src: "9763:32:14",
											},
											variables: [
												{
													name: "offset",
													nodeType: "YulTypedName",
													src: "9753:6:14",
													type: "",
												},
											],
										},
										{
											body: {
												nodeType: "YulBlock",
												src: "9842:83:14",
												statements: [
													{
														expression: {
															arguments: [],
															functionName: {
																name:
																	"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																nodeType: "YulIdentifier",
																src: "9844:77:14",
															},
															nodeType: "YulFunctionCall",
															src: "9844:79:14",
														},
														nodeType: "YulExpressionStatement",
														src: "9844:79:14",
													},
												],
											},
											condition: {
												arguments: [
													{
														name: "offset",
														nodeType: "YulIdentifier",
														src: "9814:6:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "9822:18:14",
														type: "",
														value: "0xffffffffffffffff",
													},
												],
												functionName: {
													name: "gt",
													nodeType: "YulIdentifier",
													src: "9811:2:14",
												},
												nodeType: "YulFunctionCall",
												src: "9811:30:14",
											},
											nodeType: "YulIf",
											src: "9808:117:14",
										},
										{
											nodeType: "YulAssignment",
											src: "9939:72:14",
											value: {
												arguments: [
													{
														arguments: [
															{
																name: "headStart",
																nodeType: "YulIdentifier",
																src: "9983:9:14",
															},
															{
																name: "offset",
																nodeType: "YulIdentifier",
																src: "9994:6:14",
															},
														],
														functionName: {
															name: "add",
															nodeType: "YulIdentifier",
															src: "9979:3:14",
														},
														nodeType: "YulFunctionCall",
														src: "9979:22:14",
													},
													{
														name: "dataEnd",
														nodeType: "YulIdentifier",
														src: "10003:7:14",
													},
												],
												functionName: {
													name: "abi_decode_t_bytes_memory_ptr",
													nodeType: "YulIdentifier",
													src: "9949:29:14",
												},
												nodeType: "YulFunctionCall",
												src: "9949:62:14",
											},
											variableNames: [
												{
													name: "value3",
													nodeType: "YulIdentifier",
													src: "9939:6:14",
												},
											],
										},
									],
								},
							],
						},
						name:
							"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "headStart",
								nodeType: "YulTypedName",
								src: "9157:9:14",
								type: "",
							},
							{
								name: "dataEnd",
								nodeType: "YulTypedName",
								src: "9168:7:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "value0",
								nodeType: "YulTypedName",
								src: "9180:6:14",
								type: "",
							},
							{
								name: "value1",
								nodeType: "YulTypedName",
								src: "9188:6:14",
								type: "",
							},
							{
								name: "value2",
								nodeType: "YulTypedName",
								src: "9196:6:14",
								type: "",
							},
							{
								name: "value3",
								nodeType: "YulTypedName",
								src: "9204:6:14",
								type: "",
							},
						],
						src: "9085:943:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "10101:241:14",
							statements: [
								{
									body: {
										nodeType: "YulBlock",
										src: "10206:22:14",
										statements: [
											{
												expression: {
													arguments: [],
													functionName: {
														name: "panic_error_0x41",
														nodeType: "YulIdentifier",
														src: "10208:16:14",
													},
													nodeType: "YulFunctionCall",
													src: "10208:18:14",
												},
												nodeType: "YulExpressionStatement",
												src: "10208:18:14",
											},
										],
									},
									condition: {
										arguments: [
											{
												name: "length",
												nodeType: "YulIdentifier",
												src: "10178:6:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "10186:18:14",
												type: "",
												value: "0xffffffffffffffff",
											},
										],
										functionName: {
											name: "gt",
											nodeType: "YulIdentifier",
											src: "10175:2:14",
										},
										nodeType: "YulFunctionCall",
										src: "10175:30:14",
									},
									nodeType: "YulIf",
									src: "10172:56:14",
								},
								{
									nodeType: "YulAssignment",
									src: "10238:37:14",
									value: {
										arguments: [
											{
												name: "length",
												nodeType: "YulIdentifier",
												src: "10268:6:14",
											},
										],
										functionName: {
											name: "round_up_to_mul_of_32",
											nodeType: "YulIdentifier",
											src: "10246:21:14",
										},
										nodeType: "YulFunctionCall",
										src: "10246:29:14",
									},
									variableNames: [
										{
											name: "size",
											nodeType: "YulIdentifier",
											src: "10238:4:14",
										},
									],
								},
								{
									nodeType: "YulAssignment",
									src: "10312:23:14",
									value: {
										arguments: [
											{
												name: "size",
												nodeType: "YulIdentifier",
												src: "10324:4:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "10330:4:14",
												type: "",
												value: "0x20",
											},
										],
										functionName: {
											name: "add",
											nodeType: "YulIdentifier",
											src: "10320:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "10320:15:14",
									},
									variableNames: [
										{
											name: "size",
											nodeType: "YulIdentifier",
											src: "10312:4:14",
										},
									],
								},
							],
						},
						name: "array_allocation_size_t_string_memory_ptr",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "length",
								nodeType: "YulTypedName",
								src: "10085:6:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "size",
								nodeType: "YulTypedName",
								src: "10096:4:14",
								type: "",
							},
						],
						src: "10034:308:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "10432:328:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "10442:75:14",
									value: {
										arguments: [
											{
												arguments: [
													{
														name: "length",
														nodeType: "YulIdentifier",
														src: "10509:6:14",
													},
												],
												functionName: {
													name: "array_allocation_size_t_string_memory_ptr",
													nodeType: "YulIdentifier",
													src: "10467:41:14",
												},
												nodeType: "YulFunctionCall",
												src: "10467:49:14",
											},
										],
										functionName: {
											name: "allocate_memory",
											nodeType: "YulIdentifier",
											src: "10451:15:14",
										},
										nodeType: "YulFunctionCall",
										src: "10451:66:14",
									},
									variableNames: [
										{
											name: "array",
											nodeType: "YulIdentifier",
											src: "10442:5:14",
										},
									],
								},
								{
									expression: {
										arguments: [
											{
												name: "array",
												nodeType: "YulIdentifier",
												src: "10533:5:14",
											},
											{
												name: "length",
												nodeType: "YulIdentifier",
												src: "10540:6:14",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "10526:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "10526:21:14",
									},
									nodeType: "YulExpressionStatement",
									src: "10526:21:14",
								},
								{
									nodeType: "YulVariableDeclaration",
									src: "10556:27:14",
									value: {
										arguments: [
											{
												name: "array",
												nodeType: "YulIdentifier",
												src: "10571:5:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "10578:4:14",
												type: "",
												value: "0x20",
											},
										],
										functionName: {
											name: "add",
											nodeType: "YulIdentifier",
											src: "10567:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "10567:16:14",
									},
									variables: [
										{
											name: "dst",
											nodeType: "YulTypedName",
											src: "10560:3:14",
											type: "",
										},
									],
								},
								{
									body: {
										nodeType: "YulBlock",
										src: "10621:83:14",
										statements: [
											{
												expression: {
													arguments: [],
													functionName: {
														name:
															"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
														nodeType: "YulIdentifier",
														src: "10623:77:14",
													},
													nodeType: "YulFunctionCall",
													src: "10623:79:14",
												},
												nodeType: "YulExpressionStatement",
												src: "10623:79:14",
											},
										],
									},
									condition: {
										arguments: [
											{
												arguments: [
													{
														name: "src",
														nodeType: "YulIdentifier",
														src: "10602:3:14",
													},
													{
														name: "length",
														nodeType: "YulIdentifier",
														src: "10607:6:14",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "10598:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "10598:16:14",
											},
											{
												name: "end",
												nodeType: "YulIdentifier",
												src: "10616:3:14",
											},
										],
										functionName: {
											name: "gt",
											nodeType: "YulIdentifier",
											src: "10595:2:14",
										},
										nodeType: "YulFunctionCall",
										src: "10595:25:14",
									},
									nodeType: "YulIf",
									src: "10592:112:14",
								},
								{
									expression: {
										arguments: [
											{
												name: "src",
												nodeType: "YulIdentifier",
												src: "10737:3:14",
											},
											{
												name: "dst",
												nodeType: "YulIdentifier",
												src: "10742:3:14",
											},
											{
												name: "length",
												nodeType: "YulIdentifier",
												src: "10747:6:14",
											},
										],
										functionName: {
											name: "copy_calldata_to_memory",
											nodeType: "YulIdentifier",
											src: "10713:23:14",
										},
										nodeType: "YulFunctionCall",
										src: "10713:41:14",
									},
									nodeType: "YulExpressionStatement",
									src: "10713:41:14",
								},
							],
						},
						name: "abi_decode_available_length_t_string_memory_ptr",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "src",
								nodeType: "YulTypedName",
								src: "10405:3:14",
								type: "",
							},
							{
								name: "length",
								nodeType: "YulTypedName",
								src: "10410:6:14",
								type: "",
							},
							{
								name: "end",
								nodeType: "YulTypedName",
								src: "10418:3:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "array",
								nodeType: "YulTypedName",
								src: "10426:5:14",
								type: "",
							},
						],
						src: "10348:412:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "10842:278:14",
							statements: [
								{
									body: {
										nodeType: "YulBlock",
										src: "10891:83:14",
										statements: [
											{
												expression: {
													arguments: [],
													functionName: {
														name:
															"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
														nodeType: "YulIdentifier",
														src: "10893:77:14",
													},
													nodeType: "YulFunctionCall",
													src: "10893:79:14",
												},
												nodeType: "YulExpressionStatement",
												src: "10893:79:14",
											},
										],
									},
									condition: {
										arguments: [
											{
												arguments: [
													{
														arguments: [
															{
																name: "offset",
																nodeType: "YulIdentifier",
																src: "10870:6:14",
															},
															{
																kind: "number",
																nodeType: "YulLiteral",
																src: "10878:4:14",
																type: "",
																value: "0x1f",
															},
														],
														functionName: {
															name: "add",
															nodeType: "YulIdentifier",
															src: "10866:3:14",
														},
														nodeType: "YulFunctionCall",
														src: "10866:17:14",
													},
													{
														name: "end",
														nodeType: "YulIdentifier",
														src: "10885:3:14",
													},
												],
												functionName: {
													name: "slt",
													nodeType: "YulIdentifier",
													src: "10862:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "10862:27:14",
											},
										],
										functionName: {
											name: "iszero",
											nodeType: "YulIdentifier",
											src: "10855:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "10855:35:14",
									},
									nodeType: "YulIf",
									src: "10852:122:14",
								},
								{
									nodeType: "YulVariableDeclaration",
									src: "10983:34:14",
									value: {
										arguments: [
											{
												name: "offset",
												nodeType: "YulIdentifier",
												src: "11010:6:14",
											},
										],
										functionName: {
											name: "calldataload",
											nodeType: "YulIdentifier",
											src: "10997:12:14",
										},
										nodeType: "YulFunctionCall",
										src: "10997:20:14",
									},
									variables: [
										{
											name: "length",
											nodeType: "YulTypedName",
											src: "10987:6:14",
											type: "",
										},
									],
								},
								{
									nodeType: "YulAssignment",
									src: "11026:88:14",
									value: {
										arguments: [
											{
												arguments: [
													{
														name: "offset",
														nodeType: "YulIdentifier",
														src: "11087:6:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "11095:4:14",
														type: "",
														value: "0x20",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "11083:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "11083:17:14",
											},
											{
												name: "length",
												nodeType: "YulIdentifier",
												src: "11102:6:14",
											},
											{
												name: "end",
												nodeType: "YulIdentifier",
												src: "11110:3:14",
											},
										],
										functionName: {
											name: "abi_decode_available_length_t_string_memory_ptr",
											nodeType: "YulIdentifier",
											src: "11035:47:14",
										},
										nodeType: "YulFunctionCall",
										src: "11035:79:14",
									},
									variableNames: [
										{
											name: "array",
											nodeType: "YulIdentifier",
											src: "11026:5:14",
										},
									],
								},
							],
						},
						name: "abi_decode_t_string_memory_ptr",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "offset",
								nodeType: "YulTypedName",
								src: "10820:6:14",
								type: "",
							},
							{
								name: "end",
								nodeType: "YulTypedName",
								src: "10828:3:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "array",
								nodeType: "YulTypedName",
								src: "10836:5:14",
								type: "",
							},
						],
						src: "10780:340:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "11219:561:14",
							statements: [
								{
									body: {
										nodeType: "YulBlock",
										src: "11265:83:14",
										statements: [
											{
												expression: {
													arguments: [],
													functionName: {
														name:
															"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
														nodeType: "YulIdentifier",
														src: "11267:77:14",
													},
													nodeType: "YulFunctionCall",
													src: "11267:79:14",
												},
												nodeType: "YulExpressionStatement",
												src: "11267:79:14",
											},
										],
									},
									condition: {
										arguments: [
											{
												arguments: [
													{
														name: "dataEnd",
														nodeType: "YulIdentifier",
														src: "11240:7:14",
													},
													{
														name: "headStart",
														nodeType: "YulIdentifier",
														src: "11249:9:14",
													},
												],
												functionName: {
													name: "sub",
													nodeType: "YulIdentifier",
													src: "11236:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "11236:23:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "11261:2:14",
												type: "",
												value: "64",
											},
										],
										functionName: {
											name: "slt",
											nodeType: "YulIdentifier",
											src: "11232:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "11232:32:14",
									},
									nodeType: "YulIf",
									src: "11229:119:14",
								},
								{
									nodeType: "YulBlock",
									src: "11358:117:14",
									statements: [
										{
											nodeType: "YulVariableDeclaration",
											src: "11373:15:14",
											value: {
												kind: "number",
												nodeType: "YulLiteral",
												src: "11387:1:14",
												type: "",
												value: "0",
											},
											variables: [
												{
													name: "offset",
													nodeType: "YulTypedName",
													src: "11377:6:14",
													type: "",
												},
											],
										},
										{
											nodeType: "YulAssignment",
											src: "11402:63:14",
											value: {
												arguments: [
													{
														arguments: [
															{
																name: "headStart",
																nodeType: "YulIdentifier",
																src: "11437:9:14",
															},
															{
																name: "offset",
																nodeType: "YulIdentifier",
																src: "11448:6:14",
															},
														],
														functionName: {
															name: "add",
															nodeType: "YulIdentifier",
															src: "11433:3:14",
														},
														nodeType: "YulFunctionCall",
														src: "11433:22:14",
													},
													{
														name: "dataEnd",
														nodeType: "YulIdentifier",
														src: "11457:7:14",
													},
												],
												functionName: {
													name: "abi_decode_t_address",
													nodeType: "YulIdentifier",
													src: "11412:20:14",
												},
												nodeType: "YulFunctionCall",
												src: "11412:53:14",
											},
											variableNames: [
												{
													name: "value0",
													nodeType: "YulIdentifier",
													src: "11402:6:14",
												},
											],
										},
									],
								},
								{
									nodeType: "YulBlock",
									src: "11485:288:14",
									statements: [
										{
											nodeType: "YulVariableDeclaration",
											src: "11500:46:14",
											value: {
												arguments: [
													{
														arguments: [
															{
																name: "headStart",
																nodeType: "YulIdentifier",
																src: "11531:9:14",
															},
															{
																kind: "number",
																nodeType: "YulLiteral",
																src: "11542:2:14",
																type: "",
																value: "32",
															},
														],
														functionName: {
															name: "add",
															nodeType: "YulIdentifier",
															src: "11527:3:14",
														},
														nodeType: "YulFunctionCall",
														src: "11527:18:14",
													},
												],
												functionName: {
													name: "calldataload",
													nodeType: "YulIdentifier",
													src: "11514:12:14",
												},
												nodeType: "YulFunctionCall",
												src: "11514:32:14",
											},
											variables: [
												{
													name: "offset",
													nodeType: "YulTypedName",
													src: "11504:6:14",
													type: "",
												},
											],
										},
										{
											body: {
												nodeType: "YulBlock",
												src: "11593:83:14",
												statements: [
													{
														expression: {
															arguments: [],
															functionName: {
																name:
																	"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																nodeType: "YulIdentifier",
																src: "11595:77:14",
															},
															nodeType: "YulFunctionCall",
															src: "11595:79:14",
														},
														nodeType: "YulExpressionStatement",
														src: "11595:79:14",
													},
												],
											},
											condition: {
												arguments: [
													{
														name: "offset",
														nodeType: "YulIdentifier",
														src: "11565:6:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "11573:18:14",
														type: "",
														value: "0xffffffffffffffff",
													},
												],
												functionName: {
													name: "gt",
													nodeType: "YulIdentifier",
													src: "11562:2:14",
												},
												nodeType: "YulFunctionCall",
												src: "11562:30:14",
											},
											nodeType: "YulIf",
											src: "11559:117:14",
										},
										{
											nodeType: "YulAssignment",
											src: "11690:73:14",
											value: {
												arguments: [
													{
														arguments: [
															{
																name: "headStart",
																nodeType: "YulIdentifier",
																src: "11735:9:14",
															},
															{
																name: "offset",
																nodeType: "YulIdentifier",
																src: "11746:6:14",
															},
														],
														functionName: {
															name: "add",
															nodeType: "YulIdentifier",
															src: "11731:3:14",
														},
														nodeType: "YulFunctionCall",
														src: "11731:22:14",
													},
													{
														name: "dataEnd",
														nodeType: "YulIdentifier",
														src: "11755:7:14",
													},
												],
												functionName: {
													name: "abi_decode_t_string_memory_ptr",
													nodeType: "YulIdentifier",
													src: "11700:30:14",
												},
												nodeType: "YulFunctionCall",
												src: "11700:63:14",
											},
											variableNames: [
												{
													name: "value1",
													nodeType: "YulIdentifier",
													src: "11690:6:14",
												},
											],
										},
									],
								},
							],
						},
						name: "abi_decode_tuple_t_addresst_string_memory_ptr",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "headStart",
								nodeType: "YulTypedName",
								src: "11181:9:14",
								type: "",
							},
							{
								name: "dataEnd",
								nodeType: "YulTypedName",
								src: "11192:7:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "value0",
								nodeType: "YulTypedName",
								src: "11204:6:14",
								type: "",
							},
							{
								name: "value1",
								nodeType: "YulTypedName",
								src: "11212:6:14",
								type: "",
							},
						],
						src: "11126:654:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "11869:391:14",
							statements: [
								{
									body: {
										nodeType: "YulBlock",
										src: "11915:83:14",
										statements: [
											{
												expression: {
													arguments: [],
													functionName: {
														name:
															"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
														nodeType: "YulIdentifier",
														src: "11917:77:14",
													},
													nodeType: "YulFunctionCall",
													src: "11917:79:14",
												},
												nodeType: "YulExpressionStatement",
												src: "11917:79:14",
											},
										],
									},
									condition: {
										arguments: [
											{
												arguments: [
													{
														name: "dataEnd",
														nodeType: "YulIdentifier",
														src: "11890:7:14",
													},
													{
														name: "headStart",
														nodeType: "YulIdentifier",
														src: "11899:9:14",
													},
												],
												functionName: {
													name: "sub",
													nodeType: "YulIdentifier",
													src: "11886:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "11886:23:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "11911:2:14",
												type: "",
												value: "64",
											},
										],
										functionName: {
											name: "slt",
											nodeType: "YulIdentifier",
											src: "11882:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "11882:32:14",
									},
									nodeType: "YulIf",
									src: "11879:119:14",
								},
								{
									nodeType: "YulBlock",
									src: "12008:117:14",
									statements: [
										{
											nodeType: "YulVariableDeclaration",
											src: "12023:15:14",
											value: {
												kind: "number",
												nodeType: "YulLiteral",
												src: "12037:1:14",
												type: "",
												value: "0",
											},
											variables: [
												{
													name: "offset",
													nodeType: "YulTypedName",
													src: "12027:6:14",
													type: "",
												},
											],
										},
										{
											nodeType: "YulAssignment",
											src: "12052:63:14",
											value: {
												arguments: [
													{
														arguments: [
															{
																name: "headStart",
																nodeType: "YulIdentifier",
																src: "12087:9:14",
															},
															{
																name: "offset",
																nodeType: "YulIdentifier",
																src: "12098:6:14",
															},
														],
														functionName: {
															name: "add",
															nodeType: "YulIdentifier",
															src: "12083:3:14",
														},
														nodeType: "YulFunctionCall",
														src: "12083:22:14",
													},
													{
														name: "dataEnd",
														nodeType: "YulIdentifier",
														src: "12107:7:14",
													},
												],
												functionName: {
													name: "abi_decode_t_address",
													nodeType: "YulIdentifier",
													src: "12062:20:14",
												},
												nodeType: "YulFunctionCall",
												src: "12062:53:14",
											},
											variableNames: [
												{
													name: "value0",
													nodeType: "YulIdentifier",
													src: "12052:6:14",
												},
											],
										},
									],
								},
								{
									nodeType: "YulBlock",
									src: "12135:118:14",
									statements: [
										{
											nodeType: "YulVariableDeclaration",
											src: "12150:16:14",
											value: {
												kind: "number",
												nodeType: "YulLiteral",
												src: "12164:2:14",
												type: "",
												value: "32",
											},
											variables: [
												{
													name: "offset",
													nodeType: "YulTypedName",
													src: "12154:6:14",
													type: "",
												},
											],
										},
										{
											nodeType: "YulAssignment",
											src: "12180:63:14",
											value: {
												arguments: [
													{
														arguments: [
															{
																name: "headStart",
																nodeType: "YulIdentifier",
																src: "12215:9:14",
															},
															{
																name: "offset",
																nodeType: "YulIdentifier",
																src: "12226:6:14",
															},
														],
														functionName: {
															name: "add",
															nodeType: "YulIdentifier",
															src: "12211:3:14",
														},
														nodeType: "YulFunctionCall",
														src: "12211:22:14",
													},
													{
														name: "dataEnd",
														nodeType: "YulIdentifier",
														src: "12235:7:14",
													},
												],
												functionName: {
													name: "abi_decode_t_address",
													nodeType: "YulIdentifier",
													src: "12190:20:14",
												},
												nodeType: "YulFunctionCall",
												src: "12190:53:14",
											},
											variableNames: [
												{
													name: "value1",
													nodeType: "YulIdentifier",
													src: "12180:6:14",
												},
											],
										},
									],
								},
							],
						},
						name: "abi_decode_tuple_t_addresst_address",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "headStart",
								nodeType: "YulTypedName",
								src: "11831:9:14",
								type: "",
							},
							{
								name: "dataEnd",
								nodeType: "YulTypedName",
								src: "11842:7:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "value0",
								nodeType: "YulTypedName",
								src: "11854:6:14",
								type: "",
							},
							{
								name: "value1",
								nodeType: "YulTypedName",
								src: "11862:6:14",
								type: "",
							},
						],
						src: "11786:474:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "12294:152:14",
							statements: [
								{
									expression: {
										arguments: [
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "12311:1:14",
												type: "",
												value: "0",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "12314:77:14",
												type: "",
												value:
													"35408467139433450592217433187231851964531694900788300625387963629091585785856",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "12304:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "12304:88:14",
									},
									nodeType: "YulExpressionStatement",
									src: "12304:88:14",
								},
								{
									expression: {
										arguments: [
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "12408:1:14",
												type: "",
												value: "4",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "12411:4:14",
												type: "",
												value: "0x22",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "12401:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "12401:15:14",
									},
									nodeType: "YulExpressionStatement",
									src: "12401:15:14",
								},
								{
									expression: {
										arguments: [
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "12432:1:14",
												type: "",
												value: "0",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "12435:4:14",
												type: "",
												value: "0x24",
											},
										],
										functionName: {
											name: "revert",
											nodeType: "YulIdentifier",
											src: "12425:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "12425:15:14",
									},
									nodeType: "YulExpressionStatement",
									src: "12425:15:14",
								},
							],
						},
						name: "panic_error_0x22",
						nodeType: "YulFunctionDefinition",
						src: "12266:180:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "12503:269:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "12513:22:14",
									value: {
										arguments: [
											{
												name: "data",
												nodeType: "YulIdentifier",
												src: "12527:4:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "12533:1:14",
												type: "",
												value: "2",
											},
										],
										functionName: {
											name: "div",
											nodeType: "YulIdentifier",
											src: "12523:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "12523:12:14",
									},
									variableNames: [
										{
											name: "length",
											nodeType: "YulIdentifier",
											src: "12513:6:14",
										},
									],
								},
								{
									nodeType: "YulVariableDeclaration",
									src: "12544:38:14",
									value: {
										arguments: [
											{
												name: "data",
												nodeType: "YulIdentifier",
												src: "12574:4:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "12580:1:14",
												type: "",
												value: "1",
											},
										],
										functionName: {
											name: "and",
											nodeType: "YulIdentifier",
											src: "12570:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "12570:12:14",
									},
									variables: [
										{
											name: "outOfPlaceEncoding",
											nodeType: "YulTypedName",
											src: "12548:18:14",
											type: "",
										},
									],
								},
								{
									body: {
										nodeType: "YulBlock",
										src: "12621:51:14",
										statements: [
											{
												nodeType: "YulAssignment",
												src: "12635:27:14",
												value: {
													arguments: [
														{
															name: "length",
															nodeType: "YulIdentifier",
															src: "12649:6:14",
														},
														{
															kind: "number",
															nodeType: "YulLiteral",
															src: "12657:4:14",
															type: "",
															value: "0x7f",
														},
													],
													functionName: {
														name: "and",
														nodeType: "YulIdentifier",
														src: "12645:3:14",
													},
													nodeType: "YulFunctionCall",
													src: "12645:17:14",
												},
												variableNames: [
													{
														name: "length",
														nodeType: "YulIdentifier",
														src: "12635:6:14",
													},
												],
											},
										],
									},
									condition: {
										arguments: [
											{
												name: "outOfPlaceEncoding",
												nodeType: "YulIdentifier",
												src: "12601:18:14",
											},
										],
										functionName: {
											name: "iszero",
											nodeType: "YulIdentifier",
											src: "12594:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "12594:26:14",
									},
									nodeType: "YulIf",
									src: "12591:81:14",
								},
								{
									body: {
										nodeType: "YulBlock",
										src: "12724:42:14",
										statements: [
											{
												expression: {
													arguments: [],
													functionName: {
														name: "panic_error_0x22",
														nodeType: "YulIdentifier",
														src: "12738:16:14",
													},
													nodeType: "YulFunctionCall",
													src: "12738:18:14",
												},
												nodeType: "YulExpressionStatement",
												src: "12738:18:14",
											},
										],
									},
									condition: {
										arguments: [
											{
												name: "outOfPlaceEncoding",
												nodeType: "YulIdentifier",
												src: "12688:18:14",
											},
											{
												arguments: [
													{
														name: "length",
														nodeType: "YulIdentifier",
														src: "12711:6:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "12719:2:14",
														type: "",
														value: "32",
													},
												],
												functionName: {
													name: "lt",
													nodeType: "YulIdentifier",
													src: "12708:2:14",
												},
												nodeType: "YulFunctionCall",
												src: "12708:14:14",
											},
										],
										functionName: {
											name: "eq",
											nodeType: "YulIdentifier",
											src: "12685:2:14",
										},
										nodeType: "YulFunctionCall",
										src: "12685:38:14",
									},
									nodeType: "YulIf",
									src: "12682:84:14",
								},
							],
						},
						name: "extract_byte_array_length",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "data",
								nodeType: "YulTypedName",
								src: "12487:4:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "length",
								nodeType: "YulTypedName",
								src: "12496:6:14",
								type: "",
							},
						],
						src: "12452:320:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "12884:125:14",
							statements: [
								{
									expression: {
										arguments: [
											{
												arguments: [
													{
														name: "memPtr",
														nodeType: "YulIdentifier",
														src: "12906:6:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "12914:1:14",
														type: "",
														value: "0",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "12902:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "12902:14:14",
											},
											{
												hexValue:
													"4552433732313a20617070726f76656420717565727920666f72206e6f6e6578",
												kind: "string",
												nodeType: "YulLiteral",
												src: "12918:34:14",
												type: "",
												value: "ERC721: approved query for nonex",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "12895:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "12895:58:14",
									},
									nodeType: "YulExpressionStatement",
									src: "12895:58:14",
								},
								{
									expression: {
										arguments: [
											{
												arguments: [
													{
														name: "memPtr",
														nodeType: "YulIdentifier",
														src: "12974:6:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "12982:2:14",
														type: "",
														value: "32",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "12970:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "12970:15:14",
											},
											{
												hexValue: "697374656e7420746f6b656e",
												kind: "string",
												nodeType: "YulLiteral",
												src: "12987:14:14",
												type: "",
												value: "istent token",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "12963:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "12963:39:14",
									},
									nodeType: "YulExpressionStatement",
									src: "12963:39:14",
								},
							],
						},
						name:
							"store_literal_in_memory_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "memPtr",
								nodeType: "YulTypedName",
								src: "12876:6:14",
								type: "",
							},
						],
						src: "12778:231:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "13161:220:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "13171:74:14",
									value: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "13237:3:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "13242:2:14",
												type: "",
												value: "44",
											},
										],
										functionName: {
											name:
												"array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
											nodeType: "YulIdentifier",
											src: "13178:58:14",
										},
										nodeType: "YulFunctionCall",
										src: "13178:67:14",
									},
									variableNames: [
										{
											name: "pos",
											nodeType: "YulIdentifier",
											src: "13171:3:14",
										},
									],
								},
								{
									expression: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "13343:3:14",
											},
										],
										functionName: {
											name:
												"store_literal_in_memory_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
											nodeType: "YulIdentifier",
											src: "13254:88:14",
										},
										nodeType: "YulFunctionCall",
										src: "13254:93:14",
									},
									nodeType: "YulExpressionStatement",
									src: "13254:93:14",
								},
								{
									nodeType: "YulAssignment",
									src: "13356:19:14",
									value: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "13367:3:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "13372:2:14",
												type: "",
												value: "64",
											},
										],
										functionName: {
											name: "add",
											nodeType: "YulIdentifier",
											src: "13363:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "13363:12:14",
									},
									variableNames: [
										{
											name: "end",
											nodeType: "YulIdentifier",
											src: "13356:3:14",
										},
									],
								},
							],
						},
						name:
							"abi_encode_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d_to_t_string_memory_ptr_fromStack",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "pos",
								nodeType: "YulTypedName",
								src: "13149:3:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "end",
								nodeType: "YulTypedName",
								src: "13157:3:14",
								type: "",
							},
						],
						src: "13015:366:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "13558:248:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "13568:26:14",
									value: {
										arguments: [
											{
												name: "headStart",
												nodeType: "YulIdentifier",
												src: "13580:9:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "13591:2:14",
												type: "",
												value: "32",
											},
										],
										functionName: {
											name: "add",
											nodeType: "YulIdentifier",
											src: "13576:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "13576:18:14",
									},
									variableNames: [
										{
											name: "tail",
											nodeType: "YulIdentifier",
											src: "13568:4:14",
										},
									],
								},
								{
									expression: {
										arguments: [
											{
												arguments: [
													{
														name: "headStart",
														nodeType: "YulIdentifier",
														src: "13615:9:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "13626:1:14",
														type: "",
														value: "0",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "13611:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "13611:17:14",
											},
											{
												arguments: [
													{
														name: "tail",
														nodeType: "YulIdentifier",
														src: "13634:4:14",
													},
													{
														name: "headStart",
														nodeType: "YulIdentifier",
														src: "13640:9:14",
													},
												],
												functionName: {
													name: "sub",
													nodeType: "YulIdentifier",
													src: "13630:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "13630:20:14",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "13604:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "13604:47:14",
									},
									nodeType: "YulExpressionStatement",
									src: "13604:47:14",
								},
								{
									nodeType: "YulAssignment",
									src: "13660:139:14",
									value: {
										arguments: [
											{
												name: "tail",
												nodeType: "YulIdentifier",
												src: "13794:4:14",
											},
										],
										functionName: {
											name:
												"abi_encode_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d_to_t_string_memory_ptr_fromStack",
											nodeType: "YulIdentifier",
											src: "13668:124:14",
										},
										nodeType: "YulFunctionCall",
										src: "13668:131:14",
									},
									variableNames: [
										{
											name: "tail",
											nodeType: "YulIdentifier",
											src: "13660:4:14",
										},
									],
								},
							],
						},
						name:
							"abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "headStart",
								nodeType: "YulTypedName",
								src: "13538:9:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "tail",
								nodeType: "YulTypedName",
								src: "13553:4:14",
								type: "",
							},
						],
						src: "13387:419:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "13918:114:14",
							statements: [
								{
									expression: {
										arguments: [
											{
												arguments: [
													{
														name: "memPtr",
														nodeType: "YulIdentifier",
														src: "13940:6:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "13948:1:14",
														type: "",
														value: "0",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "13936:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "13936:14:14",
											},
											{
												hexValue:
													"4552433732313a20617070726f76616c20746f2063757272656e74206f776e65",
												kind: "string",
												nodeType: "YulLiteral",
												src: "13952:34:14",
												type: "",
												value: "ERC721: approval to current owne",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "13929:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "13929:58:14",
									},
									nodeType: "YulExpressionStatement",
									src: "13929:58:14",
								},
								{
									expression: {
										arguments: [
											{
												arguments: [
													{
														name: "memPtr",
														nodeType: "YulIdentifier",
														src: "14008:6:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "14016:2:14",
														type: "",
														value: "32",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "14004:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "14004:15:14",
											},
											{
												hexValue: "72",
												kind: "string",
												nodeType: "YulLiteral",
												src: "14021:3:14",
												type: "",
												value: "r",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "13997:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "13997:28:14",
									},
									nodeType: "YulExpressionStatement",
									src: "13997:28:14",
								},
							],
						},
						name:
							"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "memPtr",
								nodeType: "YulTypedName",
								src: "13910:6:14",
								type: "",
							},
						],
						src: "13812:220:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "14184:220:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "14194:74:14",
									value: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "14260:3:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "14265:2:14",
												type: "",
												value: "33",
											},
										],
										functionName: {
											name:
												"array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
											nodeType: "YulIdentifier",
											src: "14201:58:14",
										},
										nodeType: "YulFunctionCall",
										src: "14201:67:14",
									},
									variableNames: [
										{
											name: "pos",
											nodeType: "YulIdentifier",
											src: "14194:3:14",
										},
									],
								},
								{
									expression: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "14366:3:14",
											},
										],
										functionName: {
											name:
												"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
											nodeType: "YulIdentifier",
											src: "14277:88:14",
										},
										nodeType: "YulFunctionCall",
										src: "14277:93:14",
									},
									nodeType: "YulExpressionStatement",
									src: "14277:93:14",
								},
								{
									nodeType: "YulAssignment",
									src: "14379:19:14",
									value: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "14390:3:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "14395:2:14",
												type: "",
												value: "64",
											},
										],
										functionName: {
											name: "add",
											nodeType: "YulIdentifier",
											src: "14386:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "14386:12:14",
									},
									variableNames: [
										{
											name: "end",
											nodeType: "YulIdentifier",
											src: "14379:3:14",
										},
									],
								},
							],
						},
						name:
							"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "pos",
								nodeType: "YulTypedName",
								src: "14172:3:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "end",
								nodeType: "YulTypedName",
								src: "14180:3:14",
								type: "",
							},
						],
						src: "14038:366:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "14581:248:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "14591:26:14",
									value: {
										arguments: [
											{
												name: "headStart",
												nodeType: "YulIdentifier",
												src: "14603:9:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "14614:2:14",
												type: "",
												value: "32",
											},
										],
										functionName: {
											name: "add",
											nodeType: "YulIdentifier",
											src: "14599:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "14599:18:14",
									},
									variableNames: [
										{
											name: "tail",
											nodeType: "YulIdentifier",
											src: "14591:4:14",
										},
									],
								},
								{
									expression: {
										arguments: [
											{
												arguments: [
													{
														name: "headStart",
														nodeType: "YulIdentifier",
														src: "14638:9:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "14649:1:14",
														type: "",
														value: "0",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "14634:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "14634:17:14",
											},
											{
												arguments: [
													{
														name: "tail",
														nodeType: "YulIdentifier",
														src: "14657:4:14",
													},
													{
														name: "headStart",
														nodeType: "YulIdentifier",
														src: "14663:9:14",
													},
												],
												functionName: {
													name: "sub",
													nodeType: "YulIdentifier",
													src: "14653:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "14653:20:14",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "14627:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "14627:47:14",
									},
									nodeType: "YulExpressionStatement",
									src: "14627:47:14",
								},
								{
									nodeType: "YulAssignment",
									src: "14683:139:14",
									value: {
										arguments: [
											{
												name: "tail",
												nodeType: "YulIdentifier",
												src: "14817:4:14",
											},
										],
										functionName: {
											name:
												"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack",
											nodeType: "YulIdentifier",
											src: "14691:124:14",
										},
										nodeType: "YulFunctionCall",
										src: "14691:131:14",
									},
									variableNames: [
										{
											name: "tail",
											nodeType: "YulIdentifier",
											src: "14683:4:14",
										},
									],
								},
							],
						},
						name:
							"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "headStart",
								nodeType: "YulTypedName",
								src: "14561:9:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "tail",
								nodeType: "YulTypedName",
								src: "14576:4:14",
								type: "",
							},
						],
						src: "14410:419:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "14941:137:14",
							statements: [
								{
									expression: {
										arguments: [
											{
												arguments: [
													{
														name: "memPtr",
														nodeType: "YulIdentifier",
														src: "14963:6:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "14971:1:14",
														type: "",
														value: "0",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "14959:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "14959:14:14",
											},
											{
												hexValue:
													"4552433732313a20617070726f76652063616c6c6572206973206e6f74206f77",
												kind: "string",
												nodeType: "YulLiteral",
												src: "14975:34:14",
												type: "",
												value: "ERC721: approve caller is not ow",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "14952:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "14952:58:14",
									},
									nodeType: "YulExpressionStatement",
									src: "14952:58:14",
								},
								{
									expression: {
										arguments: [
											{
												arguments: [
													{
														name: "memPtr",
														nodeType: "YulIdentifier",
														src: "15031:6:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "15039:2:14",
														type: "",
														value: "32",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "15027:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "15027:15:14",
											},
											{
												hexValue:
													"6e6572206e6f7220617070726f76656420666f7220616c6c",
												kind: "string",
												nodeType: "YulLiteral",
												src: "15044:26:14",
												type: "",
												value: "ner nor approved for all",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "15020:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "15020:51:14",
									},
									nodeType: "YulExpressionStatement",
									src: "15020:51:14",
								},
							],
						},
						name:
							"store_literal_in_memory_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "memPtr",
								nodeType: "YulTypedName",
								src: "14933:6:14",
								type: "",
							},
						],
						src: "14835:243:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "15230:220:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "15240:74:14",
									value: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "15306:3:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "15311:2:14",
												type: "",
												value: "56",
											},
										],
										functionName: {
											name:
												"array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
											nodeType: "YulIdentifier",
											src: "15247:58:14",
										},
										nodeType: "YulFunctionCall",
										src: "15247:67:14",
									},
									variableNames: [
										{
											name: "pos",
											nodeType: "YulIdentifier",
											src: "15240:3:14",
										},
									],
								},
								{
									expression: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "15412:3:14",
											},
										],
										functionName: {
											name:
												"store_literal_in_memory_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
											nodeType: "YulIdentifier",
											src: "15323:88:14",
										},
										nodeType: "YulFunctionCall",
										src: "15323:93:14",
									},
									nodeType: "YulExpressionStatement",
									src: "15323:93:14",
								},
								{
									nodeType: "YulAssignment",
									src: "15425:19:14",
									value: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "15436:3:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "15441:2:14",
												type: "",
												value: "64",
											},
										],
										functionName: {
											name: "add",
											nodeType: "YulIdentifier",
											src: "15432:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "15432:12:14",
									},
									variableNames: [
										{
											name: "end",
											nodeType: "YulIdentifier",
											src: "15425:3:14",
										},
									],
								},
							],
						},
						name:
							"abi_encode_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d_to_t_string_memory_ptr_fromStack",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "pos",
								nodeType: "YulTypedName",
								src: "15218:3:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "end",
								nodeType: "YulTypedName",
								src: "15226:3:14",
								type: "",
							},
						],
						src: "15084:366:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "15627:248:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "15637:26:14",
									value: {
										arguments: [
											{
												name: "headStart",
												nodeType: "YulIdentifier",
												src: "15649:9:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "15660:2:14",
												type: "",
												value: "32",
											},
										],
										functionName: {
											name: "add",
											nodeType: "YulIdentifier",
											src: "15645:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "15645:18:14",
									},
									variableNames: [
										{
											name: "tail",
											nodeType: "YulIdentifier",
											src: "15637:4:14",
										},
									],
								},
								{
									expression: {
										arguments: [
											{
												arguments: [
													{
														name: "headStart",
														nodeType: "YulIdentifier",
														src: "15684:9:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "15695:1:14",
														type: "",
														value: "0",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "15680:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "15680:17:14",
											},
											{
												arguments: [
													{
														name: "tail",
														nodeType: "YulIdentifier",
														src: "15703:4:14",
													},
													{
														name: "headStart",
														nodeType: "YulIdentifier",
														src: "15709:9:14",
													},
												],
												functionName: {
													name: "sub",
													nodeType: "YulIdentifier",
													src: "15699:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "15699:20:14",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "15673:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "15673:47:14",
									},
									nodeType: "YulExpressionStatement",
									src: "15673:47:14",
								},
								{
									nodeType: "YulAssignment",
									src: "15729:139:14",
									value: {
										arguments: [
											{
												name: "tail",
												nodeType: "YulIdentifier",
												src: "15863:4:14",
											},
										],
										functionName: {
											name:
												"abi_encode_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d_to_t_string_memory_ptr_fromStack",
											nodeType: "YulIdentifier",
											src: "15737:124:14",
										},
										nodeType: "YulFunctionCall",
										src: "15737:131:14",
									},
									variableNames: [
										{
											name: "tail",
											nodeType: "YulIdentifier",
											src: "15729:4:14",
										},
									],
								},
							],
						},
						name:
							"abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "headStart",
								nodeType: "YulTypedName",
								src: "15607:9:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "tail",
								nodeType: "YulTypedName",
								src: "15622:4:14",
								type: "",
							},
						],
						src: "15456:419:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "15987:130:14",
							statements: [
								{
									expression: {
										arguments: [
											{
												arguments: [
													{
														name: "memPtr",
														nodeType: "YulIdentifier",
														src: "16009:6:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "16017:1:14",
														type: "",
														value: "0",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "16005:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "16005:14:14",
											},
											{
												hexValue:
													"4552433732313a207472616e736665722063616c6c6572206973206e6f74206f",
												kind: "string",
												nodeType: "YulLiteral",
												src: "16021:34:14",
												type: "",
												value: "ERC721: transfer caller is not o",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "15998:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "15998:58:14",
									},
									nodeType: "YulExpressionStatement",
									src: "15998:58:14",
								},
								{
									expression: {
										arguments: [
											{
												arguments: [
													{
														name: "memPtr",
														nodeType: "YulIdentifier",
														src: "16077:6:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "16085:2:14",
														type: "",
														value: "32",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "16073:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "16073:15:14",
											},
											{
												hexValue: "776e6572206e6f7220617070726f766564",
												kind: "string",
												nodeType: "YulLiteral",
												src: "16090:19:14",
												type: "",
												value: "wner nor approved",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "16066:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "16066:44:14",
									},
									nodeType: "YulExpressionStatement",
									src: "16066:44:14",
								},
							],
						},
						name:
							"store_literal_in_memory_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "memPtr",
								nodeType: "YulTypedName",
								src: "15979:6:14",
								type: "",
							},
						],
						src: "15881:236:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "16269:220:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "16279:74:14",
									value: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "16345:3:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "16350:2:14",
												type: "",
												value: "49",
											},
										],
										functionName: {
											name:
												"array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
											nodeType: "YulIdentifier",
											src: "16286:58:14",
										},
										nodeType: "YulFunctionCall",
										src: "16286:67:14",
									},
									variableNames: [
										{
											name: "pos",
											nodeType: "YulIdentifier",
											src: "16279:3:14",
										},
									],
								},
								{
									expression: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "16451:3:14",
											},
										],
										functionName: {
											name:
												"store_literal_in_memory_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
											nodeType: "YulIdentifier",
											src: "16362:88:14",
										},
										nodeType: "YulFunctionCall",
										src: "16362:93:14",
									},
									nodeType: "YulExpressionStatement",
									src: "16362:93:14",
								},
								{
									nodeType: "YulAssignment",
									src: "16464:19:14",
									value: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "16475:3:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "16480:2:14",
												type: "",
												value: "64",
											},
										],
										functionName: {
											name: "add",
											nodeType: "YulIdentifier",
											src: "16471:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "16471:12:14",
									},
									variableNames: [
										{
											name: "end",
											nodeType: "YulIdentifier",
											src: "16464:3:14",
										},
									],
								},
							],
						},
						name:
							"abi_encode_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2_to_t_string_memory_ptr_fromStack",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "pos",
								nodeType: "YulTypedName",
								src: "16257:3:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "end",
								nodeType: "YulTypedName",
								src: "16265:3:14",
								type: "",
							},
						],
						src: "16123:366:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "16666:248:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "16676:26:14",
									value: {
										arguments: [
											{
												name: "headStart",
												nodeType: "YulIdentifier",
												src: "16688:9:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "16699:2:14",
												type: "",
												value: "32",
											},
										],
										functionName: {
											name: "add",
											nodeType: "YulIdentifier",
											src: "16684:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "16684:18:14",
									},
									variableNames: [
										{
											name: "tail",
											nodeType: "YulIdentifier",
											src: "16676:4:14",
										},
									],
								},
								{
									expression: {
										arguments: [
											{
												arguments: [
													{
														name: "headStart",
														nodeType: "YulIdentifier",
														src: "16723:9:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "16734:1:14",
														type: "",
														value: "0",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "16719:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "16719:17:14",
											},
											{
												arguments: [
													{
														name: "tail",
														nodeType: "YulIdentifier",
														src: "16742:4:14",
													},
													{
														name: "headStart",
														nodeType: "YulIdentifier",
														src: "16748:9:14",
													},
												],
												functionName: {
													name: "sub",
													nodeType: "YulIdentifier",
													src: "16738:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "16738:20:14",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "16712:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "16712:47:14",
									},
									nodeType: "YulExpressionStatement",
									src: "16712:47:14",
								},
								{
									nodeType: "YulAssignment",
									src: "16768:139:14",
									value: {
										arguments: [
											{
												name: "tail",
												nodeType: "YulIdentifier",
												src: "16902:4:14",
											},
										],
										functionName: {
											name:
												"abi_encode_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2_to_t_string_memory_ptr_fromStack",
											nodeType: "YulIdentifier",
											src: "16776:124:14",
										},
										nodeType: "YulFunctionCall",
										src: "16776:131:14",
									},
									variableNames: [
										{
											name: "tail",
											nodeType: "YulIdentifier",
											src: "16768:4:14",
										},
									],
								},
							],
						},
						name:
							"abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "headStart",
								nodeType: "YulTypedName",
								src: "16646:9:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "tail",
								nodeType: "YulTypedName",
								src: "16661:4:14",
								type: "",
							},
						],
						src: "16495:419:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "17026:122:14",
							statements: [
								{
									expression: {
										arguments: [
											{
												arguments: [
													{
														name: "memPtr",
														nodeType: "YulIdentifier",
														src: "17048:6:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "17056:1:14",
														type: "",
														value: "0",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "17044:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "17044:14:14",
											},
											{
												hexValue:
													"4552433732313a206f776e657220717565727920666f72206e6f6e6578697374",
												kind: "string",
												nodeType: "YulLiteral",
												src: "17060:34:14",
												type: "",
												value: "ERC721: owner query for nonexist",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "17037:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "17037:58:14",
									},
									nodeType: "YulExpressionStatement",
									src: "17037:58:14",
								},
								{
									expression: {
										arguments: [
											{
												arguments: [
													{
														name: "memPtr",
														nodeType: "YulIdentifier",
														src: "17116:6:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "17124:2:14",
														type: "",
														value: "32",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "17112:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "17112:15:14",
											},
											{
												hexValue: "656e7420746f6b656e",
												kind: "string",
												nodeType: "YulLiteral",
												src: "17129:11:14",
												type: "",
												value: "ent token",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "17105:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "17105:36:14",
									},
									nodeType: "YulExpressionStatement",
									src: "17105:36:14",
								},
							],
						},
						name:
							"store_literal_in_memory_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "memPtr",
								nodeType: "YulTypedName",
								src: "17018:6:14",
								type: "",
							},
						],
						src: "16920:228:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "17300:220:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "17310:74:14",
									value: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "17376:3:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "17381:2:14",
												type: "",
												value: "41",
											},
										],
										functionName: {
											name:
												"array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
											nodeType: "YulIdentifier",
											src: "17317:58:14",
										},
										nodeType: "YulFunctionCall",
										src: "17317:67:14",
									},
									variableNames: [
										{
											name: "pos",
											nodeType: "YulIdentifier",
											src: "17310:3:14",
										},
									],
								},
								{
									expression: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "17482:3:14",
											},
										],
										functionName: {
											name:
												"store_literal_in_memory_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
											nodeType: "YulIdentifier",
											src: "17393:88:14",
										},
										nodeType: "YulFunctionCall",
										src: "17393:93:14",
									},
									nodeType: "YulExpressionStatement",
									src: "17393:93:14",
								},
								{
									nodeType: "YulAssignment",
									src: "17495:19:14",
									value: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "17506:3:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "17511:2:14",
												type: "",
												value: "64",
											},
										],
										functionName: {
											name: "add",
											nodeType: "YulIdentifier",
											src: "17502:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "17502:12:14",
									},
									variableNames: [
										{
											name: "end",
											nodeType: "YulIdentifier",
											src: "17495:3:14",
										},
									],
								},
							],
						},
						name:
							"abi_encode_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397_to_t_string_memory_ptr_fromStack",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "pos",
								nodeType: "YulTypedName",
								src: "17288:3:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "end",
								nodeType: "YulTypedName",
								src: "17296:3:14",
								type: "",
							},
						],
						src: "17154:366:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "17697:248:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "17707:26:14",
									value: {
										arguments: [
											{
												name: "headStart",
												nodeType: "YulIdentifier",
												src: "17719:9:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "17730:2:14",
												type: "",
												value: "32",
											},
										],
										functionName: {
											name: "add",
											nodeType: "YulIdentifier",
											src: "17715:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "17715:18:14",
									},
									variableNames: [
										{
											name: "tail",
											nodeType: "YulIdentifier",
											src: "17707:4:14",
										},
									],
								},
								{
									expression: {
										arguments: [
											{
												arguments: [
													{
														name: "headStart",
														nodeType: "YulIdentifier",
														src: "17754:9:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "17765:1:14",
														type: "",
														value: "0",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "17750:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "17750:17:14",
											},
											{
												arguments: [
													{
														name: "tail",
														nodeType: "YulIdentifier",
														src: "17773:4:14",
													},
													{
														name: "headStart",
														nodeType: "YulIdentifier",
														src: "17779:9:14",
													},
												],
												functionName: {
													name: "sub",
													nodeType: "YulIdentifier",
													src: "17769:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "17769:20:14",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "17743:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "17743:47:14",
									},
									nodeType: "YulExpressionStatement",
									src: "17743:47:14",
								},
								{
									nodeType: "YulAssignment",
									src: "17799:139:14",
									value: {
										arguments: [
											{
												name: "tail",
												nodeType: "YulIdentifier",
												src: "17933:4:14",
											},
										],
										functionName: {
											name:
												"abi_encode_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397_to_t_string_memory_ptr_fromStack",
											nodeType: "YulIdentifier",
											src: "17807:124:14",
										},
										nodeType: "YulFunctionCall",
										src: "17807:131:14",
									},
									variableNames: [
										{
											name: "tail",
											nodeType: "YulIdentifier",
											src: "17799:4:14",
										},
									],
								},
							],
						},
						name:
							"abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "headStart",
								nodeType: "YulTypedName",
								src: "17677:9:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "tail",
								nodeType: "YulTypedName",
								src: "17692:4:14",
								type: "",
							},
						],
						src: "17526:419:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "18057:123:14",
							statements: [
								{
									expression: {
										arguments: [
											{
												arguments: [
													{
														name: "memPtr",
														nodeType: "YulIdentifier",
														src: "18079:6:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "18087:1:14",
														type: "",
														value: "0",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "18075:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "18075:14:14",
											},
											{
												hexValue:
													"4552433732313a2062616c616e636520717565727920666f7220746865207a65",
												kind: "string",
												nodeType: "YulLiteral",
												src: "18091:34:14",
												type: "",
												value: "ERC721: balance query for the ze",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "18068:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "18068:58:14",
									},
									nodeType: "YulExpressionStatement",
									src: "18068:58:14",
								},
								{
									expression: {
										arguments: [
											{
												arguments: [
													{
														name: "memPtr",
														nodeType: "YulIdentifier",
														src: "18147:6:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "18155:2:14",
														type: "",
														value: "32",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "18143:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "18143:15:14",
											},
											{
												hexValue: "726f2061646472657373",
												kind: "string",
												nodeType: "YulLiteral",
												src: "18160:12:14",
												type: "",
												value: "ro address",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "18136:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "18136:37:14",
									},
									nodeType: "YulExpressionStatement",
									src: "18136:37:14",
								},
							],
						},
						name:
							"store_literal_in_memory_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "memPtr",
								nodeType: "YulTypedName",
								src: "18049:6:14",
								type: "",
							},
						],
						src: "17951:229:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "18332:220:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "18342:74:14",
									value: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "18408:3:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "18413:2:14",
												type: "",
												value: "42",
											},
										],
										functionName: {
											name:
												"array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
											nodeType: "YulIdentifier",
											src: "18349:58:14",
										},
										nodeType: "YulFunctionCall",
										src: "18349:67:14",
									},
									variableNames: [
										{
											name: "pos",
											nodeType: "YulIdentifier",
											src: "18342:3:14",
										},
									],
								},
								{
									expression: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "18514:3:14",
											},
										],
										functionName: {
											name:
												"store_literal_in_memory_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
											nodeType: "YulIdentifier",
											src: "18425:88:14",
										},
										nodeType: "YulFunctionCall",
										src: "18425:93:14",
									},
									nodeType: "YulExpressionStatement",
									src: "18425:93:14",
								},
								{
									nodeType: "YulAssignment",
									src: "18527:19:14",
									value: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "18538:3:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "18543:2:14",
												type: "",
												value: "64",
											},
										],
										functionName: {
											name: "add",
											nodeType: "YulIdentifier",
											src: "18534:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "18534:12:14",
									},
									variableNames: [
										{
											name: "end",
											nodeType: "YulIdentifier",
											src: "18527:3:14",
										},
									],
								},
							],
						},
						name:
							"abi_encode_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba_to_t_string_memory_ptr_fromStack",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "pos",
								nodeType: "YulTypedName",
								src: "18320:3:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "end",
								nodeType: "YulTypedName",
								src: "18328:3:14",
								type: "",
							},
						],
						src: "18186:366:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "18729:248:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "18739:26:14",
									value: {
										arguments: [
											{
												name: "headStart",
												nodeType: "YulIdentifier",
												src: "18751:9:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "18762:2:14",
												type: "",
												value: "32",
											},
										],
										functionName: {
											name: "add",
											nodeType: "YulIdentifier",
											src: "18747:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "18747:18:14",
									},
									variableNames: [
										{
											name: "tail",
											nodeType: "YulIdentifier",
											src: "18739:4:14",
										},
									],
								},
								{
									expression: {
										arguments: [
											{
												arguments: [
													{
														name: "headStart",
														nodeType: "YulIdentifier",
														src: "18786:9:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "18797:1:14",
														type: "",
														value: "0",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "18782:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "18782:17:14",
											},
											{
												arguments: [
													{
														name: "tail",
														nodeType: "YulIdentifier",
														src: "18805:4:14",
													},
													{
														name: "headStart",
														nodeType: "YulIdentifier",
														src: "18811:9:14",
													},
												],
												functionName: {
													name: "sub",
													nodeType: "YulIdentifier",
													src: "18801:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "18801:20:14",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "18775:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "18775:47:14",
									},
									nodeType: "YulExpressionStatement",
									src: "18775:47:14",
								},
								{
									nodeType: "YulAssignment",
									src: "18831:139:14",
									value: {
										arguments: [
											{
												name: "tail",
												nodeType: "YulIdentifier",
												src: "18965:4:14",
											},
										],
										functionName: {
											name:
												"abi_encode_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba_to_t_string_memory_ptr_fromStack",
											nodeType: "YulIdentifier",
											src: "18839:124:14",
										},
										nodeType: "YulFunctionCall",
										src: "18839:131:14",
									},
									variableNames: [
										{
											name: "tail",
											nodeType: "YulIdentifier",
											src: "18831:4:14",
										},
									],
								},
							],
						},
						name:
							"abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "headStart",
								nodeType: "YulTypedName",
								src: "18709:9:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "tail",
								nodeType: "YulTypedName",
								src: "18724:4:14",
								type: "",
							},
						],
						src: "18558:419:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "19089:76:14",
							statements: [
								{
									expression: {
										arguments: [
											{
												arguments: [
													{
														name: "memPtr",
														nodeType: "YulIdentifier",
														src: "19111:6:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "19119:1:14",
														type: "",
														value: "0",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "19107:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "19107:14:14",
											},
											{
												hexValue:
													"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
												kind: "string",
												nodeType: "YulLiteral",
												src: "19123:34:14",
												type: "",
												value: "Ownable: caller is not the owner",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "19100:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "19100:58:14",
									},
									nodeType: "YulExpressionStatement",
									src: "19100:58:14",
								},
							],
						},
						name:
							"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "memPtr",
								nodeType: "YulTypedName",
								src: "19081:6:14",
								type: "",
							},
						],
						src: "18983:182:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "19317:220:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "19327:74:14",
									value: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "19393:3:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "19398:2:14",
												type: "",
												value: "32",
											},
										],
										functionName: {
											name:
												"array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
											nodeType: "YulIdentifier",
											src: "19334:58:14",
										},
										nodeType: "YulFunctionCall",
										src: "19334:67:14",
									},
									variableNames: [
										{
											name: "pos",
											nodeType: "YulIdentifier",
											src: "19327:3:14",
										},
									],
								},
								{
									expression: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "19499:3:14",
											},
										],
										functionName: {
											name:
												"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
											nodeType: "YulIdentifier",
											src: "19410:88:14",
										},
										nodeType: "YulFunctionCall",
										src: "19410:93:14",
									},
									nodeType: "YulExpressionStatement",
									src: "19410:93:14",
								},
								{
									nodeType: "YulAssignment",
									src: "19512:19:14",
									value: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "19523:3:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "19528:2:14",
												type: "",
												value: "32",
											},
										],
										functionName: {
											name: "add",
											nodeType: "YulIdentifier",
											src: "19519:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "19519:12:14",
									},
									variableNames: [
										{
											name: "end",
											nodeType: "YulIdentifier",
											src: "19512:3:14",
										},
									],
								},
							],
						},
						name:
							"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "pos",
								nodeType: "YulTypedName",
								src: "19305:3:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "end",
								nodeType: "YulTypedName",
								src: "19313:3:14",
								type: "",
							},
						],
						src: "19171:366:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "19714:248:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "19724:26:14",
									value: {
										arguments: [
											{
												name: "headStart",
												nodeType: "YulIdentifier",
												src: "19736:9:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "19747:2:14",
												type: "",
												value: "32",
											},
										],
										functionName: {
											name: "add",
											nodeType: "YulIdentifier",
											src: "19732:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "19732:18:14",
									},
									variableNames: [
										{
											name: "tail",
											nodeType: "YulIdentifier",
											src: "19724:4:14",
										},
									],
								},
								{
									expression: {
										arguments: [
											{
												arguments: [
													{
														name: "headStart",
														nodeType: "YulIdentifier",
														src: "19771:9:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "19782:1:14",
														type: "",
														value: "0",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "19767:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "19767:17:14",
											},
											{
												arguments: [
													{
														name: "tail",
														nodeType: "YulIdentifier",
														src: "19790:4:14",
													},
													{
														name: "headStart",
														nodeType: "YulIdentifier",
														src: "19796:9:14",
													},
												],
												functionName: {
													name: "sub",
													nodeType: "YulIdentifier",
													src: "19786:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "19786:20:14",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "19760:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "19760:47:14",
									},
									nodeType: "YulExpressionStatement",
									src: "19760:47:14",
								},
								{
									nodeType: "YulAssignment",
									src: "19816:139:14",
									value: {
										arguments: [
											{
												name: "tail",
												nodeType: "YulIdentifier",
												src: "19950:4:14",
											},
										],
										functionName: {
											name:
												"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
											nodeType: "YulIdentifier",
											src: "19824:124:14",
										},
										nodeType: "YulFunctionCall",
										src: "19824:131:14",
									},
									variableNames: [
										{
											name: "tail",
											nodeType: "YulIdentifier",
											src: "19816:4:14",
										},
									],
								},
							],
						},
						name:
							"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "headStart",
								nodeType: "YulTypedName",
								src: "19694:9:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "tail",
								nodeType: "YulTypedName",
								src: "19709:4:14",
								type: "",
							},
						],
						src: "19543:419:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "20074:69:14",
							statements: [
								{
									expression: {
										arguments: [
											{
												arguments: [
													{
														name: "memPtr",
														nodeType: "YulIdentifier",
														src: "20096:6:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "20104:1:14",
														type: "",
														value: "0",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "20092:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "20092:14:14",
											},
											{
												hexValue:
													"4552433732313a20617070726f766520746f2063616c6c6572",
												kind: "string",
												nodeType: "YulLiteral",
												src: "20108:27:14",
												type: "",
												value: "ERC721: approve to caller",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "20085:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "20085:51:14",
									},
									nodeType: "YulExpressionStatement",
									src: "20085:51:14",
								},
							],
						},
						name:
							"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "memPtr",
								nodeType: "YulTypedName",
								src: "20066:6:14",
								type: "",
							},
						],
						src: "19968:175:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "20295:220:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "20305:74:14",
									value: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "20371:3:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "20376:2:14",
												type: "",
												value: "25",
											},
										],
										functionName: {
											name:
												"array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
											nodeType: "YulIdentifier",
											src: "20312:58:14",
										},
										nodeType: "YulFunctionCall",
										src: "20312:67:14",
									},
									variableNames: [
										{
											name: "pos",
											nodeType: "YulIdentifier",
											src: "20305:3:14",
										},
									],
								},
								{
									expression: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "20477:3:14",
											},
										],
										functionName: {
											name:
												"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
											nodeType: "YulIdentifier",
											src: "20388:88:14",
										},
										nodeType: "YulFunctionCall",
										src: "20388:93:14",
									},
									nodeType: "YulExpressionStatement",
									src: "20388:93:14",
								},
								{
									nodeType: "YulAssignment",
									src: "20490:19:14",
									value: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "20501:3:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "20506:2:14",
												type: "",
												value: "32",
											},
										],
										functionName: {
											name: "add",
											nodeType: "YulIdentifier",
											src: "20497:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "20497:12:14",
									},
									variableNames: [
										{
											name: "end",
											nodeType: "YulIdentifier",
											src: "20490:3:14",
										},
									],
								},
							],
						},
						name:
							"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "pos",
								nodeType: "YulTypedName",
								src: "20283:3:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "end",
								nodeType: "YulTypedName",
								src: "20291:3:14",
								type: "",
							},
						],
						src: "20149:366:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "20692:248:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "20702:26:14",
									value: {
										arguments: [
											{
												name: "headStart",
												nodeType: "YulIdentifier",
												src: "20714:9:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "20725:2:14",
												type: "",
												value: "32",
											},
										],
										functionName: {
											name: "add",
											nodeType: "YulIdentifier",
											src: "20710:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "20710:18:14",
									},
									variableNames: [
										{
											name: "tail",
											nodeType: "YulIdentifier",
											src: "20702:4:14",
										},
									],
								},
								{
									expression: {
										arguments: [
											{
												arguments: [
													{
														name: "headStart",
														nodeType: "YulIdentifier",
														src: "20749:9:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "20760:1:14",
														type: "",
														value: "0",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "20745:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "20745:17:14",
											},
											{
												arguments: [
													{
														name: "tail",
														nodeType: "YulIdentifier",
														src: "20768:4:14",
													},
													{
														name: "headStart",
														nodeType: "YulIdentifier",
														src: "20774:9:14",
													},
												],
												functionName: {
													name: "sub",
													nodeType: "YulIdentifier",
													src: "20764:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "20764:20:14",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "20738:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "20738:47:14",
									},
									nodeType: "YulExpressionStatement",
									src: "20738:47:14",
								},
								{
									nodeType: "YulAssignment",
									src: "20794:139:14",
									value: {
										arguments: [
											{
												name: "tail",
												nodeType: "YulIdentifier",
												src: "20928:4:14",
											},
										],
										functionName: {
											name:
												"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack",
											nodeType: "YulIdentifier",
											src: "20802:124:14",
										},
										nodeType: "YulFunctionCall",
										src: "20802:131:14",
									},
									variableNames: [
										{
											name: "tail",
											nodeType: "YulIdentifier",
											src: "20794:4:14",
										},
									],
								},
							],
						},
						name:
							"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "headStart",
								nodeType: "YulTypedName",
								src: "20672:9:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "tail",
								nodeType: "YulTypedName",
								src: "20687:4:14",
								type: "",
							},
						],
						src: "20521:419:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "21052:130:14",
							statements: [
								{
									expression: {
										arguments: [
											{
												arguments: [
													{
														name: "memPtr",
														nodeType: "YulIdentifier",
														src: "21074:6:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "21082:1:14",
														type: "",
														value: "0",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "21070:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "21070:14:14",
											},
											{
												hexValue:
													"45524337323155524953746f726167653a2055524920717565727920666f7220",
												kind: "string",
												nodeType: "YulLiteral",
												src: "21086:34:14",
												type: "",
												value: "ERC721URIStorage: URI query for ",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "21063:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "21063:58:14",
									},
									nodeType: "YulExpressionStatement",
									src: "21063:58:14",
								},
								{
									expression: {
										arguments: [
											{
												arguments: [
													{
														name: "memPtr",
														nodeType: "YulIdentifier",
														src: "21142:6:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "21150:2:14",
														type: "",
														value: "32",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "21138:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "21138:15:14",
											},
											{
												hexValue: "6e6f6e6578697374656e7420746f6b656e",
												kind: "string",
												nodeType: "YulLiteral",
												src: "21155:19:14",
												type: "",
												value: "nonexistent token",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "21131:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "21131:44:14",
									},
									nodeType: "YulExpressionStatement",
									src: "21131:44:14",
								},
							],
						},
						name:
							"store_literal_in_memory_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "memPtr",
								nodeType: "YulTypedName",
								src: "21044:6:14",
								type: "",
							},
						],
						src: "20946:236:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "21334:220:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "21344:74:14",
									value: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "21410:3:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "21415:2:14",
												type: "",
												value: "49",
											},
										],
										functionName: {
											name:
												"array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
											nodeType: "YulIdentifier",
											src: "21351:58:14",
										},
										nodeType: "YulFunctionCall",
										src: "21351:67:14",
									},
									variableNames: [
										{
											name: "pos",
											nodeType: "YulIdentifier",
											src: "21344:3:14",
										},
									],
								},
								{
									expression: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "21516:3:14",
											},
										],
										functionName: {
											name:
												"store_literal_in_memory_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a",
											nodeType: "YulIdentifier",
											src: "21427:88:14",
										},
										nodeType: "YulFunctionCall",
										src: "21427:93:14",
									},
									nodeType: "YulExpressionStatement",
									src: "21427:93:14",
								},
								{
									nodeType: "YulAssignment",
									src: "21529:19:14",
									value: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "21540:3:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "21545:2:14",
												type: "",
												value: "64",
											},
										],
										functionName: {
											name: "add",
											nodeType: "YulIdentifier",
											src: "21536:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "21536:12:14",
									},
									variableNames: [
										{
											name: "end",
											nodeType: "YulIdentifier",
											src: "21529:3:14",
										},
									],
								},
							],
						},
						name:
							"abi_encode_t_stringliteral_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a_to_t_string_memory_ptr_fromStack",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "pos",
								nodeType: "YulTypedName",
								src: "21322:3:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "end",
								nodeType: "YulTypedName",
								src: "21330:3:14",
								type: "",
							},
						],
						src: "21188:366:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "21731:248:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "21741:26:14",
									value: {
										arguments: [
											{
												name: "headStart",
												nodeType: "YulIdentifier",
												src: "21753:9:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "21764:2:14",
												type: "",
												value: "32",
											},
										],
										functionName: {
											name: "add",
											nodeType: "YulIdentifier",
											src: "21749:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "21749:18:14",
									},
									variableNames: [
										{
											name: "tail",
											nodeType: "YulIdentifier",
											src: "21741:4:14",
										},
									],
								},
								{
									expression: {
										arguments: [
											{
												arguments: [
													{
														name: "headStart",
														nodeType: "YulIdentifier",
														src: "21788:9:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "21799:1:14",
														type: "",
														value: "0",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "21784:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "21784:17:14",
											},
											{
												arguments: [
													{
														name: "tail",
														nodeType: "YulIdentifier",
														src: "21807:4:14",
													},
													{
														name: "headStart",
														nodeType: "YulIdentifier",
														src: "21813:9:14",
													},
												],
												functionName: {
													name: "sub",
													nodeType: "YulIdentifier",
													src: "21803:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "21803:20:14",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "21777:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "21777:47:14",
									},
									nodeType: "YulExpressionStatement",
									src: "21777:47:14",
								},
								{
									nodeType: "YulAssignment",
									src: "21833:139:14",
									value: {
										arguments: [
											{
												name: "tail",
												nodeType: "YulIdentifier",
												src: "21967:4:14",
											},
										],
										functionName: {
											name:
												"abi_encode_t_stringliteral_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a_to_t_string_memory_ptr_fromStack",
											nodeType: "YulIdentifier",
											src: "21841:124:14",
										},
										nodeType: "YulFunctionCall",
										src: "21841:131:14",
									},
									variableNames: [
										{
											name: "tail",
											nodeType: "YulIdentifier",
											src: "21833:4:14",
										},
									],
								},
							],
						},
						name:
							"abi_encode_tuple_t_stringliteral_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a__to_t_string_memory_ptr__fromStack_reversed",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "headStart",
								nodeType: "YulTypedName",
								src: "21711:9:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "tail",
								nodeType: "YulTypedName",
								src: "21726:4:14",
								type: "",
							},
						],
						src: "21560:419:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "22099:34:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "22109:18:14",
									value: {
										name: "pos",
										nodeType: "YulIdentifier",
										src: "22124:3:14",
									},
									variableNames: [
										{
											name: "updated_pos",
											nodeType: "YulIdentifier",
											src: "22109:11:14",
										},
									],
								},
							],
						},
						name:
							"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "pos",
								nodeType: "YulTypedName",
								src: "22071:3:14",
								type: "",
							},
							{
								name: "length",
								nodeType: "YulTypedName",
								src: "22076:6:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "updated_pos",
								nodeType: "YulTypedName",
								src: "22087:11:14",
								type: "",
							},
						],
						src: "21985:148:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "22249:267:14",
							statements: [
								{
									nodeType: "YulVariableDeclaration",
									src: "22259:53:14",
									value: {
										arguments: [
											{
												name: "value",
												nodeType: "YulIdentifier",
												src: "22306:5:14",
											},
										],
										functionName: {
											name: "array_length_t_string_memory_ptr",
											nodeType: "YulIdentifier",
											src: "22273:32:14",
										},
										nodeType: "YulFunctionCall",
										src: "22273:39:14",
									},
									variables: [
										{
											name: "length",
											nodeType: "YulTypedName",
											src: "22263:6:14",
											type: "",
										},
									],
								},
								{
									nodeType: "YulAssignment",
									src: "22321:96:14",
									value: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "22405:3:14",
											},
											{
												name: "length",
												nodeType: "YulIdentifier",
												src: "22410:6:14",
											},
										],
										functionName: {
											name:
												"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
											nodeType: "YulIdentifier",
											src: "22328:76:14",
										},
										nodeType: "YulFunctionCall",
										src: "22328:89:14",
									},
									variableNames: [
										{
											name: "pos",
											nodeType: "YulIdentifier",
											src: "22321:3:14",
										},
									],
								},
								{
									expression: {
										arguments: [
											{
												arguments: [
													{
														name: "value",
														nodeType: "YulIdentifier",
														src: "22452:5:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "22459:4:14",
														type: "",
														value: "0x20",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "22448:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "22448:16:14",
											},
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "22466:3:14",
											},
											{
												name: "length",
												nodeType: "YulIdentifier",
												src: "22471:6:14",
											},
										],
										functionName: {
											name: "copy_memory_to_memory",
											nodeType: "YulIdentifier",
											src: "22426:21:14",
										},
										nodeType: "YulFunctionCall",
										src: "22426:52:14",
									},
									nodeType: "YulExpressionStatement",
									src: "22426:52:14",
								},
								{
									nodeType: "YulAssignment",
									src: "22487:23:14",
									value: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "22498:3:14",
											},
											{
												name: "length",
												nodeType: "YulIdentifier",
												src: "22503:6:14",
											},
										],
										functionName: {
											name: "add",
											nodeType: "YulIdentifier",
											src: "22494:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "22494:16:14",
									},
									variableNames: [
										{
											name: "end",
											nodeType: "YulIdentifier",
											src: "22487:3:14",
										},
									],
								},
							],
						},
						name:
							"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "value",
								nodeType: "YulTypedName",
								src: "22230:5:14",
								type: "",
							},
							{
								name: "pos",
								nodeType: "YulTypedName",
								src: "22237:3:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "end",
								nodeType: "YulTypedName",
								src: "22245:3:14",
								type: "",
							},
						],
						src: "22139:377:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "22706:251:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "22717:102:14",
									value: {
										arguments: [
											{
												name: "value0",
												nodeType: "YulIdentifier",
												src: "22806:6:14",
											},
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "22815:3:14",
											},
										],
										functionName: {
											name:
												"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
											nodeType: "YulIdentifier",
											src: "22724:81:14",
										},
										nodeType: "YulFunctionCall",
										src: "22724:95:14",
									},
									variableNames: [
										{
											name: "pos",
											nodeType: "YulIdentifier",
											src: "22717:3:14",
										},
									],
								},
								{
									nodeType: "YulAssignment",
									src: "22829:102:14",
									value: {
										arguments: [
											{
												name: "value1",
												nodeType: "YulIdentifier",
												src: "22918:6:14",
											},
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "22927:3:14",
											},
										],
										functionName: {
											name:
												"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
											nodeType: "YulIdentifier",
											src: "22836:81:14",
										},
										nodeType: "YulFunctionCall",
										src: "22836:95:14",
									},
									variableNames: [
										{
											name: "pos",
											nodeType: "YulIdentifier",
											src: "22829:3:14",
										},
									],
								},
								{
									nodeType: "YulAssignment",
									src: "22941:10:14",
									value: {
										name: "pos",
										nodeType: "YulIdentifier",
										src: "22948:3:14",
									},
									variableNames: [
										{
											name: "end",
											nodeType: "YulIdentifier",
											src: "22941:3:14",
										},
									],
								},
							],
						},
						name:
							"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "pos",
								nodeType: "YulTypedName",
								src: "22677:3:14",
								type: "",
							},
							{
								name: "value1",
								nodeType: "YulTypedName",
								src: "22683:6:14",
								type: "",
							},
							{
								name: "value0",
								nodeType: "YulTypedName",
								src: "22691:6:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "end",
								nodeType: "YulTypedName",
								src: "22702:3:14",
								type: "",
							},
						],
						src: "22522:435:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "23069:118:14",
							statements: [
								{
									expression: {
										arguments: [
											{
												arguments: [
													{
														name: "memPtr",
														nodeType: "YulIdentifier",
														src: "23091:6:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "23099:1:14",
														type: "",
														value: "0",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "23087:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "23087:14:14",
											},
											{
												hexValue:
													"4e6f742077686974656c6973746564206f7220616c6c6f77616e636520746f6f",
												kind: "string",
												nodeType: "YulLiteral",
												src: "23103:34:14",
												type: "",
												value: "Not whitelisted or allowance too",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "23080:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "23080:58:14",
									},
									nodeType: "YulExpressionStatement",
									src: "23080:58:14",
								},
								{
									expression: {
										arguments: [
											{
												arguments: [
													{
														name: "memPtr",
														nodeType: "YulIdentifier",
														src: "23159:6:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "23167:2:14",
														type: "",
														value: "32",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "23155:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "23155:15:14",
											},
											{
												hexValue: "206c6f772e",
												kind: "string",
												nodeType: "YulLiteral",
												src: "23172:7:14",
												type: "",
												value: " low.",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "23148:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "23148:32:14",
									},
									nodeType: "YulExpressionStatement",
									src: "23148:32:14",
								},
							],
						},
						name:
							"store_literal_in_memory_25e9e384fb9ee74dfba124aec4131531c53b8e94403e24af723667c7636dbc7f",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "memPtr",
								nodeType: "YulTypedName",
								src: "23061:6:14",
								type: "",
							},
						],
						src: "22963:224:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "23339:220:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "23349:74:14",
									value: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "23415:3:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "23420:2:14",
												type: "",
												value: "37",
											},
										],
										functionName: {
											name:
												"array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
											nodeType: "YulIdentifier",
											src: "23356:58:14",
										},
										nodeType: "YulFunctionCall",
										src: "23356:67:14",
									},
									variableNames: [
										{
											name: "pos",
											nodeType: "YulIdentifier",
											src: "23349:3:14",
										},
									],
								},
								{
									expression: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "23521:3:14",
											},
										],
										functionName: {
											name:
												"store_literal_in_memory_25e9e384fb9ee74dfba124aec4131531c53b8e94403e24af723667c7636dbc7f",
											nodeType: "YulIdentifier",
											src: "23432:88:14",
										},
										nodeType: "YulFunctionCall",
										src: "23432:93:14",
									},
									nodeType: "YulExpressionStatement",
									src: "23432:93:14",
								},
								{
									nodeType: "YulAssignment",
									src: "23534:19:14",
									value: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "23545:3:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "23550:2:14",
												type: "",
												value: "64",
											},
										],
										functionName: {
											name: "add",
											nodeType: "YulIdentifier",
											src: "23541:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "23541:12:14",
									},
									variableNames: [
										{
											name: "end",
											nodeType: "YulIdentifier",
											src: "23534:3:14",
										},
									],
								},
							],
						},
						name:
							"abi_encode_t_stringliteral_25e9e384fb9ee74dfba124aec4131531c53b8e94403e24af723667c7636dbc7f_to_t_string_memory_ptr_fromStack",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "pos",
								nodeType: "YulTypedName",
								src: "23327:3:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "end",
								nodeType: "YulTypedName",
								src: "23335:3:14",
								type: "",
							},
						],
						src: "23193:366:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "23736:248:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "23746:26:14",
									value: {
										arguments: [
											{
												name: "headStart",
												nodeType: "YulIdentifier",
												src: "23758:9:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "23769:2:14",
												type: "",
												value: "32",
											},
										],
										functionName: {
											name: "add",
											nodeType: "YulIdentifier",
											src: "23754:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "23754:18:14",
									},
									variableNames: [
										{
											name: "tail",
											nodeType: "YulIdentifier",
											src: "23746:4:14",
										},
									],
								},
								{
									expression: {
										arguments: [
											{
												arguments: [
													{
														name: "headStart",
														nodeType: "YulIdentifier",
														src: "23793:9:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "23804:1:14",
														type: "",
														value: "0",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "23789:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "23789:17:14",
											},
											{
												arguments: [
													{
														name: "tail",
														nodeType: "YulIdentifier",
														src: "23812:4:14",
													},
													{
														name: "headStart",
														nodeType: "YulIdentifier",
														src: "23818:9:14",
													},
												],
												functionName: {
													name: "sub",
													nodeType: "YulIdentifier",
													src: "23808:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "23808:20:14",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "23782:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "23782:47:14",
									},
									nodeType: "YulExpressionStatement",
									src: "23782:47:14",
								},
								{
									nodeType: "YulAssignment",
									src: "23838:139:14",
									value: {
										arguments: [
											{
												name: "tail",
												nodeType: "YulIdentifier",
												src: "23972:4:14",
											},
										],
										functionName: {
											name:
												"abi_encode_t_stringliteral_25e9e384fb9ee74dfba124aec4131531c53b8e94403e24af723667c7636dbc7f_to_t_string_memory_ptr_fromStack",
											nodeType: "YulIdentifier",
											src: "23846:124:14",
										},
										nodeType: "YulFunctionCall",
										src: "23846:131:14",
									},
									variableNames: [
										{
											name: "tail",
											nodeType: "YulIdentifier",
											src: "23838:4:14",
										},
									],
								},
							],
						},
						name:
							"abi_encode_tuple_t_stringliteral_25e9e384fb9ee74dfba124aec4131531c53b8e94403e24af723667c7636dbc7f__to_t_string_memory_ptr__fromStack_reversed",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "headStart",
								nodeType: "YulTypedName",
								src: "23716:9:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "tail",
								nodeType: "YulTypedName",
								src: "23731:4:14",
								type: "",
							},
						],
						src: "23565:419:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "24018:152:14",
							statements: [
								{
									expression: {
										arguments: [
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "24035:1:14",
												type: "",
												value: "0",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "24038:77:14",
												type: "",
												value:
													"35408467139433450592217433187231851964531694900788300625387963629091585785856",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "24028:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "24028:88:14",
									},
									nodeType: "YulExpressionStatement",
									src: "24028:88:14",
								},
								{
									expression: {
										arguments: [
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "24132:1:14",
												type: "",
												value: "4",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "24135:4:14",
												type: "",
												value: "0x11",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "24125:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "24125:15:14",
									},
									nodeType: "YulExpressionStatement",
									src: "24125:15:14",
								},
								{
									expression: {
										arguments: [
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "24156:1:14",
												type: "",
												value: "0",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "24159:4:14",
												type: "",
												value: "0x24",
											},
										],
										functionName: {
											name: "revert",
											nodeType: "YulIdentifier",
											src: "24149:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "24149:15:14",
									},
									nodeType: "YulExpressionStatement",
									src: "24149:15:14",
								},
							],
						},
						name: "panic_error_0x11",
						nodeType: "YulFunctionDefinition",
						src: "23990:180:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "24220:261:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "24230:25:14",
									value: {
										arguments: [
											{
												name: "x",
												nodeType: "YulIdentifier",
												src: "24253:1:14",
											},
										],
										functionName: {
											name: "cleanup_t_uint256",
											nodeType: "YulIdentifier",
											src: "24235:17:14",
										},
										nodeType: "YulFunctionCall",
										src: "24235:20:14",
									},
									variableNames: [
										{
											name: "x",
											nodeType: "YulIdentifier",
											src: "24230:1:14",
										},
									],
								},
								{
									nodeType: "YulAssignment",
									src: "24264:25:14",
									value: {
										arguments: [
											{
												name: "y",
												nodeType: "YulIdentifier",
												src: "24287:1:14",
											},
										],
										functionName: {
											name: "cleanup_t_uint256",
											nodeType: "YulIdentifier",
											src: "24269:17:14",
										},
										nodeType: "YulFunctionCall",
										src: "24269:20:14",
									},
									variableNames: [
										{
											name: "y",
											nodeType: "YulIdentifier",
											src: "24264:1:14",
										},
									],
								},
								{
									body: {
										nodeType: "YulBlock",
										src: "24427:22:14",
										statements: [
											{
												expression: {
													arguments: [],
													functionName: {
														name: "panic_error_0x11",
														nodeType: "YulIdentifier",
														src: "24429:16:14",
													},
													nodeType: "YulFunctionCall",
													src: "24429:18:14",
												},
												nodeType: "YulExpressionStatement",
												src: "24429:18:14",
											},
										],
									},
									condition: {
										arguments: [
											{
												name: "x",
												nodeType: "YulIdentifier",
												src: "24348:1:14",
											},
											{
												arguments: [
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "24355:66:14",
														type: "",
														value:
															"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
													},
													{
														name: "y",
														nodeType: "YulIdentifier",
														src: "24423:1:14",
													},
												],
												functionName: {
													name: "sub",
													nodeType: "YulIdentifier",
													src: "24351:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "24351:74:14",
											},
										],
										functionName: {
											name: "gt",
											nodeType: "YulIdentifier",
											src: "24345:2:14",
										},
										nodeType: "YulFunctionCall",
										src: "24345:81:14",
									},
									nodeType: "YulIf",
									src: "24342:107:14",
								},
								{
									nodeType: "YulAssignment",
									src: "24459:16:14",
									value: {
										arguments: [
											{
												name: "x",
												nodeType: "YulIdentifier",
												src: "24470:1:14",
											},
											{
												name: "y",
												nodeType: "YulIdentifier",
												src: "24473:1:14",
											},
										],
										functionName: {
											name: "add",
											nodeType: "YulIdentifier",
											src: "24466:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "24466:9:14",
									},
									variableNames: [
										{
											name: "sum",
											nodeType: "YulIdentifier",
											src: "24459:3:14",
										},
									],
								},
							],
						},
						name: "checked_add_t_uint256",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "x",
								nodeType: "YulTypedName",
								src: "24207:1:14",
								type: "",
							},
							{
								name: "y",
								nodeType: "YulTypedName",
								src: "24210:1:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "sum",
								nodeType: "YulTypedName",
								src: "24216:3:14",
								type: "",
							},
						],
						src: "24176:305:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "24593:119:14",
							statements: [
								{
									expression: {
										arguments: [
											{
												arguments: [
													{
														name: "memPtr",
														nodeType: "YulIdentifier",
														src: "24615:6:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "24623:1:14",
														type: "",
														value: "0",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "24611:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "24611:14:14",
											},
											{
												hexValue:
													"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
												kind: "string",
												nodeType: "YulLiteral",
												src: "24627:34:14",
												type: "",
												value: "Ownable: new owner is the zero a",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "24604:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "24604:58:14",
									},
									nodeType: "YulExpressionStatement",
									src: "24604:58:14",
								},
								{
									expression: {
										arguments: [
											{
												arguments: [
													{
														name: "memPtr",
														nodeType: "YulIdentifier",
														src: "24683:6:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "24691:2:14",
														type: "",
														value: "32",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "24679:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "24679:15:14",
											},
											{
												hexValue: "646472657373",
												kind: "string",
												nodeType: "YulLiteral",
												src: "24696:8:14",
												type: "",
												value: "ddress",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "24672:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "24672:33:14",
									},
									nodeType: "YulExpressionStatement",
									src: "24672:33:14",
								},
							],
						},
						name:
							"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "memPtr",
								nodeType: "YulTypedName",
								src: "24585:6:14",
								type: "",
							},
						],
						src: "24487:225:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "24864:220:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "24874:74:14",
									value: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "24940:3:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "24945:2:14",
												type: "",
												value: "38",
											},
										],
										functionName: {
											name:
												"array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
											nodeType: "YulIdentifier",
											src: "24881:58:14",
										},
										nodeType: "YulFunctionCall",
										src: "24881:67:14",
									},
									variableNames: [
										{
											name: "pos",
											nodeType: "YulIdentifier",
											src: "24874:3:14",
										},
									],
								},
								{
									expression: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "25046:3:14",
											},
										],
										functionName: {
											name:
												"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
											nodeType: "YulIdentifier",
											src: "24957:88:14",
										},
										nodeType: "YulFunctionCall",
										src: "24957:93:14",
									},
									nodeType: "YulExpressionStatement",
									src: "24957:93:14",
								},
								{
									nodeType: "YulAssignment",
									src: "25059:19:14",
									value: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "25070:3:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "25075:2:14",
												type: "",
												value: "64",
											},
										],
										functionName: {
											name: "add",
											nodeType: "YulIdentifier",
											src: "25066:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "25066:12:14",
									},
									variableNames: [
										{
											name: "end",
											nodeType: "YulIdentifier",
											src: "25059:3:14",
										},
									],
								},
							],
						},
						name:
							"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "pos",
								nodeType: "YulTypedName",
								src: "24852:3:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "end",
								nodeType: "YulTypedName",
								src: "24860:3:14",
								type: "",
							},
						],
						src: "24718:366:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "25261:248:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "25271:26:14",
									value: {
										arguments: [
											{
												name: "headStart",
												nodeType: "YulIdentifier",
												src: "25283:9:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "25294:2:14",
												type: "",
												value: "32",
											},
										],
										functionName: {
											name: "add",
											nodeType: "YulIdentifier",
											src: "25279:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "25279:18:14",
									},
									variableNames: [
										{
											name: "tail",
											nodeType: "YulIdentifier",
											src: "25271:4:14",
										},
									],
								},
								{
									expression: {
										arguments: [
											{
												arguments: [
													{
														name: "headStart",
														nodeType: "YulIdentifier",
														src: "25318:9:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "25329:1:14",
														type: "",
														value: "0",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "25314:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "25314:17:14",
											},
											{
												arguments: [
													{
														name: "tail",
														nodeType: "YulIdentifier",
														src: "25337:4:14",
													},
													{
														name: "headStart",
														nodeType: "YulIdentifier",
														src: "25343:9:14",
													},
												],
												functionName: {
													name: "sub",
													nodeType: "YulIdentifier",
													src: "25333:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "25333:20:14",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "25307:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "25307:47:14",
									},
									nodeType: "YulExpressionStatement",
									src: "25307:47:14",
								},
								{
									nodeType: "YulAssignment",
									src: "25363:139:14",
									value: {
										arguments: [
											{
												name: "tail",
												nodeType: "YulIdentifier",
												src: "25497:4:14",
											},
										],
										functionName: {
											name:
												"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
											nodeType: "YulIdentifier",
											src: "25371:124:14",
										},
										nodeType: "YulFunctionCall",
										src: "25371:131:14",
									},
									variableNames: [
										{
											name: "tail",
											nodeType: "YulIdentifier",
											src: "25363:4:14",
										},
									],
								},
							],
						},
						name:
							"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "headStart",
								nodeType: "YulTypedName",
								src: "25241:9:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "tail",
								nodeType: "YulTypedName",
								src: "25256:4:14",
								type: "",
							},
						],
						src: "25090:419:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "25621:125:14",
							statements: [
								{
									expression: {
										arguments: [
											{
												arguments: [
													{
														name: "memPtr",
														nodeType: "YulIdentifier",
														src: "25643:6:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "25651:1:14",
														type: "",
														value: "0",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "25639:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "25639:14:14",
											},
											{
												hexValue:
													"4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578",
												kind: "string",
												nodeType: "YulLiteral",
												src: "25655:34:14",
												type: "",
												value: "ERC721: operator query for nonex",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "25632:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "25632:58:14",
									},
									nodeType: "YulExpressionStatement",
									src: "25632:58:14",
								},
								{
									expression: {
										arguments: [
											{
												arguments: [
													{
														name: "memPtr",
														nodeType: "YulIdentifier",
														src: "25711:6:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "25719:2:14",
														type: "",
														value: "32",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "25707:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "25707:15:14",
											},
											{
												hexValue: "697374656e7420746f6b656e",
												kind: "string",
												nodeType: "YulLiteral",
												src: "25724:14:14",
												type: "",
												value: "istent token",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "25700:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "25700:39:14",
									},
									nodeType: "YulExpressionStatement",
									src: "25700:39:14",
								},
							],
						},
						name:
							"store_literal_in_memory_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "memPtr",
								nodeType: "YulTypedName",
								src: "25613:6:14",
								type: "",
							},
						],
						src: "25515:231:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "25898:220:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "25908:74:14",
									value: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "25974:3:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "25979:2:14",
												type: "",
												value: "44",
											},
										],
										functionName: {
											name:
												"array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
											nodeType: "YulIdentifier",
											src: "25915:58:14",
										},
										nodeType: "YulFunctionCall",
										src: "25915:67:14",
									},
									variableNames: [
										{
											name: "pos",
											nodeType: "YulIdentifier",
											src: "25908:3:14",
										},
									],
								},
								{
									expression: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "26080:3:14",
											},
										],
										functionName: {
											name:
												"store_literal_in_memory_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
											nodeType: "YulIdentifier",
											src: "25991:88:14",
										},
										nodeType: "YulFunctionCall",
										src: "25991:93:14",
									},
									nodeType: "YulExpressionStatement",
									src: "25991:93:14",
								},
								{
									nodeType: "YulAssignment",
									src: "26093:19:14",
									value: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "26104:3:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "26109:2:14",
												type: "",
												value: "64",
											},
										],
										functionName: {
											name: "add",
											nodeType: "YulIdentifier",
											src: "26100:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "26100:12:14",
									},
									variableNames: [
										{
											name: "end",
											nodeType: "YulIdentifier",
											src: "26093:3:14",
										},
									],
								},
							],
						},
						name:
							"abi_encode_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c_to_t_string_memory_ptr_fromStack",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "pos",
								nodeType: "YulTypedName",
								src: "25886:3:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "end",
								nodeType: "YulTypedName",
								src: "25894:3:14",
								type: "",
							},
						],
						src: "25752:366:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "26295:248:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "26305:26:14",
									value: {
										arguments: [
											{
												name: "headStart",
												nodeType: "YulIdentifier",
												src: "26317:9:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "26328:2:14",
												type: "",
												value: "32",
											},
										],
										functionName: {
											name: "add",
											nodeType: "YulIdentifier",
											src: "26313:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "26313:18:14",
									},
									variableNames: [
										{
											name: "tail",
											nodeType: "YulIdentifier",
											src: "26305:4:14",
										},
									],
								},
								{
									expression: {
										arguments: [
											{
												arguments: [
													{
														name: "headStart",
														nodeType: "YulIdentifier",
														src: "26352:9:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "26363:1:14",
														type: "",
														value: "0",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "26348:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "26348:17:14",
											},
											{
												arguments: [
													{
														name: "tail",
														nodeType: "YulIdentifier",
														src: "26371:4:14",
													},
													{
														name: "headStart",
														nodeType: "YulIdentifier",
														src: "26377:9:14",
													},
												],
												functionName: {
													name: "sub",
													nodeType: "YulIdentifier",
													src: "26367:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "26367:20:14",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "26341:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "26341:47:14",
									},
									nodeType: "YulExpressionStatement",
									src: "26341:47:14",
								},
								{
									nodeType: "YulAssignment",
									src: "26397:139:14",
									value: {
										arguments: [
											{
												name: "tail",
												nodeType: "YulIdentifier",
												src: "26531:4:14",
											},
										],
										functionName: {
											name:
												"abi_encode_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c_to_t_string_memory_ptr_fromStack",
											nodeType: "YulIdentifier",
											src: "26405:124:14",
										},
										nodeType: "YulFunctionCall",
										src: "26405:131:14",
									},
									variableNames: [
										{
											name: "tail",
											nodeType: "YulIdentifier",
											src: "26397:4:14",
										},
									],
								},
							],
						},
						name:
							"abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "headStart",
								nodeType: "YulTypedName",
								src: "26275:9:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "tail",
								nodeType: "YulTypedName",
								src: "26290:4:14",
								type: "",
							},
						],
						src: "26124:419:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "26655:122:14",
							statements: [
								{
									expression: {
										arguments: [
											{
												arguments: [
													{
														name: "memPtr",
														nodeType: "YulIdentifier",
														src: "26677:6:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "26685:1:14",
														type: "",
														value: "0",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "26673:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "26673:14:14",
											},
											{
												hexValue:
													"4552433732313a207472616e73666572206f6620746f6b656e20746861742069",
												kind: "string",
												nodeType: "YulLiteral",
												src: "26689:34:14",
												type: "",
												value: "ERC721: transfer of token that i",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "26666:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "26666:58:14",
									},
									nodeType: "YulExpressionStatement",
									src: "26666:58:14",
								},
								{
									expression: {
										arguments: [
											{
												arguments: [
													{
														name: "memPtr",
														nodeType: "YulIdentifier",
														src: "26745:6:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "26753:2:14",
														type: "",
														value: "32",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "26741:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "26741:15:14",
											},
											{
												hexValue: "73206e6f74206f776e",
												kind: "string",
												nodeType: "YulLiteral",
												src: "26758:11:14",
												type: "",
												value: "s not own",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "26734:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "26734:36:14",
									},
									nodeType: "YulExpressionStatement",
									src: "26734:36:14",
								},
							],
						},
						name:
							"store_literal_in_memory_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "memPtr",
								nodeType: "YulTypedName",
								src: "26647:6:14",
								type: "",
							},
						],
						src: "26549:228:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "26929:220:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "26939:74:14",
									value: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "27005:3:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "27010:2:14",
												type: "",
												value: "41",
											},
										],
										functionName: {
											name:
												"array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
											nodeType: "YulIdentifier",
											src: "26946:58:14",
										},
										nodeType: "YulFunctionCall",
										src: "26946:67:14",
									},
									variableNames: [
										{
											name: "pos",
											nodeType: "YulIdentifier",
											src: "26939:3:14",
										},
									],
								},
								{
									expression: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "27111:3:14",
											},
										],
										functionName: {
											name:
												"store_literal_in_memory_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950",
											nodeType: "YulIdentifier",
											src: "27022:88:14",
										},
										nodeType: "YulFunctionCall",
										src: "27022:93:14",
									},
									nodeType: "YulExpressionStatement",
									src: "27022:93:14",
								},
								{
									nodeType: "YulAssignment",
									src: "27124:19:14",
									value: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "27135:3:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "27140:2:14",
												type: "",
												value: "64",
											},
										],
										functionName: {
											name: "add",
											nodeType: "YulIdentifier",
											src: "27131:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "27131:12:14",
									},
									variableNames: [
										{
											name: "end",
											nodeType: "YulIdentifier",
											src: "27124:3:14",
										},
									],
								},
							],
						},
						name:
							"abi_encode_t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950_to_t_string_memory_ptr_fromStack",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "pos",
								nodeType: "YulTypedName",
								src: "26917:3:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "end",
								nodeType: "YulTypedName",
								src: "26925:3:14",
								type: "",
							},
						],
						src: "26783:366:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "27326:248:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "27336:26:14",
									value: {
										arguments: [
											{
												name: "headStart",
												nodeType: "YulIdentifier",
												src: "27348:9:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "27359:2:14",
												type: "",
												value: "32",
											},
										],
										functionName: {
											name: "add",
											nodeType: "YulIdentifier",
											src: "27344:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "27344:18:14",
									},
									variableNames: [
										{
											name: "tail",
											nodeType: "YulIdentifier",
											src: "27336:4:14",
										},
									],
								},
								{
									expression: {
										arguments: [
											{
												arguments: [
													{
														name: "headStart",
														nodeType: "YulIdentifier",
														src: "27383:9:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "27394:1:14",
														type: "",
														value: "0",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "27379:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "27379:17:14",
											},
											{
												arguments: [
													{
														name: "tail",
														nodeType: "YulIdentifier",
														src: "27402:4:14",
													},
													{
														name: "headStart",
														nodeType: "YulIdentifier",
														src: "27408:9:14",
													},
												],
												functionName: {
													name: "sub",
													nodeType: "YulIdentifier",
													src: "27398:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "27398:20:14",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "27372:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "27372:47:14",
									},
									nodeType: "YulExpressionStatement",
									src: "27372:47:14",
								},
								{
									nodeType: "YulAssignment",
									src: "27428:139:14",
									value: {
										arguments: [
											{
												name: "tail",
												nodeType: "YulIdentifier",
												src: "27562:4:14",
											},
										],
										functionName: {
											name:
												"abi_encode_t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950_to_t_string_memory_ptr_fromStack",
											nodeType: "YulIdentifier",
											src: "27436:124:14",
										},
										nodeType: "YulFunctionCall",
										src: "27436:131:14",
									},
									variableNames: [
										{
											name: "tail",
											nodeType: "YulIdentifier",
											src: "27428:4:14",
										},
									],
								},
							],
						},
						name:
							"abi_encode_tuple_t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950__to_t_string_memory_ptr__fromStack_reversed",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "headStart",
								nodeType: "YulTypedName",
								src: "27306:9:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "tail",
								nodeType: "YulTypedName",
								src: "27321:4:14",
								type: "",
							},
						],
						src: "27155:419:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "27686:117:14",
							statements: [
								{
									expression: {
										arguments: [
											{
												arguments: [
													{
														name: "memPtr",
														nodeType: "YulIdentifier",
														src: "27708:6:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "27716:1:14",
														type: "",
														value: "0",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "27704:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "27704:14:14",
											},
											{
												hexValue:
													"4552433732313a207472616e7366657220746f20746865207a65726f20616464",
												kind: "string",
												nodeType: "YulLiteral",
												src: "27720:34:14",
												type: "",
												value: "ERC721: transfer to the zero add",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "27697:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "27697:58:14",
									},
									nodeType: "YulExpressionStatement",
									src: "27697:58:14",
								},
								{
									expression: {
										arguments: [
											{
												arguments: [
													{
														name: "memPtr",
														nodeType: "YulIdentifier",
														src: "27776:6:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "27784:2:14",
														type: "",
														value: "32",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "27772:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "27772:15:14",
											},
											{
												hexValue: "72657373",
												kind: "string",
												nodeType: "YulLiteral",
												src: "27789:6:14",
												type: "",
												value: "ress",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "27765:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "27765:31:14",
									},
									nodeType: "YulExpressionStatement",
									src: "27765:31:14",
								},
							],
						},
						name:
							"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "memPtr",
								nodeType: "YulTypedName",
								src: "27678:6:14",
								type: "",
							},
						],
						src: "27580:223:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "27955:220:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "27965:74:14",
									value: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "28031:3:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "28036:2:14",
												type: "",
												value: "36",
											},
										],
										functionName: {
											name:
												"array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
											nodeType: "YulIdentifier",
											src: "27972:58:14",
										},
										nodeType: "YulFunctionCall",
										src: "27972:67:14",
									},
									variableNames: [
										{
											name: "pos",
											nodeType: "YulIdentifier",
											src: "27965:3:14",
										},
									],
								},
								{
									expression: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "28137:3:14",
											},
										],
										functionName: {
											name:
												"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
											nodeType: "YulIdentifier",
											src: "28048:88:14",
										},
										nodeType: "YulFunctionCall",
										src: "28048:93:14",
									},
									nodeType: "YulExpressionStatement",
									src: "28048:93:14",
								},
								{
									nodeType: "YulAssignment",
									src: "28150:19:14",
									value: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "28161:3:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "28166:2:14",
												type: "",
												value: "64",
											},
										],
										functionName: {
											name: "add",
											nodeType: "YulIdentifier",
											src: "28157:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "28157:12:14",
									},
									variableNames: [
										{
											name: "end",
											nodeType: "YulIdentifier",
											src: "28150:3:14",
										},
									],
								},
							],
						},
						name:
							"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "pos",
								nodeType: "YulTypedName",
								src: "27943:3:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "end",
								nodeType: "YulTypedName",
								src: "27951:3:14",
								type: "",
							},
						],
						src: "27809:366:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "28352:248:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "28362:26:14",
									value: {
										arguments: [
											{
												name: "headStart",
												nodeType: "YulIdentifier",
												src: "28374:9:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "28385:2:14",
												type: "",
												value: "32",
											},
										],
										functionName: {
											name: "add",
											nodeType: "YulIdentifier",
											src: "28370:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "28370:18:14",
									},
									variableNames: [
										{
											name: "tail",
											nodeType: "YulIdentifier",
											src: "28362:4:14",
										},
									],
								},
								{
									expression: {
										arguments: [
											{
												arguments: [
													{
														name: "headStart",
														nodeType: "YulIdentifier",
														src: "28409:9:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "28420:1:14",
														type: "",
														value: "0",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "28405:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "28405:17:14",
											},
											{
												arguments: [
													{
														name: "tail",
														nodeType: "YulIdentifier",
														src: "28428:4:14",
													},
													{
														name: "headStart",
														nodeType: "YulIdentifier",
														src: "28434:9:14",
													},
												],
												functionName: {
													name: "sub",
													nodeType: "YulIdentifier",
													src: "28424:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "28424:20:14",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "28398:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "28398:47:14",
									},
									nodeType: "YulExpressionStatement",
									src: "28398:47:14",
								},
								{
									nodeType: "YulAssignment",
									src: "28454:139:14",
									value: {
										arguments: [
											{
												name: "tail",
												nodeType: "YulIdentifier",
												src: "28588:4:14",
											},
										],
										functionName: {
											name:
												"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack",
											nodeType: "YulIdentifier",
											src: "28462:124:14",
										},
										nodeType: "YulFunctionCall",
										src: "28462:131:14",
									},
									variableNames: [
										{
											name: "tail",
											nodeType: "YulIdentifier",
											src: "28454:4:14",
										},
									],
								},
							],
						},
						name:
							"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "headStart",
								nodeType: "YulTypedName",
								src: "28332:9:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "tail",
								nodeType: "YulTypedName",
								src: "28347:4:14",
								type: "",
							},
						],
						src: "28181:419:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "28651:146:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "28661:25:14",
									value: {
										arguments: [
											{
												name: "x",
												nodeType: "YulIdentifier",
												src: "28684:1:14",
											},
										],
										functionName: {
											name: "cleanup_t_uint256",
											nodeType: "YulIdentifier",
											src: "28666:17:14",
										},
										nodeType: "YulFunctionCall",
										src: "28666:20:14",
									},
									variableNames: [
										{
											name: "x",
											nodeType: "YulIdentifier",
											src: "28661:1:14",
										},
									],
								},
								{
									nodeType: "YulAssignment",
									src: "28695:25:14",
									value: {
										arguments: [
											{
												name: "y",
												nodeType: "YulIdentifier",
												src: "28718:1:14",
											},
										],
										functionName: {
											name: "cleanup_t_uint256",
											nodeType: "YulIdentifier",
											src: "28700:17:14",
										},
										nodeType: "YulFunctionCall",
										src: "28700:20:14",
									},
									variableNames: [
										{
											name: "y",
											nodeType: "YulIdentifier",
											src: "28695:1:14",
										},
									],
								},
								{
									body: {
										nodeType: "YulBlock",
										src: "28742:22:14",
										statements: [
											{
												expression: {
													arguments: [],
													functionName: {
														name: "panic_error_0x11",
														nodeType: "YulIdentifier",
														src: "28744:16:14",
													},
													nodeType: "YulFunctionCall",
													src: "28744:18:14",
												},
												nodeType: "YulExpressionStatement",
												src: "28744:18:14",
											},
										],
									},
									condition: {
										arguments: [
											{
												name: "x",
												nodeType: "YulIdentifier",
												src: "28736:1:14",
											},
											{
												name: "y",
												nodeType: "YulIdentifier",
												src: "28739:1:14",
											},
										],
										functionName: {
											name: "lt",
											nodeType: "YulIdentifier",
											src: "28733:2:14",
										},
										nodeType: "YulFunctionCall",
										src: "28733:8:14",
									},
									nodeType: "YulIf",
									src: "28730:34:14",
								},
								{
									nodeType: "YulAssignment",
									src: "28774:17:14",
									value: {
										arguments: [
											{
												name: "x",
												nodeType: "YulIdentifier",
												src: "28786:1:14",
											},
											{
												name: "y",
												nodeType: "YulIdentifier",
												src: "28789:1:14",
											},
										],
										functionName: {
											name: "sub",
											nodeType: "YulIdentifier",
											src: "28782:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "28782:9:14",
									},
									variableNames: [
										{
											name: "diff",
											nodeType: "YulIdentifier",
											src: "28774:4:14",
										},
									],
								},
							],
						},
						name: "checked_sub_t_uint256",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "x",
								nodeType: "YulTypedName",
								src: "28637:1:14",
								type: "",
							},
							{
								name: "y",
								nodeType: "YulTypedName",
								src: "28640:1:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "diff",
								nodeType: "YulTypedName",
								src: "28646:4:14",
								type: "",
							},
						],
						src: "28606:191:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "28909:131:14",
							statements: [
								{
									expression: {
										arguments: [
											{
												arguments: [
													{
														name: "memPtr",
														nodeType: "YulIdentifier",
														src: "28931:6:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "28939:1:14",
														type: "",
														value: "0",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "28927:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "28927:14:14",
											},
											{
												hexValue:
													"4552433732313a207472616e7366657220746f206e6f6e204552433732315265",
												kind: "string",
												nodeType: "YulLiteral",
												src: "28943:34:14",
												type: "",
												value: "ERC721: transfer to non ERC721Re",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "28920:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "28920:58:14",
									},
									nodeType: "YulExpressionStatement",
									src: "28920:58:14",
								},
								{
									expression: {
										arguments: [
											{
												arguments: [
													{
														name: "memPtr",
														nodeType: "YulIdentifier",
														src: "28999:6:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "29007:2:14",
														type: "",
														value: "32",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "28995:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "28995:15:14",
											},
											{
												hexValue: "63656976657220696d706c656d656e746572",
												kind: "string",
												nodeType: "YulLiteral",
												src: "29012:20:14",
												type: "",
												value: "ceiver implementer",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "28988:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "28988:45:14",
									},
									nodeType: "YulExpressionStatement",
									src: "28988:45:14",
								},
							],
						},
						name:
							"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "memPtr",
								nodeType: "YulTypedName",
								src: "28901:6:14",
								type: "",
							},
						],
						src: "28803:237:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "29192:220:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "29202:74:14",
									value: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "29268:3:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "29273:2:14",
												type: "",
												value: "50",
											},
										],
										functionName: {
											name:
												"array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
											nodeType: "YulIdentifier",
											src: "29209:58:14",
										},
										nodeType: "YulFunctionCall",
										src: "29209:67:14",
									},
									variableNames: [
										{
											name: "pos",
											nodeType: "YulIdentifier",
											src: "29202:3:14",
										},
									],
								},
								{
									expression: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "29374:3:14",
											},
										],
										functionName: {
											name:
												"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
											nodeType: "YulIdentifier",
											src: "29285:88:14",
										},
										nodeType: "YulFunctionCall",
										src: "29285:93:14",
									},
									nodeType: "YulExpressionStatement",
									src: "29285:93:14",
								},
								{
									nodeType: "YulAssignment",
									src: "29387:19:14",
									value: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "29398:3:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "29403:2:14",
												type: "",
												value: "64",
											},
										],
										functionName: {
											name: "add",
											nodeType: "YulIdentifier",
											src: "29394:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "29394:12:14",
									},
									variableNames: [
										{
											name: "end",
											nodeType: "YulIdentifier",
											src: "29387:3:14",
										},
									],
								},
							],
						},
						name:
							"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "pos",
								nodeType: "YulTypedName",
								src: "29180:3:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "end",
								nodeType: "YulTypedName",
								src: "29188:3:14",
								type: "",
							},
						],
						src: "29046:366:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "29589:248:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "29599:26:14",
									value: {
										arguments: [
											{
												name: "headStart",
												nodeType: "YulIdentifier",
												src: "29611:9:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "29622:2:14",
												type: "",
												value: "32",
											},
										],
										functionName: {
											name: "add",
											nodeType: "YulIdentifier",
											src: "29607:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "29607:18:14",
									},
									variableNames: [
										{
											name: "tail",
											nodeType: "YulIdentifier",
											src: "29599:4:14",
										},
									],
								},
								{
									expression: {
										arguments: [
											{
												arguments: [
													{
														name: "headStart",
														nodeType: "YulIdentifier",
														src: "29646:9:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "29657:1:14",
														type: "",
														value: "0",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "29642:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "29642:17:14",
											},
											{
												arguments: [
													{
														name: "tail",
														nodeType: "YulIdentifier",
														src: "29665:4:14",
													},
													{
														name: "headStart",
														nodeType: "YulIdentifier",
														src: "29671:9:14",
													},
												],
												functionName: {
													name: "sub",
													nodeType: "YulIdentifier",
													src: "29661:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "29661:20:14",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "29635:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "29635:47:14",
									},
									nodeType: "YulExpressionStatement",
									src: "29635:47:14",
								},
								{
									nodeType: "YulAssignment",
									src: "29691:139:14",
									value: {
										arguments: [
											{
												name: "tail",
												nodeType: "YulIdentifier",
												src: "29825:4:14",
											},
										],
										functionName: {
											name:
												"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack",
											nodeType: "YulIdentifier",
											src: "29699:124:14",
										},
										nodeType: "YulFunctionCall",
										src: "29699:131:14",
									},
									variableNames: [
										{
											name: "tail",
											nodeType: "YulIdentifier",
											src: "29691:4:14",
										},
									],
								},
							],
						},
						name:
							"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "headStart",
								nodeType: "YulTypedName",
								src: "29569:9:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "tail",
								nodeType: "YulTypedName",
								src: "29584:4:14",
								type: "",
							},
						],
						src: "29418:419:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "29949:128:14",
							statements: [
								{
									expression: {
										arguments: [
											{
												arguments: [
													{
														name: "memPtr",
														nodeType: "YulIdentifier",
														src: "29971:6:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "29979:1:14",
														type: "",
														value: "0",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "29967:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "29967:14:14",
											},
											{
												hexValue:
													"4552433732314d657461646174613a2055524920717565727920666f72206e6f",
												kind: "string",
												nodeType: "YulLiteral",
												src: "29983:34:14",
												type: "",
												value: "ERC721Metadata: URI query for no",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "29960:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "29960:58:14",
									},
									nodeType: "YulExpressionStatement",
									src: "29960:58:14",
								},
								{
									expression: {
										arguments: [
											{
												arguments: [
													{
														name: "memPtr",
														nodeType: "YulIdentifier",
														src: "30039:6:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "30047:2:14",
														type: "",
														value: "32",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "30035:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "30035:15:14",
											},
											{
												hexValue: "6e6578697374656e7420746f6b656e",
												kind: "string",
												nodeType: "YulLiteral",
												src: "30052:17:14",
												type: "",
												value: "nexistent token",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "30028:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "30028:42:14",
									},
									nodeType: "YulExpressionStatement",
									src: "30028:42:14",
								},
							],
						},
						name:
							"store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "memPtr",
								nodeType: "YulTypedName",
								src: "29941:6:14",
								type: "",
							},
						],
						src: "29843:234:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "30229:220:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "30239:74:14",
									value: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "30305:3:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "30310:2:14",
												type: "",
												value: "47",
											},
										],
										functionName: {
											name:
												"array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
											nodeType: "YulIdentifier",
											src: "30246:58:14",
										},
										nodeType: "YulFunctionCall",
										src: "30246:67:14",
									},
									variableNames: [
										{
											name: "pos",
											nodeType: "YulIdentifier",
											src: "30239:3:14",
										},
									],
								},
								{
									expression: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "30411:3:14",
											},
										],
										functionName: {
											name:
												"store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
											nodeType: "YulIdentifier",
											src: "30322:88:14",
										},
										nodeType: "YulFunctionCall",
										src: "30322:93:14",
									},
									nodeType: "YulExpressionStatement",
									src: "30322:93:14",
								},
								{
									nodeType: "YulAssignment",
									src: "30424:19:14",
									value: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "30435:3:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "30440:2:14",
												type: "",
												value: "64",
											},
										],
										functionName: {
											name: "add",
											nodeType: "YulIdentifier",
											src: "30431:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "30431:12:14",
									},
									variableNames: [
										{
											name: "end",
											nodeType: "YulIdentifier",
											src: "30424:3:14",
										},
									],
								},
							],
						},
						name:
							"abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "pos",
								nodeType: "YulTypedName",
								src: "30217:3:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "end",
								nodeType: "YulTypedName",
								src: "30225:3:14",
								type: "",
							},
						],
						src: "30083:366:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "30626:248:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "30636:26:14",
									value: {
										arguments: [
											{
												name: "headStart",
												nodeType: "YulIdentifier",
												src: "30648:9:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "30659:2:14",
												type: "",
												value: "32",
											},
										],
										functionName: {
											name: "add",
											nodeType: "YulIdentifier",
											src: "30644:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "30644:18:14",
									},
									variableNames: [
										{
											name: "tail",
											nodeType: "YulIdentifier",
											src: "30636:4:14",
										},
									],
								},
								{
									expression: {
										arguments: [
											{
												arguments: [
													{
														name: "headStart",
														nodeType: "YulIdentifier",
														src: "30683:9:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "30694:1:14",
														type: "",
														value: "0",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "30679:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "30679:17:14",
											},
											{
												arguments: [
													{
														name: "tail",
														nodeType: "YulIdentifier",
														src: "30702:4:14",
													},
													{
														name: "headStart",
														nodeType: "YulIdentifier",
														src: "30708:9:14",
													},
												],
												functionName: {
													name: "sub",
													nodeType: "YulIdentifier",
													src: "30698:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "30698:20:14",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "30672:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "30672:47:14",
									},
									nodeType: "YulExpressionStatement",
									src: "30672:47:14",
								},
								{
									nodeType: "YulAssignment",
									src: "30728:139:14",
									value: {
										arguments: [
											{
												name: "tail",
												nodeType: "YulIdentifier",
												src: "30862:4:14",
											},
										],
										functionName: {
											name:
												"abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack",
											nodeType: "YulIdentifier",
											src: "30736:124:14",
										},
										nodeType: "YulFunctionCall",
										src: "30736:131:14",
									},
									variableNames: [
										{
											name: "tail",
											nodeType: "YulIdentifier",
											src: "30728:4:14",
										},
									],
								},
							],
						},
						name:
							"abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "headStart",
								nodeType: "YulTypedName",
								src: "30606:9:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "tail",
								nodeType: "YulTypedName",
								src: "30621:4:14",
								type: "",
							},
						],
						src: "30455:419:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "30986:76:14",
							statements: [
								{
									expression: {
										arguments: [
											{
												arguments: [
													{
														name: "memPtr",
														nodeType: "YulIdentifier",
														src: "31008:6:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "31016:1:14",
														type: "",
														value: "0",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "31004:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "31004:14:14",
											},
											{
												hexValue:
													"4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
												kind: "string",
												nodeType: "YulLiteral",
												src: "31020:34:14",
												type: "",
												value: "ERC721: mint to the zero address",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "30997:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "30997:58:14",
									},
									nodeType: "YulExpressionStatement",
									src: "30997:58:14",
								},
							],
						},
						name:
							"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "memPtr",
								nodeType: "YulTypedName",
								src: "30978:6:14",
								type: "",
							},
						],
						src: "30880:182:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "31214:220:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "31224:74:14",
									value: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "31290:3:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "31295:2:14",
												type: "",
												value: "32",
											},
										],
										functionName: {
											name:
												"array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
											nodeType: "YulIdentifier",
											src: "31231:58:14",
										},
										nodeType: "YulFunctionCall",
										src: "31231:67:14",
									},
									variableNames: [
										{
											name: "pos",
											nodeType: "YulIdentifier",
											src: "31224:3:14",
										},
									],
								},
								{
									expression: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "31396:3:14",
											},
										],
										functionName: {
											name:
												"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
											nodeType: "YulIdentifier",
											src: "31307:88:14",
										},
										nodeType: "YulFunctionCall",
										src: "31307:93:14",
									},
									nodeType: "YulExpressionStatement",
									src: "31307:93:14",
								},
								{
									nodeType: "YulAssignment",
									src: "31409:19:14",
									value: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "31420:3:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "31425:2:14",
												type: "",
												value: "32",
											},
										],
										functionName: {
											name: "add",
											nodeType: "YulIdentifier",
											src: "31416:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "31416:12:14",
									},
									variableNames: [
										{
											name: "end",
											nodeType: "YulIdentifier",
											src: "31409:3:14",
										},
									],
								},
							],
						},
						name:
							"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "pos",
								nodeType: "YulTypedName",
								src: "31202:3:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "end",
								nodeType: "YulTypedName",
								src: "31210:3:14",
								type: "",
							},
						],
						src: "31068:366:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "31611:248:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "31621:26:14",
									value: {
										arguments: [
											{
												name: "headStart",
												nodeType: "YulIdentifier",
												src: "31633:9:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "31644:2:14",
												type: "",
												value: "32",
											},
										],
										functionName: {
											name: "add",
											nodeType: "YulIdentifier",
											src: "31629:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "31629:18:14",
									},
									variableNames: [
										{
											name: "tail",
											nodeType: "YulIdentifier",
											src: "31621:4:14",
										},
									],
								},
								{
									expression: {
										arguments: [
											{
												arguments: [
													{
														name: "headStart",
														nodeType: "YulIdentifier",
														src: "31668:9:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "31679:1:14",
														type: "",
														value: "0",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "31664:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "31664:17:14",
											},
											{
												arguments: [
													{
														name: "tail",
														nodeType: "YulIdentifier",
														src: "31687:4:14",
													},
													{
														name: "headStart",
														nodeType: "YulIdentifier",
														src: "31693:9:14",
													},
												],
												functionName: {
													name: "sub",
													nodeType: "YulIdentifier",
													src: "31683:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "31683:20:14",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "31657:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "31657:47:14",
									},
									nodeType: "YulExpressionStatement",
									src: "31657:47:14",
								},
								{
									nodeType: "YulAssignment",
									src: "31713:139:14",
									value: {
										arguments: [
											{
												name: "tail",
												nodeType: "YulIdentifier",
												src: "31847:4:14",
											},
										],
										functionName: {
											name:
												"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack",
											nodeType: "YulIdentifier",
											src: "31721:124:14",
										},
										nodeType: "YulFunctionCall",
										src: "31721:131:14",
									},
									variableNames: [
										{
											name: "tail",
											nodeType: "YulIdentifier",
											src: "31713:4:14",
										},
									],
								},
							],
						},
						name:
							"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "headStart",
								nodeType: "YulTypedName",
								src: "31591:9:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "tail",
								nodeType: "YulTypedName",
								src: "31606:4:14",
								type: "",
							},
						],
						src: "31440:419:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "31971:72:14",
							statements: [
								{
									expression: {
										arguments: [
											{
												arguments: [
													{
														name: "memPtr",
														nodeType: "YulIdentifier",
														src: "31993:6:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "32001:1:14",
														type: "",
														value: "0",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "31989:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "31989:14:14",
											},
											{
												hexValue:
													"4552433732313a20746f6b656e20616c7265616479206d696e746564",
												kind: "string",
												nodeType: "YulLiteral",
												src: "32005:30:14",
												type: "",
												value: "ERC721: token already minted",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "31982:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "31982:54:14",
									},
									nodeType: "YulExpressionStatement",
									src: "31982:54:14",
								},
							],
						},
						name:
							"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "memPtr",
								nodeType: "YulTypedName",
								src: "31963:6:14",
								type: "",
							},
						],
						src: "31865:178:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "32195:220:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "32205:74:14",
									value: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "32271:3:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "32276:2:14",
												type: "",
												value: "28",
											},
										],
										functionName: {
											name:
												"array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
											nodeType: "YulIdentifier",
											src: "32212:58:14",
										},
										nodeType: "YulFunctionCall",
										src: "32212:67:14",
									},
									variableNames: [
										{
											name: "pos",
											nodeType: "YulIdentifier",
											src: "32205:3:14",
										},
									],
								},
								{
									expression: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "32377:3:14",
											},
										],
										functionName: {
											name:
												"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
											nodeType: "YulIdentifier",
											src: "32288:88:14",
										},
										nodeType: "YulFunctionCall",
										src: "32288:93:14",
									},
									nodeType: "YulExpressionStatement",
									src: "32288:93:14",
								},
								{
									nodeType: "YulAssignment",
									src: "32390:19:14",
									value: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "32401:3:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "32406:2:14",
												type: "",
												value: "32",
											},
										],
										functionName: {
											name: "add",
											nodeType: "YulIdentifier",
											src: "32397:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "32397:12:14",
									},
									variableNames: [
										{
											name: "end",
											nodeType: "YulIdentifier",
											src: "32390:3:14",
										},
									],
								},
							],
						},
						name:
							"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "pos",
								nodeType: "YulTypedName",
								src: "32183:3:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "end",
								nodeType: "YulTypedName",
								src: "32191:3:14",
								type: "",
							},
						],
						src: "32049:366:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "32592:248:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "32602:26:14",
									value: {
										arguments: [
											{
												name: "headStart",
												nodeType: "YulIdentifier",
												src: "32614:9:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "32625:2:14",
												type: "",
												value: "32",
											},
										],
										functionName: {
											name: "add",
											nodeType: "YulIdentifier",
											src: "32610:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "32610:18:14",
									},
									variableNames: [
										{
											name: "tail",
											nodeType: "YulIdentifier",
											src: "32602:4:14",
										},
									],
								},
								{
									expression: {
										arguments: [
											{
												arguments: [
													{
														name: "headStart",
														nodeType: "YulIdentifier",
														src: "32649:9:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "32660:1:14",
														type: "",
														value: "0",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "32645:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "32645:17:14",
											},
											{
												arguments: [
													{
														name: "tail",
														nodeType: "YulIdentifier",
														src: "32668:4:14",
													},
													{
														name: "headStart",
														nodeType: "YulIdentifier",
														src: "32674:9:14",
													},
												],
												functionName: {
													name: "sub",
													nodeType: "YulIdentifier",
													src: "32664:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "32664:20:14",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "32638:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "32638:47:14",
									},
									nodeType: "YulExpressionStatement",
									src: "32638:47:14",
								},
								{
									nodeType: "YulAssignment",
									src: "32694:139:14",
									value: {
										arguments: [
											{
												name: "tail",
												nodeType: "YulIdentifier",
												src: "32828:4:14",
											},
										],
										functionName: {
											name:
												"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack",
											nodeType: "YulIdentifier",
											src: "32702:124:14",
										},
										nodeType: "YulFunctionCall",
										src: "32702:131:14",
									},
									variableNames: [
										{
											name: "tail",
											nodeType: "YulIdentifier",
											src: "32694:4:14",
										},
									],
								},
							],
						},
						name:
							"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "headStart",
								nodeType: "YulTypedName",
								src: "32572:9:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "tail",
								nodeType: "YulTypedName",
								src: "32587:4:14",
								type: "",
							},
						],
						src: "32421:419:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "32952:127:14",
							statements: [
								{
									expression: {
										arguments: [
											{
												arguments: [
													{
														name: "memPtr",
														nodeType: "YulIdentifier",
														src: "32974:6:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "32982:1:14",
														type: "",
														value: "0",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "32970:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "32970:14:14",
											},
											{
												hexValue:
													"45524337323155524953746f726167653a2055524920736574206f66206e6f6e",
												kind: "string",
												nodeType: "YulLiteral",
												src: "32986:34:14",
												type: "",
												value: "ERC721URIStorage: URI set of non",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "32963:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "32963:58:14",
									},
									nodeType: "YulExpressionStatement",
									src: "32963:58:14",
								},
								{
									expression: {
										arguments: [
											{
												arguments: [
													{
														name: "memPtr",
														nodeType: "YulIdentifier",
														src: "33042:6:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "33050:2:14",
														type: "",
														value: "32",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "33038:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "33038:15:14",
											},
											{
												hexValue: "6578697374656e7420746f6b656e",
												kind: "string",
												nodeType: "YulLiteral",
												src: "33055:16:14",
												type: "",
												value: "existent token",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "33031:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "33031:41:14",
									},
									nodeType: "YulExpressionStatement",
									src: "33031:41:14",
								},
							],
						},
						name:
							"store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "memPtr",
								nodeType: "YulTypedName",
								src: "32944:6:14",
								type: "",
							},
						],
						src: "32846:233:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "33231:220:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "33241:74:14",
									value: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "33307:3:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "33312:2:14",
												type: "",
												value: "46",
											},
										],
										functionName: {
											name:
												"array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
											nodeType: "YulIdentifier",
											src: "33248:58:14",
										},
										nodeType: "YulFunctionCall",
										src: "33248:67:14",
									},
									variableNames: [
										{
											name: "pos",
											nodeType: "YulIdentifier",
											src: "33241:3:14",
										},
									],
								},
								{
									expression: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "33413:3:14",
											},
										],
										functionName: {
											name:
												"store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4",
											nodeType: "YulIdentifier",
											src: "33324:88:14",
										},
										nodeType: "YulFunctionCall",
										src: "33324:93:14",
									},
									nodeType: "YulExpressionStatement",
									src: "33324:93:14",
								},
								{
									nodeType: "YulAssignment",
									src: "33426:19:14",
									value: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "33437:3:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "33442:2:14",
												type: "",
												value: "64",
											},
										],
										functionName: {
											name: "add",
											nodeType: "YulIdentifier",
											src: "33433:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "33433:12:14",
									},
									variableNames: [
										{
											name: "end",
											nodeType: "YulIdentifier",
											src: "33426:3:14",
										},
									],
								},
							],
						},
						name:
							"abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "pos",
								nodeType: "YulTypedName",
								src: "33219:3:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "end",
								nodeType: "YulTypedName",
								src: "33227:3:14",
								type: "",
							},
						],
						src: "33085:366:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "33628:248:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "33638:26:14",
									value: {
										arguments: [
											{
												name: "headStart",
												nodeType: "YulIdentifier",
												src: "33650:9:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "33661:2:14",
												type: "",
												value: "32",
											},
										],
										functionName: {
											name: "add",
											nodeType: "YulIdentifier",
											src: "33646:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "33646:18:14",
									},
									variableNames: [
										{
											name: "tail",
											nodeType: "YulIdentifier",
											src: "33638:4:14",
										},
									],
								},
								{
									expression: {
										arguments: [
											{
												arguments: [
													{
														name: "headStart",
														nodeType: "YulIdentifier",
														src: "33685:9:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "33696:1:14",
														type: "",
														value: "0",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "33681:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "33681:17:14",
											},
											{
												arguments: [
													{
														name: "tail",
														nodeType: "YulIdentifier",
														src: "33704:4:14",
													},
													{
														name: "headStart",
														nodeType: "YulIdentifier",
														src: "33710:9:14",
													},
												],
												functionName: {
													name: "sub",
													nodeType: "YulIdentifier",
													src: "33700:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "33700:20:14",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "33674:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "33674:47:14",
									},
									nodeType: "YulExpressionStatement",
									src: "33674:47:14",
								},
								{
									nodeType: "YulAssignment",
									src: "33730:139:14",
									value: {
										arguments: [
											{
												name: "tail",
												nodeType: "YulIdentifier",
												src: "33864:4:14",
											},
										],
										functionName: {
											name:
												"abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack",
											nodeType: "YulIdentifier",
											src: "33738:124:14",
										},
										nodeType: "YulFunctionCall",
										src: "33738:131:14",
									},
									variableNames: [
										{
											name: "tail",
											nodeType: "YulIdentifier",
											src: "33730:4:14",
										},
									],
								},
							],
						},
						name:
							"abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "headStart",
								nodeType: "YulTypedName",
								src: "33608:9:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "tail",
								nodeType: "YulTypedName",
								src: "33623:4:14",
								type: "",
							},
						],
						src: "33457:419:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "33940:40:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "33951:22:14",
									value: {
										arguments: [
											{
												name: "value",
												nodeType: "YulIdentifier",
												src: "33967:5:14",
											},
										],
										functionName: {
											name: "mload",
											nodeType: "YulIdentifier",
											src: "33961:5:14",
										},
										nodeType: "YulFunctionCall",
										src: "33961:12:14",
									},
									variableNames: [
										{
											name: "length",
											nodeType: "YulIdentifier",
											src: "33951:6:14",
										},
									],
								},
							],
						},
						name: "array_length_t_bytes_memory_ptr",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "value",
								nodeType: "YulTypedName",
								src: "33923:5:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "length",
								nodeType: "YulTypedName",
								src: "33933:6:14",
								type: "",
							},
						],
						src: "33882:98:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "34081:73:14",
							statements: [
								{
									expression: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "34098:3:14",
											},
											{
												name: "length",
												nodeType: "YulIdentifier",
												src: "34103:6:14",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "34091:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "34091:19:14",
									},
									nodeType: "YulExpressionStatement",
									src: "34091:19:14",
								},
								{
									nodeType: "YulAssignment",
									src: "34119:29:14",
									value: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "34138:3:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "34143:4:14",
												type: "",
												value: "0x20",
											},
										],
										functionName: {
											name: "add",
											nodeType: "YulIdentifier",
											src: "34134:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "34134:14:14",
									},
									variableNames: [
										{
											name: "updated_pos",
											nodeType: "YulIdentifier",
											src: "34119:11:14",
										},
									],
								},
							],
						},
						name: "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "pos",
								nodeType: "YulTypedName",
								src: "34053:3:14",
								type: "",
							},
							{
								name: "length",
								nodeType: "YulTypedName",
								src: "34058:6:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "updated_pos",
								nodeType: "YulTypedName",
								src: "34069:11:14",
								type: "",
							},
						],
						src: "33986:168:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "34250:270:14",
							statements: [
								{
									nodeType: "YulVariableDeclaration",
									src: "34260:52:14",
									value: {
										arguments: [
											{
												name: "value",
												nodeType: "YulIdentifier",
												src: "34306:5:14",
											},
										],
										functionName: {
											name: "array_length_t_bytes_memory_ptr",
											nodeType: "YulIdentifier",
											src: "34274:31:14",
										},
										nodeType: "YulFunctionCall",
										src: "34274:38:14",
									},
									variables: [
										{
											name: "length",
											nodeType: "YulTypedName",
											src: "34264:6:14",
											type: "",
										},
									],
								},
								{
									nodeType: "YulAssignment",
									src: "34321:77:14",
									value: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "34386:3:14",
											},
											{
												name: "length",
												nodeType: "YulIdentifier",
												src: "34391:6:14",
											},
										],
										functionName: {
											name:
												"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
											nodeType: "YulIdentifier",
											src: "34328:57:14",
										},
										nodeType: "YulFunctionCall",
										src: "34328:70:14",
									},
									variableNames: [
										{
											name: "pos",
											nodeType: "YulIdentifier",
											src: "34321:3:14",
										},
									],
								},
								{
									expression: {
										arguments: [
											{
												arguments: [
													{
														name: "value",
														nodeType: "YulIdentifier",
														src: "34433:5:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "34440:4:14",
														type: "",
														value: "0x20",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "34429:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "34429:16:14",
											},
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "34447:3:14",
											},
											{
												name: "length",
												nodeType: "YulIdentifier",
												src: "34452:6:14",
											},
										],
										functionName: {
											name: "copy_memory_to_memory",
											nodeType: "YulIdentifier",
											src: "34407:21:14",
										},
										nodeType: "YulFunctionCall",
										src: "34407:52:14",
									},
									nodeType: "YulExpressionStatement",
									src: "34407:52:14",
								},
								{
									nodeType: "YulAssignment",
									src: "34468:46:14",
									value: {
										arguments: [
											{
												name: "pos",
												nodeType: "YulIdentifier",
												src: "34479:3:14",
											},
											{
												arguments: [
													{
														name: "length",
														nodeType: "YulIdentifier",
														src: "34506:6:14",
													},
												],
												functionName: {
													name: "round_up_to_mul_of_32",
													nodeType: "YulIdentifier",
													src: "34484:21:14",
												},
												nodeType: "YulFunctionCall",
												src: "34484:29:14",
											},
										],
										functionName: {
											name: "add",
											nodeType: "YulIdentifier",
											src: "34475:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "34475:39:14",
									},
									variableNames: [
										{
											name: "end",
											nodeType: "YulIdentifier",
											src: "34468:3:14",
										},
									],
								},
							],
						},
						name:
							"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "value",
								nodeType: "YulTypedName",
								src: "34231:5:14",
								type: "",
							},
							{
								name: "pos",
								nodeType: "YulTypedName",
								src: "34238:3:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "end",
								nodeType: "YulTypedName",
								src: "34246:3:14",
								type: "",
							},
						],
						src: "34160:360:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "34726:440:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "34736:27:14",
									value: {
										arguments: [
											{
												name: "headStart",
												nodeType: "YulIdentifier",
												src: "34748:9:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "34759:3:14",
												type: "",
												value: "128",
											},
										],
										functionName: {
											name: "add",
											nodeType: "YulIdentifier",
											src: "34744:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "34744:19:14",
									},
									variableNames: [
										{
											name: "tail",
											nodeType: "YulIdentifier",
											src: "34736:4:14",
										},
									],
								},
								{
									expression: {
										arguments: [
											{
												name: "value0",
												nodeType: "YulIdentifier",
												src: "34817:6:14",
											},
											{
												arguments: [
													{
														name: "headStart",
														nodeType: "YulIdentifier",
														src: "34830:9:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "34841:1:14",
														type: "",
														value: "0",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "34826:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "34826:17:14",
											},
										],
										functionName: {
											name: "abi_encode_t_address_to_t_address_fromStack",
											nodeType: "YulIdentifier",
											src: "34773:43:14",
										},
										nodeType: "YulFunctionCall",
										src: "34773:71:14",
									},
									nodeType: "YulExpressionStatement",
									src: "34773:71:14",
								},
								{
									expression: {
										arguments: [
											{
												name: "value1",
												nodeType: "YulIdentifier",
												src: "34898:6:14",
											},
											{
												arguments: [
													{
														name: "headStart",
														nodeType: "YulIdentifier",
														src: "34911:9:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "34922:2:14",
														type: "",
														value: "32",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "34907:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "34907:18:14",
											},
										],
										functionName: {
											name: "abi_encode_t_address_to_t_address_fromStack",
											nodeType: "YulIdentifier",
											src: "34854:43:14",
										},
										nodeType: "YulFunctionCall",
										src: "34854:72:14",
									},
									nodeType: "YulExpressionStatement",
									src: "34854:72:14",
								},
								{
									expression: {
										arguments: [
											{
												name: "value2",
												nodeType: "YulIdentifier",
												src: "34980:6:14",
											},
											{
												arguments: [
													{
														name: "headStart",
														nodeType: "YulIdentifier",
														src: "34993:9:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "35004:2:14",
														type: "",
														value: "64",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "34989:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "34989:18:14",
											},
										],
										functionName: {
											name: "abi_encode_t_uint256_to_t_uint256_fromStack",
											nodeType: "YulIdentifier",
											src: "34936:43:14",
										},
										nodeType: "YulFunctionCall",
										src: "34936:72:14",
									},
									nodeType: "YulExpressionStatement",
									src: "34936:72:14",
								},
								{
									expression: {
										arguments: [
											{
												arguments: [
													{
														name: "headStart",
														nodeType: "YulIdentifier",
														src: "35029:9:14",
													},
													{
														kind: "number",
														nodeType: "YulLiteral",
														src: "35040:2:14",
														type: "",
														value: "96",
													},
												],
												functionName: {
													name: "add",
													nodeType: "YulIdentifier",
													src: "35025:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "35025:18:14",
											},
											{
												arguments: [
													{
														name: "tail",
														nodeType: "YulIdentifier",
														src: "35049:4:14",
													},
													{
														name: "headStart",
														nodeType: "YulIdentifier",
														src: "35055:9:14",
													},
												],
												functionName: {
													name: "sub",
													nodeType: "YulIdentifier",
													src: "35045:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "35045:20:14",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "35018:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "35018:48:14",
									},
									nodeType: "YulExpressionStatement",
									src: "35018:48:14",
								},
								{
									nodeType: "YulAssignment",
									src: "35075:84:14",
									value: {
										arguments: [
											{
												name: "value3",
												nodeType: "YulIdentifier",
												src: "35145:6:14",
											},
											{
												name: "tail",
												nodeType: "YulIdentifier",
												src: "35154:4:14",
											},
										],
										functionName: {
											name:
												"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
											nodeType: "YulIdentifier",
											src: "35083:61:14",
										},
										nodeType: "YulFunctionCall",
										src: "35083:76:14",
									},
									variableNames: [
										{
											name: "tail",
											nodeType: "YulIdentifier",
											src: "35075:4:14",
										},
									],
								},
							],
						},
						name:
							"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "headStart",
								nodeType: "YulTypedName",
								src: "34674:9:14",
								type: "",
							},
							{
								name: "value3",
								nodeType: "YulTypedName",
								src: "34686:6:14",
								type: "",
							},
							{
								name: "value2",
								nodeType: "YulTypedName",
								src: "34694:6:14",
								type: "",
							},
							{
								name: "value1",
								nodeType: "YulTypedName",
								src: "34702:6:14",
								type: "",
							},
							{
								name: "value0",
								nodeType: "YulTypedName",
								src: "34710:6:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "tail",
								nodeType: "YulTypedName",
								src: "34721:4:14",
								type: "",
							},
						],
						src: "34526:640:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "35234:79:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "35244:22:14",
									value: {
										arguments: [
											{
												name: "offset",
												nodeType: "YulIdentifier",
												src: "35259:6:14",
											},
										],
										functionName: {
											name: "mload",
											nodeType: "YulIdentifier",
											src: "35253:5:14",
										},
										nodeType: "YulFunctionCall",
										src: "35253:13:14",
									},
									variableNames: [
										{
											name: "value",
											nodeType: "YulIdentifier",
											src: "35244:5:14",
										},
									],
								},
								{
									expression: {
										arguments: [
											{
												name: "value",
												nodeType: "YulIdentifier",
												src: "35301:5:14",
											},
										],
										functionName: {
											name: "validator_revert_t_bytes4",
											nodeType: "YulIdentifier",
											src: "35275:25:14",
										},
										nodeType: "YulFunctionCall",
										src: "35275:32:14",
									},
									nodeType: "YulExpressionStatement",
									src: "35275:32:14",
								},
							],
						},
						name: "abi_decode_t_bytes4_fromMemory",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "offset",
								nodeType: "YulTypedName",
								src: "35212:6:14",
								type: "",
							},
							{
								name: "end",
								nodeType: "YulTypedName",
								src: "35220:3:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "value",
								nodeType: "YulTypedName",
								src: "35228:5:14",
								type: "",
							},
						],
						src: "35172:141:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "35395:273:14",
							statements: [
								{
									body: {
										nodeType: "YulBlock",
										src: "35441:83:14",
										statements: [
											{
												expression: {
													arguments: [],
													functionName: {
														name:
															"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
														nodeType: "YulIdentifier",
														src: "35443:77:14",
													},
													nodeType: "YulFunctionCall",
													src: "35443:79:14",
												},
												nodeType: "YulExpressionStatement",
												src: "35443:79:14",
											},
										],
									},
									condition: {
										arguments: [
											{
												arguments: [
													{
														name: "dataEnd",
														nodeType: "YulIdentifier",
														src: "35416:7:14",
													},
													{
														name: "headStart",
														nodeType: "YulIdentifier",
														src: "35425:9:14",
													},
												],
												functionName: {
													name: "sub",
													nodeType: "YulIdentifier",
													src: "35412:3:14",
												},
												nodeType: "YulFunctionCall",
												src: "35412:23:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "35437:2:14",
												type: "",
												value: "32",
											},
										],
										functionName: {
											name: "slt",
											nodeType: "YulIdentifier",
											src: "35408:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "35408:32:14",
									},
									nodeType: "YulIf",
									src: "35405:119:14",
								},
								{
									nodeType: "YulBlock",
									src: "35534:127:14",
									statements: [
										{
											nodeType: "YulVariableDeclaration",
											src: "35549:15:14",
											value: {
												kind: "number",
												nodeType: "YulLiteral",
												src: "35563:1:14",
												type: "",
												value: "0",
											},
											variables: [
												{
													name: "offset",
													nodeType: "YulTypedName",
													src: "35553:6:14",
													type: "",
												},
											],
										},
										{
											nodeType: "YulAssignment",
											src: "35578:73:14",
											value: {
												arguments: [
													{
														arguments: [
															{
																name: "headStart",
																nodeType: "YulIdentifier",
																src: "35623:9:14",
															},
															{
																name: "offset",
																nodeType: "YulIdentifier",
																src: "35634:6:14",
															},
														],
														functionName: {
															name: "add",
															nodeType: "YulIdentifier",
															src: "35619:3:14",
														},
														nodeType: "YulFunctionCall",
														src: "35619:22:14",
													},
													{
														name: "dataEnd",
														nodeType: "YulIdentifier",
														src: "35643:7:14",
													},
												],
												functionName: {
													name: "abi_decode_t_bytes4_fromMemory",
													nodeType: "YulIdentifier",
													src: "35588:30:14",
												},
												nodeType: "YulFunctionCall",
												src: "35588:63:14",
											},
											variableNames: [
												{
													name: "value0",
													nodeType: "YulIdentifier",
													src: "35578:6:14",
												},
											],
										},
									],
								},
							],
						},
						name: "abi_decode_tuple_t_bytes4_fromMemory",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "headStart",
								nodeType: "YulTypedName",
								src: "35365:9:14",
								type: "",
							},
							{
								name: "dataEnd",
								nodeType: "YulTypedName",
								src: "35376:7:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "value0",
								nodeType: "YulTypedName",
								src: "35388:6:14",
								type: "",
							},
						],
						src: "35319:349:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "35717:190:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "35727:33:14",
									value: {
										arguments: [
											{
												name: "value",
												nodeType: "YulIdentifier",
												src: "35754:5:14",
											},
										],
										functionName: {
											name: "cleanup_t_uint256",
											nodeType: "YulIdentifier",
											src: "35736:17:14",
										},
										nodeType: "YulFunctionCall",
										src: "35736:24:14",
									},
									variableNames: [
										{
											name: "value",
											nodeType: "YulIdentifier",
											src: "35727:5:14",
										},
									],
								},
								{
									body: {
										nodeType: "YulBlock",
										src: "35850:22:14",
										statements: [
											{
												expression: {
													arguments: [],
													functionName: {
														name: "panic_error_0x11",
														nodeType: "YulIdentifier",
														src: "35852:16:14",
													},
													nodeType: "YulFunctionCall",
													src: "35852:18:14",
												},
												nodeType: "YulExpressionStatement",
												src: "35852:18:14",
											},
										],
									},
									condition: {
										arguments: [
											{
												name: "value",
												nodeType: "YulIdentifier",
												src: "35775:5:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "35782:66:14",
												type: "",
												value:
													"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
											},
										],
										functionName: {
											name: "eq",
											nodeType: "YulIdentifier",
											src: "35772:2:14",
										},
										nodeType: "YulFunctionCall",
										src: "35772:77:14",
									},
									nodeType: "YulIf",
									src: "35769:103:14",
								},
								{
									nodeType: "YulAssignment",
									src: "35881:20:14",
									value: {
										arguments: [
											{
												name: "value",
												nodeType: "YulIdentifier",
												src: "35892:5:14",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "35899:1:14",
												type: "",
												value: "1",
											},
										],
										functionName: {
											name: "add",
											nodeType: "YulIdentifier",
											src: "35888:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "35888:13:14",
									},
									variableNames: [
										{
											name: "ret",
											nodeType: "YulIdentifier",
											src: "35881:3:14",
										},
									],
								},
							],
						},
						name: "increment_t_uint256",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "value",
								nodeType: "YulTypedName",
								src: "35703:5:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "ret",
								nodeType: "YulTypedName",
								src: "35713:3:14",
								type: "",
							},
						],
						src: "35674:233:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "35941:152:14",
							statements: [
								{
									expression: {
										arguments: [
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "35958:1:14",
												type: "",
												value: "0",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "35961:77:14",
												type: "",
												value:
													"35408467139433450592217433187231851964531694900788300625387963629091585785856",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "35951:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "35951:88:14",
									},
									nodeType: "YulExpressionStatement",
									src: "35951:88:14",
								},
								{
									expression: {
										arguments: [
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "36055:1:14",
												type: "",
												value: "4",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "36058:4:14",
												type: "",
												value: "0x12",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "36048:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "36048:15:14",
									},
									nodeType: "YulExpressionStatement",
									src: "36048:15:14",
								},
								{
									expression: {
										arguments: [
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "36079:1:14",
												type: "",
												value: "0",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "36082:4:14",
												type: "",
												value: "0x24",
											},
										],
										functionName: {
											name: "revert",
											nodeType: "YulIdentifier",
											src: "36072:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "36072:15:14",
									},
									nodeType: "YulExpressionStatement",
									src: "36072:15:14",
								},
							],
						},
						name: "panic_error_0x12",
						nodeType: "YulFunctionDefinition",
						src: "35913:180:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "36141:143:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "36151:25:14",
									value: {
										arguments: [
											{
												name: "x",
												nodeType: "YulIdentifier",
												src: "36174:1:14",
											},
										],
										functionName: {
											name: "cleanup_t_uint256",
											nodeType: "YulIdentifier",
											src: "36156:17:14",
										},
										nodeType: "YulFunctionCall",
										src: "36156:20:14",
									},
									variableNames: [
										{
											name: "x",
											nodeType: "YulIdentifier",
											src: "36151:1:14",
										},
									],
								},
								{
									nodeType: "YulAssignment",
									src: "36185:25:14",
									value: {
										arguments: [
											{
												name: "y",
												nodeType: "YulIdentifier",
												src: "36208:1:14",
											},
										],
										functionName: {
											name: "cleanup_t_uint256",
											nodeType: "YulIdentifier",
											src: "36190:17:14",
										},
										nodeType: "YulFunctionCall",
										src: "36190:20:14",
									},
									variableNames: [
										{
											name: "y",
											nodeType: "YulIdentifier",
											src: "36185:1:14",
										},
									],
								},
								{
									body: {
										nodeType: "YulBlock",
										src: "36232:22:14",
										statements: [
											{
												expression: {
													arguments: [],
													functionName: {
														name: "panic_error_0x12",
														nodeType: "YulIdentifier",
														src: "36234:16:14",
													},
													nodeType: "YulFunctionCall",
													src: "36234:18:14",
												},
												nodeType: "YulExpressionStatement",
												src: "36234:18:14",
											},
										],
									},
									condition: {
										arguments: [
											{
												name: "y",
												nodeType: "YulIdentifier",
												src: "36229:1:14",
											},
										],
										functionName: {
											name: "iszero",
											nodeType: "YulIdentifier",
											src: "36222:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "36222:9:14",
									},
									nodeType: "YulIf",
									src: "36219:35:14",
								},
								{
									nodeType: "YulAssignment",
									src: "36264:14:14",
									value: {
										arguments: [
											{
												name: "x",
												nodeType: "YulIdentifier",
												src: "36273:1:14",
											},
											{
												name: "y",
												nodeType: "YulIdentifier",
												src: "36276:1:14",
											},
										],
										functionName: {
											name: "div",
											nodeType: "YulIdentifier",
											src: "36269:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "36269:9:14",
									},
									variableNames: [
										{
											name: "r",
											nodeType: "YulIdentifier",
											src: "36264:1:14",
										},
									],
								},
							],
						},
						name: "checked_div_t_uint256",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "x",
								nodeType: "YulTypedName",
								src: "36130:1:14",
								type: "",
							},
							{
								name: "y",
								nodeType: "YulTypedName",
								src: "36133:1:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "r",
								nodeType: "YulTypedName",
								src: "36139:1:14",
								type: "",
							},
						],
						src: "36099:185:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "36324:142:14",
							statements: [
								{
									nodeType: "YulAssignment",
									src: "36334:25:14",
									value: {
										arguments: [
											{
												name: "x",
												nodeType: "YulIdentifier",
												src: "36357:1:14",
											},
										],
										functionName: {
											name: "cleanup_t_uint256",
											nodeType: "YulIdentifier",
											src: "36339:17:14",
										},
										nodeType: "YulFunctionCall",
										src: "36339:20:14",
									},
									variableNames: [
										{
											name: "x",
											nodeType: "YulIdentifier",
											src: "36334:1:14",
										},
									],
								},
								{
									nodeType: "YulAssignment",
									src: "36368:25:14",
									value: {
										arguments: [
											{
												name: "y",
												nodeType: "YulIdentifier",
												src: "36391:1:14",
											},
										],
										functionName: {
											name: "cleanup_t_uint256",
											nodeType: "YulIdentifier",
											src: "36373:17:14",
										},
										nodeType: "YulFunctionCall",
										src: "36373:20:14",
									},
									variableNames: [
										{
											name: "y",
											nodeType: "YulIdentifier",
											src: "36368:1:14",
										},
									],
								},
								{
									body: {
										nodeType: "YulBlock",
										src: "36415:22:14",
										statements: [
											{
												expression: {
													arguments: [],
													functionName: {
														name: "panic_error_0x12",
														nodeType: "YulIdentifier",
														src: "36417:16:14",
													},
													nodeType: "YulFunctionCall",
													src: "36417:18:14",
												},
												nodeType: "YulExpressionStatement",
												src: "36417:18:14",
											},
										],
									},
									condition: {
										arguments: [
											{
												name: "y",
												nodeType: "YulIdentifier",
												src: "36412:1:14",
											},
										],
										functionName: {
											name: "iszero",
											nodeType: "YulIdentifier",
											src: "36405:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "36405:9:14",
									},
									nodeType: "YulIf",
									src: "36402:35:14",
								},
								{
									nodeType: "YulAssignment",
									src: "36446:14:14",
									value: {
										arguments: [
											{
												name: "x",
												nodeType: "YulIdentifier",
												src: "36455:1:14",
											},
											{
												name: "y",
												nodeType: "YulIdentifier",
												src: "36458:1:14",
											},
										],
										functionName: {
											name: "mod",
											nodeType: "YulIdentifier",
											src: "36451:3:14",
										},
										nodeType: "YulFunctionCall",
										src: "36451:9:14",
									},
									variableNames: [
										{
											name: "r",
											nodeType: "YulIdentifier",
											src: "36446:1:14",
										},
									],
								},
							],
						},
						name: "mod_t_uint256",
						nodeType: "YulFunctionDefinition",
						parameters: [
							{
								name: "x",
								nodeType: "YulTypedName",
								src: "36313:1:14",
								type: "",
							},
							{
								name: "y",
								nodeType: "YulTypedName",
								src: "36316:1:14",
								type: "",
							},
						],
						returnVariables: [
							{
								name: "r",
								nodeType: "YulTypedName",
								src: "36322:1:14",
								type: "",
							},
						],
						src: "36290:176:14",
					},
					{
						body: {
							nodeType: "YulBlock",
							src: "36500:152:14",
							statements: [
								{
									expression: {
										arguments: [
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "36517:1:14",
												type: "",
												value: "0",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "36520:77:14",
												type: "",
												value:
													"35408467139433450592217433187231851964531694900788300625387963629091585785856",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "36510:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "36510:88:14",
									},
									nodeType: "YulExpressionStatement",
									src: "36510:88:14",
								},
								{
									expression: {
										arguments: [
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "36614:1:14",
												type: "",
												value: "4",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "36617:4:14",
												type: "",
												value: "0x32",
											},
										],
										functionName: {
											name: "mstore",
											nodeType: "YulIdentifier",
											src: "36607:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "36607:15:14",
									},
									nodeType: "YulExpressionStatement",
									src: "36607:15:14",
								},
								{
									expression: {
										arguments: [
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "36638:1:14",
												type: "",
												value: "0",
											},
											{
												kind: "number",
												nodeType: "YulLiteral",
												src: "36641:4:14",
												type: "",
												value: "0x24",
											},
										],
										functionName: {
											name: "revert",
											nodeType: "YulIdentifier",
											src: "36631:6:14",
										},
										nodeType: "YulFunctionCall",
										src: "36631:15:14",
									},
									nodeType: "YulExpressionStatement",
									src: "36631:15:14",
								},
							],
						},
						name: "panic_error_0x32",
						nodeType: "YulFunctionDefinition",
						src: "36472:180:14",
					},
				],
			},
			contents:
				'{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d(memPtr) {\n\n        mstore(add(memPtr, 0), "ERC721: approved query for nonex")\n\n        mstore(add(memPtr, 32), "istent token")\n\n    }\n\n    function abi_encode_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), "ERC721: approval to current owne")\n\n        mstore(add(memPtr, 32), "r")\n\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d(memPtr) {\n\n        mstore(add(memPtr, 0), "ERC721: approve caller is not ow")\n\n        mstore(add(memPtr, 32), "ner nor approved for all")\n\n    }\n\n    function abi_encode_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 56)\n        store_literal_in_memory_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2(memPtr) {\n\n        mstore(add(memPtr, 0), "ERC721: transfer caller is not o")\n\n        mstore(add(memPtr, 32), "wner nor approved")\n\n    }\n\n    function abi_encode_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 49)\n        store_literal_in_memory_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397(memPtr) {\n\n        mstore(add(memPtr, 0), "ERC721: owner query for nonexist")\n\n        mstore(add(memPtr, 32), "ent token")\n\n    }\n\n    function abi_encode_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba(memPtr) {\n\n        mstore(add(memPtr, 0), "ERC721: balance query for the ze")\n\n        mstore(add(memPtr, 32), "ro address")\n\n    }\n\n    function abi_encode_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), "Ownable: caller is not the owner")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), "ERC721: approve to caller")\n\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a(memPtr) {\n\n        mstore(add(memPtr, 0), "ERC721URIStorage: URI query for ")\n\n        mstore(add(memPtr, 32), "nonexistent token")\n\n    }\n\n    function abi_encode_t_stringliteral_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 49)\n        store_literal_in_memory_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_25e9e384fb9ee74dfba124aec4131531c53b8e94403e24af723667c7636dbc7f(memPtr) {\n\n        mstore(add(memPtr, 0), "Not whitelisted or allowance too")\n\n        mstore(add(memPtr, 32), " low.")\n\n    }\n\n    function abi_encode_t_stringliteral_25e9e384fb9ee74dfba124aec4131531c53b8e94403e24af723667c7636dbc7f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_25e9e384fb9ee74dfba124aec4131531c53b8e94403e24af723667c7636dbc7f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_25e9e384fb9ee74dfba124aec4131531c53b8e94403e24af723667c7636dbc7f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_25e9e384fb9ee74dfba124aec4131531c53b8e94403e24af723667c7636dbc7f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), "Ownable: new owner is the zero a")\n\n        mstore(add(memPtr, 32), "ddress")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c(memPtr) {\n\n        mstore(add(memPtr, 0), "ERC721: operator query for nonex")\n\n        mstore(add(memPtr, 32), "istent token")\n\n    }\n\n    function abi_encode_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950(memPtr) {\n\n        mstore(add(memPtr, 0), "ERC721: transfer of token that i")\n\n        mstore(add(memPtr, 32), "s not own")\n\n    }\n\n    function abi_encode_t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), "ERC721: transfer to the zero add")\n\n        mstore(add(memPtr, 32), "ress")\n\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), "ERC721: transfer to non ERC721Re")\n\n        mstore(add(memPtr, 32), "ceiver implementer")\n\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb(memPtr) {\n\n        mstore(add(memPtr, 0), "ERC721Metadata: URI query for no")\n\n        mstore(add(memPtr, 32), "nexistent token")\n\n    }\n\n    function abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(memPtr) {\n\n        mstore(add(memPtr, 0), "ERC721: mint to the zero address")\n\n    }\n\n    function abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(memPtr) {\n\n        mstore(add(memPtr, 0), "ERC721: token already minted")\n\n    }\n\n    function abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4(memPtr) {\n\n        mstore(add(memPtr, 0), "ERC721URIStorage: URI set of non")\n\n        mstore(add(memPtr, 32), "existent token")\n\n    }\n\n    function abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n}\n',
			id: 14,
			language: "Yul",
			name: "#utility.yul",
		},
	],
	sourceMap:
		"301:932:13:-:0;;;547:43;;;;;;;;;;1316:113:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1390:5;1382;:13;;;;;;;;;;;;:::i;:::-;;1415:7;1405;:17;;;;;;;;;;;;:::i;:::-;;1316:113;;867:23:0;877:12;:10;;;:12;;:::i;:::-;867:9;;;:23;;:::i;:::-;301:932:13;;587:96:7;640:7;666:10;659:17;;587:96;:::o;2041:169:0:-;2096:16;2115:6;;;;;;;;;;;2096:25;;2140:8;2131:6;;:17;;;;;;;;;;;;;;;;;;2194:8;2163:40;;2184:8;2163:40;;;;;;;;;;;;2086:124;2041:169;:::o;301:932:13:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:180:14:-;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;193:320;237:6;274:1;268:4;264:12;254:22;;321:1;315:4;311:12;342:18;332:81;;398:4;390:6;386:17;376:27;;332:81;460:2;452:6;449:14;429:18;426:38;423:84;;;479:18;;:::i;:::-;423:84;244:269;193:320;;;:::o;301:932:13:-;;;;;;;",
	deployedSourceMap:
		"301:932:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1496:300:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2414:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3925:217;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3463:401;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4789:330;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5185:179;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2117:235;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1855:205;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1605:92:0;;;:::i;:::-;;973:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2576:102:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1111:120:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4209:290:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5430:320;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;387:663:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;833:272:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4565:162:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1846:189:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1496:300:1;1598:4;1648:25;1633:40;;;:11;:40;;;;:104;;;;1704:33;1689:48;;;:11;:48;;;;1633:104;:156;;;;1753:36;1777:11;1753:23;:36::i;:::-;1633:156;1614:175;;1496:300;;;:::o;2414:98::-;2468:13;2500:5;2493:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2414:98;:::o;3925:217::-;4001:7;4028:16;4036:7;4028;:16::i;:::-;4020:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;4111:15;:24;4127:7;4111:24;;;;;;;;;;;;;;;;;;;;;4104:31;;3925:217;;;:::o;3463:401::-;3543:13;3559:23;3574:7;3559:14;:23::i;:::-;3543:39;;3606:5;3600:11;;:2;:11;;;;3592:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3697:5;3681:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3706:37;3723:5;3730:12;:10;:12::i;:::-;3706:16;:37::i;:::-;3681:62;3660:165;;;;;;;;;;;;:::i;:::-;;;;;;;;;3836:21;3845:2;3849:7;3836:8;:21::i;:::-;3533:331;3463:401;;:::o;4789:330::-;4978:41;4997:12;:10;:12::i;:::-;5011:7;4978:18;:41::i;:::-;4970:103;;;;;;;;;;;;:::i;:::-;;;;;;;;;5084:28;5094:4;5100:2;5104:7;5084:9;:28::i;:::-;4789:330;;;:::o;5185:179::-;5318:39;5335:4;5341:2;5345:7;5318:39;;;;;;;;;;;;:16;:39::i;:::-;5185:179;;;:::o;2117:235::-;2189:7;2208:13;2224:7;:16;2232:7;2224:16;;;;;;;;;;;;;;;;;;;;;2208:32;;2275:1;2258:19;;:5;:19;;;;2250:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2340:5;2333:12;;;2117:235;;;:::o;1855:205::-;1927:7;1971:1;1954:19;;:5;:19;;;;1946:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;2037:9;:16;2047:5;2037:16;;;;;;;;;;;;;;;;2030:23;;1855:205;;;:::o;1605:92:0:-;1196:12;:10;:12::i;:::-;1185:23;;:7;:5;:7::i;:::-;:23;;;1177:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;973:85::-;1019:7;1045:6;;;;;;;;;;;1038:13;;973:85;:::o;2576:102:1:-;2632:13;2664:7;2657:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2576:102;:::o;1111:120:13:-;1196:12:0;:10;:12::i;:::-;1185:23;;:7;:5;:7::i;:::-;:23;;;1177:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1216:8:13::1;1195:10;:18;1206:6;1195:18;;;;;;;;;;;;;;;:29;;;;1111:120:::0;;:::o;4209:290:1:-;4323:12;:10;:12::i;:::-;4311:24;;:8;:24;;;;4303:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;4421:8;4376:18;:32;4395:12;:10;:12::i;:::-;4376:32;;;;;;;;;;;;;;;:42;4409:8;4376:42;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;4473:8;4444:48;;4459:12;:10;:12::i;:::-;4444:48;;;4483:8;4444:48;;;;;;:::i;:::-;;;;;;;;4209:290;;:::o;5430:320::-;5599:41;5618:12;:10;:12::i;:::-;5632:7;5599:18;:41::i;:::-;5591:103;;;;;;;;;;;;:::i;:::-;;;;;;;;;5704:39;5718:4;5724:2;5728:7;5737:5;5704:13;:39::i;:::-;5430:320;;;;:::o;387:663:4:-;460:13;493:16;501:7;493;:16::i;:::-;485:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;574:23;600:10;:19;611:7;600:19;;;;;;;;;;;574:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;629:18;650:10;:8;:10::i;:::-;629:31;;755:1;739:4;733:18;:23;729:70;;;779:9;772:16;;;;;;729:70;927:1;907:9;901:23;:27;897:106;;;975:4;981:9;958:33;;;;;;;;;:::i;:::-;;;;;;;;;;;;;944:48;;;;;;897:106;1020:23;1035:7;1020:14;:23::i;:::-;1013:30;;;;387:663;;;;:::o;833:272:13:-;724:10;:22;735:10;724:22;;;;;;;;;;;;;;;;696:13;:25;710:10;696:25;;;;;;;;;;;;;;;;:50;675:134;;;;;;;;;;;;:::i;:::-;;;;;;;;;915:21:::1;:9;:19;:21::i;:::-;947:17;967:19;:9;:17;:19::i;:::-;947:39;;996:23;1002:5;1009:9;996:5;:23::i;:::-;1029:33;1042:9;1053:8;1029:12;:33::i;:::-;1097:1;1073:13;:20;1087:5;1073:20;;;;;;;;;;;;;;;;:25;;;;;;;:::i;:::-;;;;;;;;905:200;833:272:::0;;:::o;4565:162:1:-;4662:4;4685:18;:25;4704:5;4685:25;;;;;;;;;;;;;;;:35;4711:8;4685:35;;;;;;;;;;;;;;;;;;;;;;;;;4678:42;;4565:162;;;;:::o;1846:189:0:-;1196:12;:10;:12::i;:::-;1185:23;;:7;:5;:7::i;:::-;:23;;;1177:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1954:1:::1;1934:22;;:8;:22;;;;1926:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2009:19;2019:8;2009:9;:19::i;:::-;1846:189:::0;:::o;763:155:10:-;848:4;886:25;871:40;;;:11;:40;;;;864:47;;763:155;;;:::o;7222:125:1:-;7287:4;7338:1;7310:30;;:7;:16;7318:7;7310:16;;;;;;;;;;;;;;;;;;;;;:30;;;;7303:37;;7222:125;;;:::o;587:96:7:-;640:7;666:10;659:17;;587:96;:::o;11073:171:1:-;11174:2;11147:15;:24;11163:7;11147:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;11229:7;11225:2;11191:46;;11200:23;11215:7;11200:14;:23::i;:::-;11191:46;;;;;;;;;;;;11073:171;;:::o;7505:344::-;7598:4;7622:16;7630:7;7622;:16::i;:::-;7614:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;7697:13;7713:23;7728:7;7713:14;:23::i;:::-;7697:39;;7765:5;7754:16;;:7;:16;;;:51;;;;7798:7;7774:31;;:20;7786:7;7774:11;:20::i;:::-;:31;;;7754:51;:87;;;;7809:32;7826:5;7833:7;7809:16;:32::i;:::-;7754:87;7746:96;;;7505:344;;;;:::o;10402:560::-;10556:4;10529:31;;:23;10544:7;10529:14;:23::i;:::-;:31;;;10521:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;10638:1;10624:16;;:2;:16;;;;10616:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;10692:39;10713:4;10719:2;10723:7;10692:20;:39::i;:::-;10793:29;10810:1;10814:7;10793:8;:29::i;:::-;10852:1;10833:9;:15;10843:4;10833:15;;;;;;;;;;;;;;;;:20;;;;;;;:::i;:::-;;;;;;;;10880:1;10863:9;:13;10873:2;10863:13;;;;;;;;;;;;;;;;:18;;;;;;;:::i;:::-;;;;;;;;10910:2;10891:7;:16;10899:7;10891:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;10947:7;10943:2;10928:27;;10937:4;10928:27;;;;;;;;;;;;10402:560;;;:::o;2041:169:0:-;2096:16;2115:6;;;;;;;;;;;2096:25;;2140:8;2131:6;;:17;;;;;;;;;;;;;;;;;;2194:8;2163:40;;2184:8;2163:40;;;;;;;;;;;;2086:124;2041:169;:::o;6612:307:1:-;6763:28;6773:4;6779:2;6783:7;6763:9;:28::i;:::-;6809:48;6832:4;6838:2;6842:7;6851:5;6809:22;:48::i;:::-;6801:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;6612:307;;;;:::o;3314:92::-;3365:13;3390:9;;;;;;;;;;;;;;3314:92;:::o;2744:329::-;2817:13;2850:16;2858:7;2850;:16::i;:::-;2842:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;2929:21;2953:10;:8;:10::i;:::-;2929:34;;3004:1;2986:7;2980:21;:25;:86;;;;;;;;;;;;;;;;;3032:7;3041:18;:7;:16;:18::i;:::-;3015:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2980:86;2973:93;;;2744:329;;;:::o;891:123:8:-;996:1;978:7;:14;;;:19;;;;;;;;;;;891:123;:::o;773:112::-;838:7;864;:14;;;857:21;;773:112;;;:::o;9141:372:1:-;9234:1;9220:16;;:2;:16;;;;9212:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;9292:16;9300:7;9292;:16::i;:::-;9291:17;9283:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;9352:45;9381:1;9385:2;9389:7;9352:20;:45::i;:::-;9425:1;9408:9;:13;9418:2;9408:13;;;;;;;;;;;;;;;;:18;;;;;;;:::i;:::-;;;;;;;;9455:2;9436:7;:16;9444:7;9436:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9498:7;9494:2;9473:33;;9490:1;9473:33;;;;;;;;;;;;9141:372;;:::o;1197:214:4:-;1296:16;1304:7;1296;:16::i;:::-;1288:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;1395:9;1373:10;:19;1384:7;1373:19;;;;;;;;;;;:31;;;;;;;;;;;;:::i;:::-;;1197:214;;:::o;13131:122:1:-;;;;:::o;11797:778::-;11947:4;11967:15;:2;:13;;;:15::i;:::-;11963:606;;;12018:2;12002:36;;;12039:12;:10;:12::i;:::-;12053:4;12059:7;12068:5;12002:72;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;11998:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12258:1;12241:6;:13;:18;12237:266;;;12283:60;;;;;;;;;;:::i;:::-;;;;;;;;12237:266;12455:6;12449:13;12440:6;12436:2;12432:15;12425:38;11998:519;12134:41;;;12124:51;;;:6;:51;;;;12117:58;;;;;11963:606;12554:4;12547:11;;11797:778;;;;;;;:::o;275:703:9:-;331:13;557:1;548:5;:10;544:51;;;574:10;;;;;;;;;;;;;;;;;;;;;544:51;604:12;619:5;604:20;;634:14;658:75;673:1;665:4;:9;658:75;;690:8;;;;;:::i;:::-;;;;720:2;712:10;;;;;:::i;:::-;;;658:75;;;742:19;774:6;764:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;742:39;;791:150;807:1;798:5;:10;791:150;;834:1;824:11;;;;;:::i;:::-;;;900:2;892:5;:10;;;;:::i;:::-;879:2;:24;;;;:::i;:::-;866:39;;849:6;856;849:14;;;;;;;;:::i;:::-;;;;;:56;;;;;;;;;;;928:2;919:11;;;;;:::i;:::-;;;791:150;;;964:6;950:21;;;;;275:703;;;;:::o;718:377:6:-;778:4;981:12;1046:7;1034:20;1026:28;;1087:1;1080:4;:8;1073:15;;;718:377;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:14:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:307::-;1866:1;1876:113;1890:6;1887:1;1884:13;1876:113;;;1975:1;1970:3;1966:11;1960:18;1956:1;1951:3;1947:11;1940:39;1912:2;1909:1;1905:10;1900:15;;1876:113;;;2007:6;2004:1;2001:13;1998:101;;;2087:1;2078:6;2073:3;2069:16;2062:27;1998:101;1847:258;1798:307;;;:::o;2111:102::-;2152:6;2203:2;2199:7;2194:2;2187:5;2183:14;2179:28;2169:38;;2111:102;;;:::o;2219:364::-;2307:3;2335:39;2368:5;2335:39;:::i;:::-;2390:71;2454:6;2449:3;2390:71;:::i;:::-;2383:78;;2470:52;2515:6;2510:3;2503:4;2496:5;2492:16;2470:52;:::i;:::-;2547:29;2569:6;2547:29;:::i;:::-;2542:3;2538:39;2531:46;;2311:272;2219:364;;;;:::o;2589:313::-;2702:4;2740:2;2729:9;2725:18;2717:26;;2789:9;2783:4;2779:20;2775:1;2764:9;2760:17;2753:47;2817:78;2890:4;2881:6;2817:78;:::i;:::-;2809:86;;2589:313;;;;:::o;2908:77::-;2945:7;2974:5;2963:16;;2908:77;;;:::o;2991:122::-;3064:24;3082:5;3064:24;:::i;:::-;3057:5;3054:35;3044:63;;3103:1;3100;3093:12;3044:63;2991:122;:::o;3119:139::-;3165:5;3203:6;3190:20;3181:29;;3219:33;3246:5;3219:33;:::i;:::-;3119:139;;;;:::o;3264:329::-;3323:6;3372:2;3360:9;3351:7;3347:23;3343:32;3340:119;;;3378:79;;:::i;:::-;3340:119;3498:1;3523:53;3568:7;3559:6;3548:9;3544:22;3523:53;:::i;:::-;3513:63;;3469:117;3264:329;;;;:::o;3599:126::-;3636:7;3676:42;3669:5;3665:54;3654:65;;3599:126;;;:::o;3731:96::-;3768:7;3797:24;3815:5;3797:24;:::i;:::-;3786:35;;3731:96;;;:::o;3833:118::-;3920:24;3938:5;3920:24;:::i;:::-;3915:3;3908:37;3833:118;;:::o;3957:222::-;4050:4;4088:2;4077:9;4073:18;4065:26;;4101:71;4169:1;4158:9;4154:17;4145:6;4101:71;:::i;:::-;3957:222;;;;:::o;4185:122::-;4258:24;4276:5;4258:24;:::i;:::-;4251:5;4248:35;4238:63;;4297:1;4294;4287:12;4238:63;4185:122;:::o;4313:139::-;4359:5;4397:6;4384:20;4375:29;;4413:33;4440:5;4413:33;:::i;:::-;4313:139;;;;:::o;4458:474::-;4526:6;4534;4583:2;4571:9;4562:7;4558:23;4554:32;4551:119;;;4589:79;;:::i;:::-;4551:119;4709:1;4734:53;4779:7;4770:6;4759:9;4755:22;4734:53;:::i;:::-;4724:63;;4680:117;4836:2;4862:53;4907:7;4898:6;4887:9;4883:22;4862:53;:::i;:::-;4852:63;;4807:118;4458:474;;;;;:::o;4938:619::-;5015:6;5023;5031;5080:2;5068:9;5059:7;5055:23;5051:32;5048:119;;;5086:79;;:::i;:::-;5048:119;5206:1;5231:53;5276:7;5267:6;5256:9;5252:22;5231:53;:::i;:::-;5221:63;;5177:117;5333:2;5359:53;5404:7;5395:6;5384:9;5380:22;5359:53;:::i;:::-;5349:63;;5304:118;5461:2;5487:53;5532:7;5523:6;5512:9;5508:22;5487:53;:::i;:::-;5477:63;;5432:118;4938:619;;;;;:::o;5563:329::-;5622:6;5671:2;5659:9;5650:7;5646:23;5642:32;5639:119;;;5677:79;;:::i;:::-;5639:119;5797:1;5822:53;5867:7;5858:6;5847:9;5843:22;5822:53;:::i;:::-;5812:63;;5768:117;5563:329;;;;:::o;5898:118::-;5985:24;6003:5;5985:24;:::i;:::-;5980:3;5973:37;5898:118;;:::o;6022:222::-;6115:4;6153:2;6142:9;6138:18;6130:26;;6166:71;6234:1;6223:9;6219:17;6210:6;6166:71;:::i;:::-;6022:222;;;;:::o;6250:116::-;6320:21;6335:5;6320:21;:::i;:::-;6313:5;6310:32;6300:60;;6356:1;6353;6346:12;6300:60;6250:116;:::o;6372:133::-;6415:5;6453:6;6440:20;6431:29;;6469:30;6493:5;6469:30;:::i;:::-;6372:133;;;;:::o;6511:468::-;6576:6;6584;6633:2;6621:9;6612:7;6608:23;6604:32;6601:119;;;6639:79;;:::i;:::-;6601:119;6759:1;6784:53;6829:7;6820:6;6809:9;6805:22;6784:53;:::i;:::-;6774:63;;6730:117;6886:2;6912:50;6954:7;6945:6;6934:9;6930:22;6912:50;:::i;:::-;6902:60;;6857:115;6511:468;;;;;:::o;6985:117::-;7094:1;7091;7084:12;7108:117;7217:1;7214;7207:12;7231:180;7279:77;7276:1;7269:88;7376:4;7373:1;7366:15;7400:4;7397:1;7390:15;7417:281;7500:27;7522:4;7500:27;:::i;:::-;7492:6;7488:40;7630:6;7618:10;7615:22;7594:18;7582:10;7579:34;7576:62;7573:88;;;7641:18;;:::i;:::-;7573:88;7681:10;7677:2;7670:22;7460:238;7417:281;;:::o;7704:129::-;7738:6;7765:20;;:::i;:::-;7755:30;;7794:33;7822:4;7814:6;7794:33;:::i;:::-;7704:129;;;:::o;7839:307::-;7900:4;7990:18;7982:6;7979:30;7976:56;;;8012:18;;:::i;:::-;7976:56;8050:29;8072:6;8050:29;:::i;:::-;8042:37;;8134:4;8128;8124:15;8116:23;;7839:307;;;:::o;8152:154::-;8236:6;8231:3;8226;8213:30;8298:1;8289:6;8284:3;8280:16;8273:27;8152:154;;;:::o;8312:410::-;8389:5;8414:65;8430:48;8471:6;8430:48;:::i;:::-;8414:65;:::i;:::-;8405:74;;8502:6;8495:5;8488:21;8540:4;8533:5;8529:16;8578:3;8569:6;8564:3;8560:16;8557:25;8554:112;;;8585:79;;:::i;:::-;8554:112;8675:41;8709:6;8704:3;8699;8675:41;:::i;:::-;8395:327;8312:410;;;;;:::o;8741:338::-;8796:5;8845:3;8838:4;8830:6;8826:17;8822:27;8812:122;;8853:79;;:::i;:::-;8812:122;8970:6;8957:20;8995:78;9069:3;9061:6;9054:4;9046:6;9042:17;8995:78;:::i;:::-;8986:87;;8802:277;8741:338;;;;:::o;9085:943::-;9180:6;9188;9196;9204;9253:3;9241:9;9232:7;9228:23;9224:33;9221:120;;;9260:79;;:::i;:::-;9221:120;9380:1;9405:53;9450:7;9441:6;9430:9;9426:22;9405:53;:::i;:::-;9395:63;;9351:117;9507:2;9533:53;9578:7;9569:6;9558:9;9554:22;9533:53;:::i;:::-;9523:63;;9478:118;9635:2;9661:53;9706:7;9697:6;9686:9;9682:22;9661:53;:::i;:::-;9651:63;;9606:118;9791:2;9780:9;9776:18;9763:32;9822:18;9814:6;9811:30;9808:117;;;9844:79;;:::i;:::-;9808:117;9949:62;10003:7;9994:6;9983:9;9979:22;9949:62;:::i;:::-;9939:72;;9734:287;9085:943;;;;;;;:::o;10034:308::-;10096:4;10186:18;10178:6;10175:30;10172:56;;;10208:18;;:::i;:::-;10172:56;10246:29;10268:6;10246:29;:::i;:::-;10238:37;;10330:4;10324;10320:15;10312:23;;10034:308;;;:::o;10348:412::-;10426:5;10451:66;10467:49;10509:6;10467:49;:::i;:::-;10451:66;:::i;:::-;10442:75;;10540:6;10533:5;10526:21;10578:4;10571:5;10567:16;10616:3;10607:6;10602:3;10598:16;10595:25;10592:112;;;10623:79;;:::i;:::-;10592:112;10713:41;10747:6;10742:3;10737;10713:41;:::i;:::-;10432:328;10348:412;;;;;:::o;10780:340::-;10836:5;10885:3;10878:4;10870:6;10866:17;10862:27;10852:122;;10893:79;;:::i;:::-;10852:122;11010:6;10997:20;11035:79;11110:3;11102:6;11095:4;11087:6;11083:17;11035:79;:::i;:::-;11026:88;;10842:278;10780:340;;;;:::o;11126:654::-;11204:6;11212;11261:2;11249:9;11240:7;11236:23;11232:32;11229:119;;;11267:79;;:::i;:::-;11229:119;11387:1;11412:53;11457:7;11448:6;11437:9;11433:22;11412:53;:::i;:::-;11402:63;;11358:117;11542:2;11531:9;11527:18;11514:32;11573:18;11565:6;11562:30;11559:117;;;11595:79;;:::i;:::-;11559:117;11700:63;11755:7;11746:6;11735:9;11731:22;11700:63;:::i;:::-;11690:73;;11485:288;11126:654;;;;;:::o;11786:474::-;11854:6;11862;11911:2;11899:9;11890:7;11886:23;11882:32;11879:119;;;11917:79;;:::i;:::-;11879:119;12037:1;12062:53;12107:7;12098:6;12087:9;12083:22;12062:53;:::i;:::-;12052:63;;12008:117;12164:2;12190:53;12235:7;12226:6;12215:9;12211:22;12190:53;:::i;:::-;12180:63;;12135:118;11786:474;;;;;:::o;12266:180::-;12314:77;12311:1;12304:88;12411:4;12408:1;12401:15;12435:4;12432:1;12425:15;12452:320;12496:6;12533:1;12527:4;12523:12;12513:22;;12580:1;12574:4;12570:12;12601:18;12591:81;;12657:4;12649:6;12645:17;12635:27;;12591:81;12719:2;12711:6;12708:14;12688:18;12685:38;12682:84;;;12738:18;;:::i;:::-;12682:84;12503:269;12452:320;;;:::o;12778:231::-;12918:34;12914:1;12906:6;12902:14;12895:58;12987:14;12982:2;12974:6;12970:15;12963:39;12778:231;:::o;13015:366::-;13157:3;13178:67;13242:2;13237:3;13178:67;:::i;:::-;13171:74;;13254:93;13343:3;13254:93;:::i;:::-;13372:2;13367:3;13363:12;13356:19;;13015:366;;;:::o;13387:419::-;13553:4;13591:2;13580:9;13576:18;13568:26;;13640:9;13634:4;13630:20;13626:1;13615:9;13611:17;13604:47;13668:131;13794:4;13668:131;:::i;:::-;13660:139;;13387:419;;;:::o;13812:220::-;13952:34;13948:1;13940:6;13936:14;13929:58;14021:3;14016:2;14008:6;14004:15;13997:28;13812:220;:::o;14038:366::-;14180:3;14201:67;14265:2;14260:3;14201:67;:::i;:::-;14194:74;;14277:93;14366:3;14277:93;:::i;:::-;14395:2;14390:3;14386:12;14379:19;;14038:366;;;:::o;14410:419::-;14576:4;14614:2;14603:9;14599:18;14591:26;;14663:9;14657:4;14653:20;14649:1;14638:9;14634:17;14627:47;14691:131;14817:4;14691:131;:::i;:::-;14683:139;;14410:419;;;:::o;14835:243::-;14975:34;14971:1;14963:6;14959:14;14952:58;15044:26;15039:2;15031:6;15027:15;15020:51;14835:243;:::o;15084:366::-;15226:3;15247:67;15311:2;15306:3;15247:67;:::i;:::-;15240:74;;15323:93;15412:3;15323:93;:::i;:::-;15441:2;15436:3;15432:12;15425:19;;15084:366;;;:::o;15456:419::-;15622:4;15660:2;15649:9;15645:18;15637:26;;15709:9;15703:4;15699:20;15695:1;15684:9;15680:17;15673:47;15737:131;15863:4;15737:131;:::i;:::-;15729:139;;15456:419;;;:::o;15881:236::-;16021:34;16017:1;16009:6;16005:14;15998:58;16090:19;16085:2;16077:6;16073:15;16066:44;15881:236;:::o;16123:366::-;16265:3;16286:67;16350:2;16345:3;16286:67;:::i;:::-;16279:74;;16362:93;16451:3;16362:93;:::i;:::-;16480:2;16475:3;16471:12;16464:19;;16123:366;;;:::o;16495:419::-;16661:4;16699:2;16688:9;16684:18;16676:26;;16748:9;16742:4;16738:20;16734:1;16723:9;16719:17;16712:47;16776:131;16902:4;16776:131;:::i;:::-;16768:139;;16495:419;;;:::o;16920:228::-;17060:34;17056:1;17048:6;17044:14;17037:58;17129:11;17124:2;17116:6;17112:15;17105:36;16920:228;:::o;17154:366::-;17296:3;17317:67;17381:2;17376:3;17317:67;:::i;:::-;17310:74;;17393:93;17482:3;17393:93;:::i;:::-;17511:2;17506:3;17502:12;17495:19;;17154:366;;;:::o;17526:419::-;17692:4;17730:2;17719:9;17715:18;17707:26;;17779:9;17773:4;17769:20;17765:1;17754:9;17750:17;17743:47;17807:131;17933:4;17807:131;:::i;:::-;17799:139;;17526:419;;;:::o;17951:229::-;18091:34;18087:1;18079:6;18075:14;18068:58;18160:12;18155:2;18147:6;18143:15;18136:37;17951:229;:::o;18186:366::-;18328:3;18349:67;18413:2;18408:3;18349:67;:::i;:::-;18342:74;;18425:93;18514:3;18425:93;:::i;:::-;18543:2;18538:3;18534:12;18527:19;;18186:366;;;:::o;18558:419::-;18724:4;18762:2;18751:9;18747:18;18739:26;;18811:9;18805:4;18801:20;18797:1;18786:9;18782:17;18775:47;18839:131;18965:4;18839:131;:::i;:::-;18831:139;;18558:419;;;:::o;18983:182::-;19123:34;19119:1;19111:6;19107:14;19100:58;18983:182;:::o;19171:366::-;19313:3;19334:67;19398:2;19393:3;19334:67;:::i;:::-;19327:74;;19410:93;19499:3;19410:93;:::i;:::-;19528:2;19523:3;19519:12;19512:19;;19171:366;;;:::o;19543:419::-;19709:4;19747:2;19736:9;19732:18;19724:26;;19796:9;19790:4;19786:20;19782:1;19771:9;19767:17;19760:47;19824:131;19950:4;19824:131;:::i;:::-;19816:139;;19543:419;;;:::o;19968:175::-;20108:27;20104:1;20096:6;20092:14;20085:51;19968:175;:::o;20149:366::-;20291:3;20312:67;20376:2;20371:3;20312:67;:::i;:::-;20305:74;;20388:93;20477:3;20388:93;:::i;:::-;20506:2;20501:3;20497:12;20490:19;;20149:366;;;:::o;20521:419::-;20687:4;20725:2;20714:9;20710:18;20702:26;;20774:9;20768:4;20764:20;20760:1;20749:9;20745:17;20738:47;20802:131;20928:4;20802:131;:::i;:::-;20794:139;;20521:419;;;:::o;20946:236::-;21086:34;21082:1;21074:6;21070:14;21063:58;21155:19;21150:2;21142:6;21138:15;21131:44;20946:236;:::o;21188:366::-;21330:3;21351:67;21415:2;21410:3;21351:67;:::i;:::-;21344:74;;21427:93;21516:3;21427:93;:::i;:::-;21545:2;21540:3;21536:12;21529:19;;21188:366;;;:::o;21560:419::-;21726:4;21764:2;21753:9;21749:18;21741:26;;21813:9;21807:4;21803:20;21799:1;21788:9;21784:17;21777:47;21841:131;21967:4;21841:131;:::i;:::-;21833:139;;21560:419;;;:::o;21985:148::-;22087:11;22124:3;22109:18;;21985:148;;;;:::o;22139:377::-;22245:3;22273:39;22306:5;22273:39;:::i;:::-;22328:89;22410:6;22405:3;22328:89;:::i;:::-;22321:96;;22426:52;22471:6;22466:3;22459:4;22452:5;22448:16;22426:52;:::i;:::-;22503:6;22498:3;22494:16;22487:23;;22249:267;22139:377;;;;:::o;22522:435::-;22702:3;22724:95;22815:3;22806:6;22724:95;:::i;:::-;22717:102;;22836:95;22927:3;22918:6;22836:95;:::i;:::-;22829:102;;22948:3;22941:10;;22522:435;;;;;:::o;22963:224::-;23103:34;23099:1;23091:6;23087:14;23080:58;23172:7;23167:2;23159:6;23155:15;23148:32;22963:224;:::o;23193:366::-;23335:3;23356:67;23420:2;23415:3;23356:67;:::i;:::-;23349:74;;23432:93;23521:3;23432:93;:::i;:::-;23550:2;23545:3;23541:12;23534:19;;23193:366;;;:::o;23565:419::-;23731:4;23769:2;23758:9;23754:18;23746:26;;23818:9;23812:4;23808:20;23804:1;23793:9;23789:17;23782:47;23846:131;23972:4;23846:131;:::i;:::-;23838:139;;23565:419;;;:::o;23990:180::-;24038:77;24035:1;24028:88;24135:4;24132:1;24125:15;24159:4;24156:1;24149:15;24176:305;24216:3;24235:20;24253:1;24235:20;:::i;:::-;24230:25;;24269:20;24287:1;24269:20;:::i;:::-;24264:25;;24423:1;24355:66;24351:74;24348:1;24345:81;24342:107;;;24429:18;;:::i;:::-;24342:107;24473:1;24470;24466:9;24459:16;;24176:305;;;;:::o;24487:225::-;24627:34;24623:1;24615:6;24611:14;24604:58;24696:8;24691:2;24683:6;24679:15;24672:33;24487:225;:::o;24718:366::-;24860:3;24881:67;24945:2;24940:3;24881:67;:::i;:::-;24874:74;;24957:93;25046:3;24957:93;:::i;:::-;25075:2;25070:3;25066:12;25059:19;;24718:366;;;:::o;25090:419::-;25256:4;25294:2;25283:9;25279:18;25271:26;;25343:9;25337:4;25333:20;25329:1;25318:9;25314:17;25307:47;25371:131;25497:4;25371:131;:::i;:::-;25363:139;;25090:419;;;:::o;25515:231::-;25655:34;25651:1;25643:6;25639:14;25632:58;25724:14;25719:2;25711:6;25707:15;25700:39;25515:231;:::o;25752:366::-;25894:3;25915:67;25979:2;25974:3;25915:67;:::i;:::-;25908:74;;25991:93;26080:3;25991:93;:::i;:::-;26109:2;26104:3;26100:12;26093:19;;25752:366;;;:::o;26124:419::-;26290:4;26328:2;26317:9;26313:18;26305:26;;26377:9;26371:4;26367:20;26363:1;26352:9;26348:17;26341:47;26405:131;26531:4;26405:131;:::i;:::-;26397:139;;26124:419;;;:::o;26549:228::-;26689:34;26685:1;26677:6;26673:14;26666:58;26758:11;26753:2;26745:6;26741:15;26734:36;26549:228;:::o;26783:366::-;26925:3;26946:67;27010:2;27005:3;26946:67;:::i;:::-;26939:74;;27022:93;27111:3;27022:93;:::i;:::-;27140:2;27135:3;27131:12;27124:19;;26783:366;;;:::o;27155:419::-;27321:4;27359:2;27348:9;27344:18;27336:26;;27408:9;27402:4;27398:20;27394:1;27383:9;27379:17;27372:47;27436:131;27562:4;27436:131;:::i;:::-;27428:139;;27155:419;;;:::o;27580:223::-;27720:34;27716:1;27708:6;27704:14;27697:58;27789:6;27784:2;27776:6;27772:15;27765:31;27580:223;:::o;27809:366::-;27951:3;27972:67;28036:2;28031:3;27972:67;:::i;:::-;27965:74;;28048:93;28137:3;28048:93;:::i;:::-;28166:2;28161:3;28157:12;28150:19;;27809:366;;;:::o;28181:419::-;28347:4;28385:2;28374:9;28370:18;28362:26;;28434:9;28428:4;28424:20;28420:1;28409:9;28405:17;28398:47;28462:131;28588:4;28462:131;:::i;:::-;28454:139;;28181:419;;;:::o;28606:191::-;28646:4;28666:20;28684:1;28666:20;:::i;:::-;28661:25;;28700:20;28718:1;28700:20;:::i;:::-;28695:25;;28739:1;28736;28733:8;28730:34;;;28744:18;;:::i;:::-;28730:34;28789:1;28786;28782:9;28774:17;;28606:191;;;;:::o;28803:237::-;28943:34;28939:1;28931:6;28927:14;28920:58;29012:20;29007:2;28999:6;28995:15;28988:45;28803:237;:::o;29046:366::-;29188:3;29209:67;29273:2;29268:3;29209:67;:::i;:::-;29202:74;;29285:93;29374:3;29285:93;:::i;:::-;29403:2;29398:3;29394:12;29387:19;;29046:366;;;:::o;29418:419::-;29584:4;29622:2;29611:9;29607:18;29599:26;;29671:9;29665:4;29661:20;29657:1;29646:9;29642:17;29635:47;29699:131;29825:4;29699:131;:::i;:::-;29691:139;;29418:419;;;:::o;29843:234::-;29983:34;29979:1;29971:6;29967:14;29960:58;30052:17;30047:2;30039:6;30035:15;30028:42;29843:234;:::o;30083:366::-;30225:3;30246:67;30310:2;30305:3;30246:67;:::i;:::-;30239:74;;30322:93;30411:3;30322:93;:::i;:::-;30440:2;30435:3;30431:12;30424:19;;30083:366;;;:::o;30455:419::-;30621:4;30659:2;30648:9;30644:18;30636:26;;30708:9;30702:4;30698:20;30694:1;30683:9;30679:17;30672:47;30736:131;30862:4;30736:131;:::i;:::-;30728:139;;30455:419;;;:::o;30880:182::-;31020:34;31016:1;31008:6;31004:14;30997:58;30880:182;:::o;31068:366::-;31210:3;31231:67;31295:2;31290:3;31231:67;:::i;:::-;31224:74;;31307:93;31396:3;31307:93;:::i;:::-;31425:2;31420:3;31416:12;31409:19;;31068:366;;;:::o;31440:419::-;31606:4;31644:2;31633:9;31629:18;31621:26;;31693:9;31687:4;31683:20;31679:1;31668:9;31664:17;31657:47;31721:131;31847:4;31721:131;:::i;:::-;31713:139;;31440:419;;;:::o;31865:178::-;32005:30;32001:1;31993:6;31989:14;31982:54;31865:178;:::o;32049:366::-;32191:3;32212:67;32276:2;32271:3;32212:67;:::i;:::-;32205:74;;32288:93;32377:3;32288:93;:::i;:::-;32406:2;32401:3;32397:12;32390:19;;32049:366;;;:::o;32421:419::-;32587:4;32625:2;32614:9;32610:18;32602:26;;32674:9;32668:4;32664:20;32660:1;32649:9;32645:17;32638:47;32702:131;32828:4;32702:131;:::i;:::-;32694:139;;32421:419;;;:::o;32846:233::-;32986:34;32982:1;32974:6;32970:14;32963:58;33055:16;33050:2;33042:6;33038:15;33031:41;32846:233;:::o;33085:366::-;33227:3;33248:67;33312:2;33307:3;33248:67;:::i;:::-;33241:74;;33324:93;33413:3;33324:93;:::i;:::-;33442:2;33437:3;33433:12;33426:19;;33085:366;;;:::o;33457:419::-;33623:4;33661:2;33650:9;33646:18;33638:26;;33710:9;33704:4;33700:20;33696:1;33685:9;33681:17;33674:47;33738:131;33864:4;33738:131;:::i;:::-;33730:139;;33457:419;;;:::o;33882:98::-;33933:6;33967:5;33961:12;33951:22;;33882:98;;;:::o;33986:168::-;34069:11;34103:6;34098:3;34091:19;34143:4;34138:3;34134:14;34119:29;;33986:168;;;;:::o;34160:360::-;34246:3;34274:38;34306:5;34274:38;:::i;:::-;34328:70;34391:6;34386:3;34328:70;:::i;:::-;34321:77;;34407:52;34452:6;34447:3;34440:4;34433:5;34429:16;34407:52;:::i;:::-;34484:29;34506:6;34484:29;:::i;:::-;34479:3;34475:39;34468:46;;34250:270;34160:360;;;;:::o;34526:640::-;34721:4;34759:3;34748:9;34744:19;34736:27;;34773:71;34841:1;34830:9;34826:17;34817:6;34773:71;:::i;:::-;34854:72;34922:2;34911:9;34907:18;34898:6;34854:72;:::i;:::-;34936;35004:2;34993:9;34989:18;34980:6;34936:72;:::i;:::-;35055:9;35049:4;35045:20;35040:2;35029:9;35025:18;35018:48;35083:76;35154:4;35145:6;35083:76;:::i;:::-;35075:84;;34526:640;;;;;;;:::o;35172:141::-;35228:5;35259:6;35253:13;35244:22;;35275:32;35301:5;35275:32;:::i;:::-;35172:141;;;;:::o;35319:349::-;35388:6;35437:2;35425:9;35416:7;35412:23;35408:32;35405:119;;;35443:79;;:::i;:::-;35405:119;35563:1;35588:63;35643:7;35634:6;35623:9;35619:22;35588:63;:::i;:::-;35578:73;;35534:127;35319:349;;;;:::o;35674:233::-;35713:3;35736:24;35754:5;35736:24;:::i;:::-;35727:33;;35782:66;35775:5;35772:77;35769:103;;;35852:18;;:::i;:::-;35769:103;35899:1;35892:5;35888:13;35881:20;;35674:233;;;:::o;35913:180::-;35961:77;35958:1;35951:88;36058:4;36055:1;36048:15;36082:4;36079:1;36072:15;36099:185;36139:1;36156:20;36174:1;36156:20;:::i;:::-;36151:25;;36190:20;36208:1;36190:20;:::i;:::-;36185:25;;36229:1;36219:35;;36234:18;;:::i;:::-;36219:35;36276:1;36273;36269:9;36264:14;;36099:185;;;;:::o;36290:176::-;36322:1;36339:20;36357:1;36339:20;:::i;:::-;36334:25;;36373:20;36391:1;36373:20;:::i;:::-;36368:25;;36412:1;36402:35;;36417:18;;:::i;:::-;36402:35;36458:1;36455;36451:9;36446:14;;36290:176;;;;:::o;36472:180::-;36520:77;36517:1;36510:88;36617:4;36614:1;36607:15;36641:4;36638:1;36631:15",
	source:
		'// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport "@openzeppelin/contracts/token/ERC721/ERC721.sol";\nimport "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol";\nimport "@openzeppelin/contracts/utils/Counters.sol";\nimport "@openzeppelin/contracts/access/Ownable.sol";\n\ncontract MunichNFT is ERC721URIStorage, Ownable {\n    using Counters for Counters.Counter;\n    Counters.Counter private _tokenIds;\n\n    mapping (address => uint256) private _tokensMinted;\n    mapping (address => uint256) private _allowance;\n\n    constructor() ERC721("MunichNFT", "MUC") {} // First arg is contract name, second is its symbol\n\n    modifier canMint {\n        require(\n            _tokensMinted[msg.sender] < _allowance[msg.sender],\n            "Not whitelisted or allowance too low."\n        );\n        _;\n    }\n\n    function mint(address owner, string memory tokenURI) public canMint\n    {\n        _tokenIds.increment();\n\n        uint256 newItemId = _tokenIds.current();\n        _mint(owner, newItemId);\n        _setTokenURI(newItemId, tokenURI);\n\n        _tokensMinted[owner] += 1;\n    }\n\n    function setMinter(address minter, uint256 maxToken) public onlyOwner\n    {\n        _allowance[minter] = maxToken;\n    }\n}\n',
	sourcePath: "/Users/erinc/Documents/munich-nft/chain/contracts/MunichNFT.sol",
	ast: {
		absolutePath: "project:/contracts/MunichNFT.sol",
		exportedSymbols: {
			Address: [1505],
			Context: [1527],
			Counters: [1601],
			ERC165: [1828],
			ERC721: [919],
			ERC721URIStorage: [1181],
			IERC165: [1840],
			IERC721: [1035],
			IERC721Metadata: [1208],
			IERC721Receiver: [1053],
			MunichNFT: [2002],
			Ownable: [103],
			Strings: [1804],
		},
		id: 2003,
		license: "MIT",
		nodeType: "SourceUnit",
		nodes: [
			{
				id: 1900,
				literals: ["solidity", "^", "0.8", ".0"],
				nodeType: "PragmaDirective",
				src: "32:23:13",
			},
			{
				absolutePath: "@openzeppelin/contracts/token/ERC721/ERC721.sol",
				file: "@openzeppelin/contracts/token/ERC721/ERC721.sol",
				id: 1901,
				nameLocation: "-1:-1:-1",
				nodeType: "ImportDirective",
				scope: 2003,
				sourceUnit: 920,
				src: "57:57:13",
				symbolAliases: [],
				unitAlias: "",
			},
			{
				absolutePath:
					"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
				file:
					"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
				id: 1902,
				nameLocation: "-1:-1:-1",
				nodeType: "ImportDirective",
				scope: 2003,
				sourceUnit: 1182,
				src: "115:78:13",
				symbolAliases: [],
				unitAlias: "",
			},
			{
				absolutePath: "@openzeppelin/contracts/utils/Counters.sol",
				file: "@openzeppelin/contracts/utils/Counters.sol",
				id: 1903,
				nameLocation: "-1:-1:-1",
				nodeType: "ImportDirective",
				scope: 2003,
				sourceUnit: 1602,
				src: "194:52:13",
				symbolAliases: [],
				unitAlias: "",
			},
			{
				absolutePath: "@openzeppelin/contracts/access/Ownable.sol",
				file: "@openzeppelin/contracts/access/Ownable.sol",
				id: 1904,
				nameLocation: "-1:-1:-1",
				nodeType: "ImportDirective",
				scope: 2003,
				sourceUnit: 104,
				src: "247:52:13",
				symbolAliases: [],
				unitAlias: "",
			},
			{
				abstract: false,
				baseContracts: [
					{
						baseName: {
							id: 1905,
							name: "ERC721URIStorage",
							nodeType: "IdentifierPath",
							referencedDeclaration: 1181,
							src: "323:16:13",
						},
						id: 1906,
						nodeType: "InheritanceSpecifier",
						src: "323:16:13",
					},
					{
						baseName: {
							id: 1907,
							name: "Ownable",
							nodeType: "IdentifierPath",
							referencedDeclaration: 103,
							src: "341:7:13",
						},
						id: 1908,
						nodeType: "InheritanceSpecifier",
						src: "341:7:13",
					},
				],
				canonicalName: "MunichNFT",
				contractDependencies: [],
				contractKind: "contract",
				fullyImplemented: true,
				id: 2002,
				linearizedBaseContracts: [
					2002,
					103,
					1181,
					919,
					1208,
					1035,
					1828,
					1840,
					1527,
				],
				name: "MunichNFT",
				nameLocation: "310:9:13",
				nodeType: "ContractDefinition",
				nodes: [
					{
						id: 1912,
						libraryName: {
							id: 1909,
							name: "Counters",
							nodeType: "IdentifierPath",
							referencedDeclaration: 1601,
							src: "361:8:13",
						},
						nodeType: "UsingForDirective",
						src: "355:36:13",
						typeName: {
							id: 1911,
							nodeType: "UserDefinedTypeName",
							pathNode: {
								id: 1910,
								name: "Counters.Counter",
								nodeType: "IdentifierPath",
								referencedDeclaration: 1533,
								src: "374:16:13",
							},
							referencedDeclaration: 1533,
							src: "374:16:13",
							typeDescriptions: {
								typeIdentifier: "t_struct$_Counter_$1533_storage_ptr",
								typeString: "struct Counters.Counter",
							},
						},
					},
					{
						constant: false,
						id: 1915,
						mutability: "mutable",
						name: "_tokenIds",
						nameLocation: "421:9:13",
						nodeType: "VariableDeclaration",
						scope: 2002,
						src: "396:34:13",
						stateVariable: true,
						storageLocation: "default",
						typeDescriptions: {
							typeIdentifier: "t_struct$_Counter_$1533_storage",
							typeString: "struct Counters.Counter",
						},
						typeName: {
							id: 1914,
							nodeType: "UserDefinedTypeName",
							pathNode: {
								id: 1913,
								name: "Counters.Counter",
								nodeType: "IdentifierPath",
								referencedDeclaration: 1533,
								src: "396:16:13",
							},
							referencedDeclaration: 1533,
							src: "396:16:13",
							typeDescriptions: {
								typeIdentifier: "t_struct$_Counter_$1533_storage_ptr",
								typeString: "struct Counters.Counter",
							},
						},
						visibility: "private",
					},
					{
						constant: false,
						id: 1919,
						mutability: "mutable",
						name: "_tokensMinted",
						nameLocation: "474:13:13",
						nodeType: "VariableDeclaration",
						scope: 2002,
						src: "437:50:13",
						stateVariable: true,
						storageLocation: "default",
						typeDescriptions: {
							typeIdentifier: "t_mapping$_t_address_$_t_uint256_$",
							typeString: "mapping(address => uint256)",
						},
						typeName: {
							id: 1918,
							keyType: {
								id: 1916,
								name: "address",
								nodeType: "ElementaryTypeName",
								src: "446:7:13",
								typeDescriptions: {
									typeIdentifier: "t_address",
									typeString: "address",
								},
							},
							nodeType: "Mapping",
							src: "437:28:13",
							typeDescriptions: {
								typeIdentifier: "t_mapping$_t_address_$_t_uint256_$",
								typeString: "mapping(address => uint256)",
							},
							valueType: {
								id: 1917,
								name: "uint256",
								nodeType: "ElementaryTypeName",
								src: "457:7:13",
								typeDescriptions: {
									typeIdentifier: "t_uint256",
									typeString: "uint256",
								},
							},
						},
						visibility: "private",
					},
					{
						constant: false,
						id: 1923,
						mutability: "mutable",
						name: "_allowance",
						nameLocation: "530:10:13",
						nodeType: "VariableDeclaration",
						scope: 2002,
						src: "493:47:13",
						stateVariable: true,
						storageLocation: "default",
						typeDescriptions: {
							typeIdentifier: "t_mapping$_t_address_$_t_uint256_$",
							typeString: "mapping(address => uint256)",
						},
						typeName: {
							id: 1922,
							keyType: {
								id: 1920,
								name: "address",
								nodeType: "ElementaryTypeName",
								src: "502:7:13",
								typeDescriptions: {
									typeIdentifier: "t_address",
									typeString: "address",
								},
							},
							nodeType: "Mapping",
							src: "493:28:13",
							typeDescriptions: {
								typeIdentifier: "t_mapping$_t_address_$_t_uint256_$",
								typeString: "mapping(address => uint256)",
							},
							valueType: {
								id: 1921,
								name: "uint256",
								nodeType: "ElementaryTypeName",
								src: "513:7:13",
								typeDescriptions: {
									typeIdentifier: "t_uint256",
									typeString: "uint256",
								},
							},
						},
						visibility: "private",
					},
					{
						body: {
							id: 1930,
							nodeType: "Block",
							src: "588:2:13",
							statements: [],
						},
						id: 1931,
						implemented: true,
						kind: "constructor",
						modifiers: [
							{
								arguments: [
									{
										hexValue: "4d756e6963684e4654",
										id: 1926,
										isConstant: false,
										isLValue: false,
										isPure: true,
										kind: "string",
										lValueRequested: false,
										nodeType: "Literal",
										src: "568:11:13",
										typeDescriptions: {
											typeIdentifier:
												"t_stringliteral_cf112c8050dddcb954e8c2c94aad86f284018ff606ac1fc7ec3caa59ba4add1f",
											typeString: 'literal_string "MunichNFT"',
										},
										value: "MunichNFT",
									},
									{
										hexValue: "4d5543",
										id: 1927,
										isConstant: false,
										isLValue: false,
										isPure: true,
										kind: "string",
										lValueRequested: false,
										nodeType: "Literal",
										src: "581:5:13",
										typeDescriptions: {
											typeIdentifier:
												"t_stringliteral_9abd88d8451a28a47696fa47a684fd09fbe0bfc4ac2d0971636eaae113b59eba",
											typeString: 'literal_string "MUC"',
										},
										value: "MUC",
									},
								],
								id: 1928,
								kind: "baseConstructorSpecifier",
								modifierName: {
									id: 1925,
									name: "ERC721",
									nodeType: "IdentifierPath",
									referencedDeclaration: 919,
									src: "561:6:13",
								},
								nodeType: "ModifierInvocation",
								src: "561:26:13",
							},
						],
						name: "",
						nameLocation: "-1:-1:-1",
						nodeType: "FunctionDefinition",
						parameters: {
							id: 1924,
							nodeType: "ParameterList",
							parameters: [],
							src: "558:2:13",
						},
						returnParameters: {
							id: 1929,
							nodeType: "ParameterList",
							parameters: [],
							src: "588:0:13",
						},
						scope: 2002,
						src: "547:43:13",
						stateMutability: "nonpayable",
						virtual: false,
						visibility: "public",
					},
					{
						body: {
							id: 1947,
							nodeType: "Block",
							src: "665:162:13",
							statements: [
								{
									expression: {
										arguments: [
											{
												commonType: {
													typeIdentifier: "t_uint256",
													typeString: "uint256",
												},
												id: 1942,
												isConstant: false,
												isLValue: false,
												isPure: false,
												lValueRequested: false,
												leftExpression: {
													baseExpression: {
														id: 1934,
														name: "_tokensMinted",
														nodeType: "Identifier",
														overloadedDeclarations: [],
														referencedDeclaration: 1919,
														src: "696:13:13",
														typeDescriptions: {
															typeIdentifier:
																"t_mapping$_t_address_$_t_uint256_$",
															typeString: "mapping(address => uint256)",
														},
													},
													id: 1937,
													indexExpression: {
														expression: {
															id: 1935,
															name: "msg",
															nodeType: "Identifier",
															overloadedDeclarations: [],
															referencedDeclaration: 4294967281,
															src: "710:3:13",
															typeDescriptions: {
																typeIdentifier: "t_magic_message",
																typeString: "msg",
															},
														},
														id: 1936,
														isConstant: false,
														isLValue: false,
														isPure: false,
														lValueRequested: false,
														memberName: "sender",
														nodeType: "MemberAccess",
														src: "710:10:13",
														typeDescriptions: {
															typeIdentifier: "t_address",
															typeString: "address",
														},
													},
													isConstant: false,
													isLValue: true,
													isPure: false,
													lValueRequested: false,
													nodeType: "IndexAccess",
													src: "696:25:13",
													typeDescriptions: {
														typeIdentifier: "t_uint256",
														typeString: "uint256",
													},
												},
												nodeType: "BinaryOperation",
												operator: "<",
												rightExpression: {
													baseExpression: {
														id: 1938,
														name: "_allowance",
														nodeType: "Identifier",
														overloadedDeclarations: [],
														referencedDeclaration: 1923,
														src: "724:10:13",
														typeDescriptions: {
															typeIdentifier:
																"t_mapping$_t_address_$_t_uint256_$",
															typeString: "mapping(address => uint256)",
														},
													},
													id: 1941,
													indexExpression: {
														expression: {
															id: 1939,
															name: "msg",
															nodeType: "Identifier",
															overloadedDeclarations: [],
															referencedDeclaration: 4294967281,
															src: "735:3:13",
															typeDescriptions: {
																typeIdentifier: "t_magic_message",
																typeString: "msg",
															},
														},
														id: 1940,
														isConstant: false,
														isLValue: false,
														isPure: false,
														lValueRequested: false,
														memberName: "sender",
														nodeType: "MemberAccess",
														src: "735:10:13",
														typeDescriptions: {
															typeIdentifier: "t_address",
															typeString: "address",
														},
													},
													isConstant: false,
													isLValue: true,
													isPure: false,
													lValueRequested: false,
													nodeType: "IndexAccess",
													src: "724:22:13",
													typeDescriptions: {
														typeIdentifier: "t_uint256",
														typeString: "uint256",
													},
												},
												src: "696:50:13",
												typeDescriptions: {
													typeIdentifier: "t_bool",
													typeString: "bool",
												},
											},
											{
												hexValue:
													"4e6f742077686974656c6973746564206f7220616c6c6f77616e636520746f6f206c6f772e",
												id: 1943,
												isConstant: false,
												isLValue: false,
												isPure: true,
												kind: "string",
												lValueRequested: false,
												nodeType: "Literal",
												src: "760:39:13",
												typeDescriptions: {
													typeIdentifier:
														"t_stringliteral_25e9e384fb9ee74dfba124aec4131531c53b8e94403e24af723667c7636dbc7f",
													typeString:
														'literal_string "Not whitelisted or allowance too low."',
												},
												value: "Not whitelisted or allowance too low.",
											},
										],
										expression: {
											argumentTypes: [
												{
													typeIdentifier: "t_bool",
													typeString: "bool",
												},
												{
													typeIdentifier:
														"t_stringliteral_25e9e384fb9ee74dfba124aec4131531c53b8e94403e24af723667c7636dbc7f",
													typeString:
														'literal_string "Not whitelisted or allowance too low."',
												},
											],
											id: 1933,
											name: "require",
											nodeType: "Identifier",
											overloadedDeclarations: [4294967278, 4294967278],
											referencedDeclaration: 4294967278,
											src: "675:7:13",
											typeDescriptions: {
												typeIdentifier:
													"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												typeString: "function (bool,string memory) pure",
											},
										},
										id: 1944,
										isConstant: false,
										isLValue: false,
										isPure: false,
										kind: "functionCall",
										lValueRequested: false,
										names: [],
										nodeType: "FunctionCall",
										src: "675:134:13",
										tryCall: false,
										typeDescriptions: {
											typeIdentifier: "t_tuple$__$",
											typeString: "tuple()",
										},
									},
									id: 1945,
									nodeType: "ExpressionStatement",
									src: "675:134:13",
								},
								{
									id: 1946,
									nodeType: "PlaceholderStatement",
									src: "819:1:13",
								},
							],
						},
						id: 1948,
						name: "canMint",
						nameLocation: "657:7:13",
						nodeType: "ModifierDefinition",
						parameters: {
							id: 1932,
							nodeType: "ParameterList",
							parameters: [],
							src: "665:0:13",
						},
						src: "648:179:13",
						virtual: false,
						visibility: "internal",
					},
					{
						body: {
							id: 1984,
							nodeType: "Block",
							src: "905:200:13",
							statements: [
								{
									expression: {
										arguments: [],
										expression: {
											argumentTypes: [],
											expression: {
												id: 1957,
												name: "_tokenIds",
												nodeType: "Identifier",
												overloadedDeclarations: [],
												referencedDeclaration: 1915,
												src: "915:9:13",
												typeDescriptions: {
													typeIdentifier: "t_struct$_Counter_$1533_storage",
													typeString: "struct Counters.Counter storage ref",
												},
											},
											id: 1959,
											isConstant: false,
											isLValue: true,
											isPure: false,
											lValueRequested: false,
											memberName: "increment",
											nodeType: "MemberAccess",
											referencedDeclaration: 1559,
											src: "915:19:13",
											typeDescriptions: {
												typeIdentifier:
													"t_function_internal_nonpayable$_t_struct$_Counter_$1533_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$1533_storage_ptr_$",
												typeString:
													"function (struct Counters.Counter storage pointer)",
											},
										},
										id: 1960,
										isConstant: false,
										isLValue: false,
										isPure: false,
										kind: "functionCall",
										lValueRequested: false,
										names: [],
										nodeType: "FunctionCall",
										src: "915:21:13",
										tryCall: false,
										typeDescriptions: {
											typeIdentifier: "t_tuple$__$",
											typeString: "tuple()",
										},
									},
									id: 1961,
									nodeType: "ExpressionStatement",
									src: "915:21:13",
								},
								{
									assignments: [1963],
									declarations: [
										{
											constant: false,
											id: 1963,
											mutability: "mutable",
											name: "newItemId",
											nameLocation: "955:9:13",
											nodeType: "VariableDeclaration",
											scope: 1984,
											src: "947:17:13",
											stateVariable: false,
											storageLocation: "default",
											typeDescriptions: {
												typeIdentifier: "t_uint256",
												typeString: "uint256",
											},
											typeName: {
												id: 1962,
												name: "uint256",
												nodeType: "ElementaryTypeName",
												src: "947:7:13",
												typeDescriptions: {
													typeIdentifier: "t_uint256",
													typeString: "uint256",
												},
											},
											visibility: "internal",
										},
									],
									id: 1967,
									initialValue: {
										arguments: [],
										expression: {
											argumentTypes: [],
											expression: {
												id: 1964,
												name: "_tokenIds",
												nodeType: "Identifier",
												overloadedDeclarations: [],
												referencedDeclaration: 1915,
												src: "967:9:13",
												typeDescriptions: {
													typeIdentifier: "t_struct$_Counter_$1533_storage",
													typeString: "struct Counters.Counter storage ref",
												},
											},
											id: 1965,
											isConstant: false,
											isLValue: true,
											isPure: false,
											lValueRequested: false,
											memberName: "current",
											nodeType: "MemberAccess",
											referencedDeclaration: 1545,
											src: "967:17:13",
											typeDescriptions: {
												typeIdentifier:
													"t_function_internal_view$_t_struct$_Counter_$1533_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1533_storage_ptr_$",
												typeString:
													"function (struct Counters.Counter storage pointer) view returns (uint256)",
											},
										},
										id: 1966,
										isConstant: false,
										isLValue: false,
										isPure: false,
										kind: "functionCall",
										lValueRequested: false,
										names: [],
										nodeType: "FunctionCall",
										src: "967:19:13",
										tryCall: false,
										typeDescriptions: {
											typeIdentifier: "t_uint256",
											typeString: "uint256",
										},
									},
									nodeType: "VariableDeclarationStatement",
									src: "947:39:13",
								},
								{
									expression: {
										arguments: [
											{
												id: 1969,
												name: "owner",
												nodeType: "Identifier",
												overloadedDeclarations: [],
												referencedDeclaration: 1950,
												src: "1002:5:13",
												typeDescriptions: {
													typeIdentifier: "t_address",
													typeString: "address",
												},
											},
											{
												id: 1970,
												name: "newItemId",
												nodeType: "Identifier",
												overloadedDeclarations: [],
												referencedDeclaration: 1963,
												src: "1009:9:13",
												typeDescriptions: {
													typeIdentifier: "t_uint256",
													typeString: "uint256",
												},
											},
										],
										expression: {
											argumentTypes: [
												{
													typeIdentifier: "t_address",
													typeString: "address",
												},
												{
													typeIdentifier: "t_uint256",
													typeString: "uint256",
												},
											],
											id: 1968,
											name: "_mint",
											nodeType: "Identifier",
											overloadedDeclarations: [],
											referencedDeclaration: 701,
											src: "996:5:13",
											typeDescriptions: {
												typeIdentifier:
													"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
												typeString: "function (address,uint256)",
											},
										},
										id: 1971,
										isConstant: false,
										isLValue: false,
										isPure: false,
										kind: "functionCall",
										lValueRequested: false,
										names: [],
										nodeType: "FunctionCall",
										src: "996:23:13",
										tryCall: false,
										typeDescriptions: {
											typeIdentifier: "t_tuple$__$",
											typeString: "tuple()",
										},
									},
									id: 1972,
									nodeType: "ExpressionStatement",
									src: "996:23:13",
								},
								{
									expression: {
										arguments: [
											{
												id: 1974,
												name: "newItemId",
												nodeType: "Identifier",
												overloadedDeclarations: [],
												referencedDeclaration: 1963,
												src: "1042:9:13",
												typeDescriptions: {
													typeIdentifier: "t_uint256",
													typeString: "uint256",
												},
											},
											{
												id: 1975,
												name: "tokenURI",
												nodeType: "Identifier",
												overloadedDeclarations: [],
												referencedDeclaration: 1952,
												src: "1053:8:13",
												typeDescriptions: {
													typeIdentifier: "t_string_memory_ptr",
													typeString: "string memory",
												},
											},
										],
										expression: {
											argumentTypes: [
												{
													typeIdentifier: "t_uint256",
													typeString: "uint256",
												},
												{
													typeIdentifier: "t_string_memory_ptr",
													typeString: "string memory",
												},
											],
											id: 1973,
											name: "_setTokenURI",
											nodeType: "Identifier",
											overloadedDeclarations: [],
											referencedDeclaration: 1150,
											src: "1029:12:13",
											typeDescriptions: {
												typeIdentifier:
													"t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
												typeString: "function (uint256,string memory)",
											},
										},
										id: 1976,
										isConstant: false,
										isLValue: false,
										isPure: false,
										kind: "functionCall",
										lValueRequested: false,
										names: [],
										nodeType: "FunctionCall",
										src: "1029:33:13",
										tryCall: false,
										typeDescriptions: {
											typeIdentifier: "t_tuple$__$",
											typeString: "tuple()",
										},
									},
									id: 1977,
									nodeType: "ExpressionStatement",
									src: "1029:33:13",
								},
								{
									expression: {
										id: 1982,
										isConstant: false,
										isLValue: false,
										isPure: false,
										lValueRequested: false,
										leftHandSide: {
											baseExpression: {
												id: 1978,
												name: "_tokensMinted",
												nodeType: "Identifier",
												overloadedDeclarations: [],
												referencedDeclaration: 1919,
												src: "1073:13:13",
												typeDescriptions: {
													typeIdentifier: "t_mapping$_t_address_$_t_uint256_$",
													typeString: "mapping(address => uint256)",
												},
											},
											id: 1980,
											indexExpression: {
												id: 1979,
												name: "owner",
												nodeType: "Identifier",
												overloadedDeclarations: [],
												referencedDeclaration: 1950,
												src: "1087:5:13",
												typeDescriptions: {
													typeIdentifier: "t_address",
													typeString: "address",
												},
											},
											isConstant: false,
											isLValue: true,
											isPure: false,
											lValueRequested: true,
											nodeType: "IndexAccess",
											src: "1073:20:13",
											typeDescriptions: {
												typeIdentifier: "t_uint256",
												typeString: "uint256",
											},
										},
										nodeType: "Assignment",
										operator: "+=",
										rightHandSide: {
											hexValue: "31",
											id: 1981,
											isConstant: false,
											isLValue: false,
											isPure: true,
											kind: "number",
											lValueRequested: false,
											nodeType: "Literal",
											src: "1097:1:13",
											typeDescriptions: {
												typeIdentifier: "t_rational_1_by_1",
												typeString: "int_const 1",
											},
											value: "1",
										},
										src: "1073:25:13",
										typeDescriptions: {
											typeIdentifier: "t_uint256",
											typeString: "uint256",
										},
									},
									id: 1983,
									nodeType: "ExpressionStatement",
									src: "1073:25:13",
								},
							],
						},
						functionSelector: "d0def521",
						id: 1985,
						implemented: true,
						kind: "function",
						modifiers: [
							{
								id: 1955,
								kind: "modifierInvocation",
								modifierName: {
									id: 1954,
									name: "canMint",
									nodeType: "IdentifierPath",
									referencedDeclaration: 1948,
									src: "893:7:13",
								},
								nodeType: "ModifierInvocation",
								src: "893:7:13",
							},
						],
						name: "mint",
						nameLocation: "842:4:13",
						nodeType: "FunctionDefinition",
						parameters: {
							id: 1953,
							nodeType: "ParameterList",
							parameters: [
								{
									constant: false,
									id: 1950,
									mutability: "mutable",
									name: "owner",
									nameLocation: "855:5:13",
									nodeType: "VariableDeclaration",
									scope: 1985,
									src: "847:13:13",
									stateVariable: false,
									storageLocation: "default",
									typeDescriptions: {
										typeIdentifier: "t_address",
										typeString: "address",
									},
									typeName: {
										id: 1949,
										name: "address",
										nodeType: "ElementaryTypeName",
										src: "847:7:13",
										stateMutability: "nonpayable",
										typeDescriptions: {
											typeIdentifier: "t_address",
											typeString: "address",
										},
									},
									visibility: "internal",
								},
								{
									constant: false,
									id: 1952,
									mutability: "mutable",
									name: "tokenURI",
									nameLocation: "876:8:13",
									nodeType: "VariableDeclaration",
									scope: 1985,
									src: "862:22:13",
									stateVariable: false,
									storageLocation: "memory",
									typeDescriptions: {
										typeIdentifier: "t_string_memory_ptr",
										typeString: "string",
									},
									typeName: {
										id: 1951,
										name: "string",
										nodeType: "ElementaryTypeName",
										src: "862:6:13",
										typeDescriptions: {
											typeIdentifier: "t_string_storage_ptr",
											typeString: "string",
										},
									},
									visibility: "internal",
								},
							],
							src: "846:39:13",
						},
						returnParameters: {
							id: 1956,
							nodeType: "ParameterList",
							parameters: [],
							src: "905:0:13",
						},
						scope: 2002,
						src: "833:272:13",
						stateMutability: "nonpayable",
						virtual: false,
						visibility: "public",
					},
					{
						body: {
							id: 2000,
							nodeType: "Block",
							src: "1185:46:13",
							statements: [
								{
									expression: {
										id: 1998,
										isConstant: false,
										isLValue: false,
										isPure: false,
										lValueRequested: false,
										leftHandSide: {
											baseExpression: {
												id: 1994,
												name: "_allowance",
												nodeType: "Identifier",
												overloadedDeclarations: [],
												referencedDeclaration: 1923,
												src: "1195:10:13",
												typeDescriptions: {
													typeIdentifier: "t_mapping$_t_address_$_t_uint256_$",
													typeString: "mapping(address => uint256)",
												},
											},
											id: 1996,
											indexExpression: {
												id: 1995,
												name: "minter",
												nodeType: "Identifier",
												overloadedDeclarations: [],
												referencedDeclaration: 1987,
												src: "1206:6:13",
												typeDescriptions: {
													typeIdentifier: "t_address",
													typeString: "address",
												},
											},
											isConstant: false,
											isLValue: true,
											isPure: false,
											lValueRequested: true,
											nodeType: "IndexAccess",
											src: "1195:18:13",
											typeDescriptions: {
												typeIdentifier: "t_uint256",
												typeString: "uint256",
											},
										},
										nodeType: "Assignment",
										operator: "=",
										rightHandSide: {
											id: 1997,
											name: "maxToken",
											nodeType: "Identifier",
											overloadedDeclarations: [],
											referencedDeclaration: 1989,
											src: "1216:8:13",
											typeDescriptions: {
												typeIdentifier: "t_uint256",
												typeString: "uint256",
											},
										},
										src: "1195:29:13",
										typeDescriptions: {
											typeIdentifier: "t_uint256",
											typeString: "uint256",
										},
									},
									id: 1999,
									nodeType: "ExpressionStatement",
									src: "1195:29:13",
								},
							],
						},
						functionSelector: "9ce38998",
						id: 2001,
						implemented: true,
						kind: "function",
						modifiers: [
							{
								id: 1992,
								kind: "modifierInvocation",
								modifierName: {
									id: 1991,
									name: "onlyOwner",
									nodeType: "IdentifierPath",
									referencedDeclaration: 46,
									src: "1171:9:13",
								},
								nodeType: "ModifierInvocation",
								src: "1171:9:13",
							},
						],
						name: "setMinter",
						nameLocation: "1120:9:13",
						nodeType: "FunctionDefinition",
						parameters: {
							id: 1990,
							nodeType: "ParameterList",
							parameters: [
								{
									constant: false,
									id: 1987,
									mutability: "mutable",
									name: "minter",
									nameLocation: "1138:6:13",
									nodeType: "VariableDeclaration",
									scope: 2001,
									src: "1130:14:13",
									stateVariable: false,
									storageLocation: "default",
									typeDescriptions: {
										typeIdentifier: "t_address",
										typeString: "address",
									},
									typeName: {
										id: 1986,
										name: "address",
										nodeType: "ElementaryTypeName",
										src: "1130:7:13",
										stateMutability: "nonpayable",
										typeDescriptions: {
											typeIdentifier: "t_address",
											typeString: "address",
										},
									},
									visibility: "internal",
								},
								{
									constant: false,
									id: 1989,
									mutability: "mutable",
									name: "maxToken",
									nameLocation: "1154:8:13",
									nodeType: "VariableDeclaration",
									scope: 2001,
									src: "1146:16:13",
									stateVariable: false,
									storageLocation: "default",
									typeDescriptions: {
										typeIdentifier: "t_uint256",
										typeString: "uint256",
									},
									typeName: {
										id: 1988,
										name: "uint256",
										nodeType: "ElementaryTypeName",
										src: "1146:7:13",
										typeDescriptions: {
											typeIdentifier: "t_uint256",
											typeString: "uint256",
										},
									},
									visibility: "internal",
								},
							],
							src: "1129:34:13",
						},
						returnParameters: {
							id: 1993,
							nodeType: "ParameterList",
							parameters: [],
							src: "1185:0:13",
						},
						scope: 2002,
						src: "1111:120:13",
						stateMutability: "nonpayable",
						virtual: false,
						visibility: "public",
					},
				],
				scope: 2003,
				src: "301:932:13",
				usedErrors: [],
			},
		],
		src: "32:1202:13",
	},
	legacyAST: {
		absolutePath: "project:/contracts/MunichNFT.sol",
		exportedSymbols: {
			Address: [1505],
			Context: [1527],
			Counters: [1601],
			ERC165: [1828],
			ERC721: [919],
			ERC721URIStorage: [1181],
			IERC165: [1840],
			IERC721: [1035],
			IERC721Metadata: [1208],
			IERC721Receiver: [1053],
			MunichNFT: [2002],
			Ownable: [103],
			Strings: [1804],
		},
		id: 2003,
		license: "MIT",
		nodeType: "SourceUnit",
		nodes: [
			{
				id: 1900,
				literals: ["solidity", "^", "0.8", ".0"],
				nodeType: "PragmaDirective",
				src: "32:23:13",
			},
			{
				absolutePath: "@openzeppelin/contracts/token/ERC721/ERC721.sol",
				file: "@openzeppelin/contracts/token/ERC721/ERC721.sol",
				id: 1901,
				nameLocation: "-1:-1:-1",
				nodeType: "ImportDirective",
				scope: 2003,
				sourceUnit: 920,
				src: "57:57:13",
				symbolAliases: [],
				unitAlias: "",
			},
			{
				absolutePath:
					"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
				file:
					"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
				id: 1902,
				nameLocation: "-1:-1:-1",
				nodeType: "ImportDirective",
				scope: 2003,
				sourceUnit: 1182,
				src: "115:78:13",
				symbolAliases: [],
				unitAlias: "",
			},
			{
				absolutePath: "@openzeppelin/contracts/utils/Counters.sol",
				file: "@openzeppelin/contracts/utils/Counters.sol",
				id: 1903,
				nameLocation: "-1:-1:-1",
				nodeType: "ImportDirective",
				scope: 2003,
				sourceUnit: 1602,
				src: "194:52:13",
				symbolAliases: [],
				unitAlias: "",
			},
			{
				absolutePath: "@openzeppelin/contracts/access/Ownable.sol",
				file: "@openzeppelin/contracts/access/Ownable.sol",
				id: 1904,
				nameLocation: "-1:-1:-1",
				nodeType: "ImportDirective",
				scope: 2003,
				sourceUnit: 104,
				src: "247:52:13",
				symbolAliases: [],
				unitAlias: "",
			},
			{
				abstract: false,
				baseContracts: [
					{
						baseName: {
							id: 1905,
							name: "ERC721URIStorage",
							nodeType: "IdentifierPath",
							referencedDeclaration: 1181,
							src: "323:16:13",
						},
						id: 1906,
						nodeType: "InheritanceSpecifier",
						src: "323:16:13",
					},
					{
						baseName: {
							id: 1907,
							name: "Ownable",
							nodeType: "IdentifierPath",
							referencedDeclaration: 103,
							src: "341:7:13",
						},
						id: 1908,
						nodeType: "InheritanceSpecifier",
						src: "341:7:13",
					},
				],
				canonicalName: "MunichNFT",
				contractDependencies: [],
				contractKind: "contract",
				fullyImplemented: true,
				id: 2002,
				linearizedBaseContracts: [
					2002,
					103,
					1181,
					919,
					1208,
					1035,
					1828,
					1840,
					1527,
				],
				name: "MunichNFT",
				nameLocation: "310:9:13",
				nodeType: "ContractDefinition",
				nodes: [
					{
						id: 1912,
						libraryName: {
							id: 1909,
							name: "Counters",
							nodeType: "IdentifierPath",
							referencedDeclaration: 1601,
							src: "361:8:13",
						},
						nodeType: "UsingForDirective",
						src: "355:36:13",
						typeName: {
							id: 1911,
							nodeType: "UserDefinedTypeName",
							pathNode: {
								id: 1910,
								name: "Counters.Counter",
								nodeType: "IdentifierPath",
								referencedDeclaration: 1533,
								src: "374:16:13",
							},
							referencedDeclaration: 1533,
							src: "374:16:13",
							typeDescriptions: {
								typeIdentifier: "t_struct$_Counter_$1533_storage_ptr",
								typeString: "struct Counters.Counter",
							},
						},
					},
					{
						constant: false,
						id: 1915,
						mutability: "mutable",
						name: "_tokenIds",
						nameLocation: "421:9:13",
						nodeType: "VariableDeclaration",
						scope: 2002,
						src: "396:34:13",
						stateVariable: true,
						storageLocation: "default",
						typeDescriptions: {
							typeIdentifier: "t_struct$_Counter_$1533_storage",
							typeString: "struct Counters.Counter",
						},
						typeName: {
							id: 1914,
							nodeType: "UserDefinedTypeName",
							pathNode: {
								id: 1913,
								name: "Counters.Counter",
								nodeType: "IdentifierPath",
								referencedDeclaration: 1533,
								src: "396:16:13",
							},
							referencedDeclaration: 1533,
							src: "396:16:13",
							typeDescriptions: {
								typeIdentifier: "t_struct$_Counter_$1533_storage_ptr",
								typeString: "struct Counters.Counter",
							},
						},
						visibility: "private",
					},
					{
						constant: false,
						id: 1919,
						mutability: "mutable",
						name: "_tokensMinted",
						nameLocation: "474:13:13",
						nodeType: "VariableDeclaration",
						scope: 2002,
						src: "437:50:13",
						stateVariable: true,
						storageLocation: "default",
						typeDescriptions: {
							typeIdentifier: "t_mapping$_t_address_$_t_uint256_$",
							typeString: "mapping(address => uint256)",
						},
						typeName: {
							id: 1918,
							keyType: {
								id: 1916,
								name: "address",
								nodeType: "ElementaryTypeName",
								src: "446:7:13",
								typeDescriptions: {
									typeIdentifier: "t_address",
									typeString: "address",
								},
							},
							nodeType: "Mapping",
							src: "437:28:13",
							typeDescriptions: {
								typeIdentifier: "t_mapping$_t_address_$_t_uint256_$",
								typeString: "mapping(address => uint256)",
							},
							valueType: {
								id: 1917,
								name: "uint256",
								nodeType: "ElementaryTypeName",
								src: "457:7:13",
								typeDescriptions: {
									typeIdentifier: "t_uint256",
									typeString: "uint256",
								},
							},
						},
						visibility: "private",
					},
					{
						constant: false,
						id: 1923,
						mutability: "mutable",
						name: "_allowance",
						nameLocation: "530:10:13",
						nodeType: "VariableDeclaration",
						scope: 2002,
						src: "493:47:13",
						stateVariable: true,
						storageLocation: "default",
						typeDescriptions: {
							typeIdentifier: "t_mapping$_t_address_$_t_uint256_$",
							typeString: "mapping(address => uint256)",
						},
						typeName: {
							id: 1922,
							keyType: {
								id: 1920,
								name: "address",
								nodeType: "ElementaryTypeName",
								src: "502:7:13",
								typeDescriptions: {
									typeIdentifier: "t_address",
									typeString: "address",
								},
							},
							nodeType: "Mapping",
							src: "493:28:13",
							typeDescriptions: {
								typeIdentifier: "t_mapping$_t_address_$_t_uint256_$",
								typeString: "mapping(address => uint256)",
							},
							valueType: {
								id: 1921,
								name: "uint256",
								nodeType: "ElementaryTypeName",
								src: "513:7:13",
								typeDescriptions: {
									typeIdentifier: "t_uint256",
									typeString: "uint256",
								},
							},
						},
						visibility: "private",
					},
					{
						body: {
							id: 1930,
							nodeType: "Block",
							src: "588:2:13",
							statements: [],
						},
						id: 1931,
						implemented: true,
						kind: "constructor",
						modifiers: [
							{
								arguments: [
									{
										hexValue: "4d756e6963684e4654",
										id: 1926,
										isConstant: false,
										isLValue: false,
										isPure: true,
										kind: "string",
										lValueRequested: false,
										nodeType: "Literal",
										src: "568:11:13",
										typeDescriptions: {
											typeIdentifier:
												"t_stringliteral_cf112c8050dddcb954e8c2c94aad86f284018ff606ac1fc7ec3caa59ba4add1f",
											typeString: 'literal_string "MunichNFT"',
										},
										value: "MunichNFT",
									},
									{
										hexValue: "4d5543",
										id: 1927,
										isConstant: false,
										isLValue: false,
										isPure: true,
										kind: "string",
										lValueRequested: false,
										nodeType: "Literal",
										src: "581:5:13",
										typeDescriptions: {
											typeIdentifier:
												"t_stringliteral_9abd88d8451a28a47696fa47a684fd09fbe0bfc4ac2d0971636eaae113b59eba",
											typeString: 'literal_string "MUC"',
										},
										value: "MUC",
									},
								],
								id: 1928,
								kind: "baseConstructorSpecifier",
								modifierName: {
									id: 1925,
									name: "ERC721",
									nodeType: "IdentifierPath",
									referencedDeclaration: 919,
									src: "561:6:13",
								},
								nodeType: "ModifierInvocation",
								src: "561:26:13",
							},
						],
						name: "",
						nameLocation: "-1:-1:-1",
						nodeType: "FunctionDefinition",
						parameters: {
							id: 1924,
							nodeType: "ParameterList",
							parameters: [],
							src: "558:2:13",
						},
						returnParameters: {
							id: 1929,
							nodeType: "ParameterList",
							parameters: [],
							src: "588:0:13",
						},
						scope: 2002,
						src: "547:43:13",
						stateMutability: "nonpayable",
						virtual: false,
						visibility: "public",
					},
					{
						body: {
							id: 1947,
							nodeType: "Block",
							src: "665:162:13",
							statements: [
								{
									expression: {
										arguments: [
											{
												commonType: {
													typeIdentifier: "t_uint256",
													typeString: "uint256",
												},
												id: 1942,
												isConstant: false,
												isLValue: false,
												isPure: false,
												lValueRequested: false,
												leftExpression: {
													baseExpression: {
														id: 1934,
														name: "_tokensMinted",
														nodeType: "Identifier",
														overloadedDeclarations: [],
														referencedDeclaration: 1919,
														src: "696:13:13",
														typeDescriptions: {
															typeIdentifier:
																"t_mapping$_t_address_$_t_uint256_$",
															typeString: "mapping(address => uint256)",
														},
													},
													id: 1937,
													indexExpression: {
														expression: {
															id: 1935,
															name: "msg",
															nodeType: "Identifier",
															overloadedDeclarations: [],
															referencedDeclaration: 4294967281,
															src: "710:3:13",
															typeDescriptions: {
																typeIdentifier: "t_magic_message",
																typeString: "msg",
															},
														},
														id: 1936,
														isConstant: false,
														isLValue: false,
														isPure: false,
														lValueRequested: false,
														memberName: "sender",
														nodeType: "MemberAccess",
														src: "710:10:13",
														typeDescriptions: {
															typeIdentifier: "t_address",
															typeString: "address",
														},
													},
													isConstant: false,
													isLValue: true,
													isPure: false,
													lValueRequested: false,
													nodeType: "IndexAccess",
													src: "696:25:13",
													typeDescriptions: {
														typeIdentifier: "t_uint256",
														typeString: "uint256",
													},
												},
												nodeType: "BinaryOperation",
												operator: "<",
												rightExpression: {
													baseExpression: {
														id: 1938,
														name: "_allowance",
														nodeType: "Identifier",
														overloadedDeclarations: [],
														referencedDeclaration: 1923,
														src: "724:10:13",
														typeDescriptions: {
															typeIdentifier:
																"t_mapping$_t_address_$_t_uint256_$",
															typeString: "mapping(address => uint256)",
														},
													},
													id: 1941,
													indexExpression: {
														expression: {
															id: 1939,
															name: "msg",
															nodeType: "Identifier",
															overloadedDeclarations: [],
															referencedDeclaration: 4294967281,
															src: "735:3:13",
															typeDescriptions: {
																typeIdentifier: "t_magic_message",
																typeString: "msg",
															},
														},
														id: 1940,
														isConstant: false,
														isLValue: false,
														isPure: false,
														lValueRequested: false,
														memberName: "sender",
														nodeType: "MemberAccess",
														src: "735:10:13",
														typeDescriptions: {
															typeIdentifier: "t_address",
															typeString: "address",
														},
													},
													isConstant: false,
													isLValue: true,
													isPure: false,
													lValueRequested: false,
													nodeType: "IndexAccess",
													src: "724:22:13",
													typeDescriptions: {
														typeIdentifier: "t_uint256",
														typeString: "uint256",
													},
												},
												src: "696:50:13",
												typeDescriptions: {
													typeIdentifier: "t_bool",
													typeString: "bool",
												},
											},
											{
												hexValue:
													"4e6f742077686974656c6973746564206f7220616c6c6f77616e636520746f6f206c6f772e",
												id: 1943,
												isConstant: false,
												isLValue: false,
												isPure: true,
												kind: "string",
												lValueRequested: false,
												nodeType: "Literal",
												src: "760:39:13",
												typeDescriptions: {
													typeIdentifier:
														"t_stringliteral_25e9e384fb9ee74dfba124aec4131531c53b8e94403e24af723667c7636dbc7f",
													typeString:
														'literal_string "Not whitelisted or allowance too low."',
												},
												value: "Not whitelisted or allowance too low.",
											},
										],
										expression: {
											argumentTypes: [
												{
													typeIdentifier: "t_bool",
													typeString: "bool",
												},
												{
													typeIdentifier:
														"t_stringliteral_25e9e384fb9ee74dfba124aec4131531c53b8e94403e24af723667c7636dbc7f",
													typeString:
														'literal_string "Not whitelisted or allowance too low."',
												},
											],
											id: 1933,
											name: "require",
											nodeType: "Identifier",
											overloadedDeclarations: [4294967278, 4294967278],
											referencedDeclaration: 4294967278,
											src: "675:7:13",
											typeDescriptions: {
												typeIdentifier:
													"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												typeString: "function (bool,string memory) pure",
											},
										},
										id: 1944,
										isConstant: false,
										isLValue: false,
										isPure: false,
										kind: "functionCall",
										lValueRequested: false,
										names: [],
										nodeType: "FunctionCall",
										src: "675:134:13",
										tryCall: false,
										typeDescriptions: {
											typeIdentifier: "t_tuple$__$",
											typeString: "tuple()",
										},
									},
									id: 1945,
									nodeType: "ExpressionStatement",
									src: "675:134:13",
								},
								{
									id: 1946,
									nodeType: "PlaceholderStatement",
									src: "819:1:13",
								},
							],
						},
						id: 1948,
						name: "canMint",
						nameLocation: "657:7:13",
						nodeType: "ModifierDefinition",
						parameters: {
							id: 1932,
							nodeType: "ParameterList",
							parameters: [],
							src: "665:0:13",
						},
						src: "648:179:13",
						virtual: false,
						visibility: "internal",
					},
					{
						body: {
							id: 1984,
							nodeType: "Block",
							src: "905:200:13",
							statements: [
								{
									expression: {
										arguments: [],
										expression: {
											argumentTypes: [],
											expression: {
												id: 1957,
												name: "_tokenIds",
												nodeType: "Identifier",
												overloadedDeclarations: [],
												referencedDeclaration: 1915,
												src: "915:9:13",
												typeDescriptions: {
													typeIdentifier: "t_struct$_Counter_$1533_storage",
													typeString: "struct Counters.Counter storage ref",
												},
											},
											id: 1959,
											isConstant: false,
											isLValue: true,
											isPure: false,
											lValueRequested: false,
											memberName: "increment",
											nodeType: "MemberAccess",
											referencedDeclaration: 1559,
											src: "915:19:13",
											typeDescriptions: {
												typeIdentifier:
													"t_function_internal_nonpayable$_t_struct$_Counter_$1533_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$1533_storage_ptr_$",
												typeString:
													"function (struct Counters.Counter storage pointer)",
											},
										},
										id: 1960,
										isConstant: false,
										isLValue: false,
										isPure: false,
										kind: "functionCall",
										lValueRequested: false,
										names: [],
										nodeType: "FunctionCall",
										src: "915:21:13",
										tryCall: false,
										typeDescriptions: {
											typeIdentifier: "t_tuple$__$",
											typeString: "tuple()",
										},
									},
									id: 1961,
									nodeType: "ExpressionStatement",
									src: "915:21:13",
								},
								{
									assignments: [1963],
									declarations: [
										{
											constant: false,
											id: 1963,
											mutability: "mutable",
											name: "newItemId",
											nameLocation: "955:9:13",
											nodeType: "VariableDeclaration",
											scope: 1984,
											src: "947:17:13",
											stateVariable: false,
											storageLocation: "default",
											typeDescriptions: {
												typeIdentifier: "t_uint256",
												typeString: "uint256",
											},
											typeName: {
												id: 1962,
												name: "uint256",
												nodeType: "ElementaryTypeName",
												src: "947:7:13",
												typeDescriptions: {
													typeIdentifier: "t_uint256",
													typeString: "uint256",
												},
											},
											visibility: "internal",
										},
									],
									id: 1967,
									initialValue: {
										arguments: [],
										expression: {
											argumentTypes: [],
											expression: {
												id: 1964,
												name: "_tokenIds",
												nodeType: "Identifier",
												overloadedDeclarations: [],
												referencedDeclaration: 1915,
												src: "967:9:13",
												typeDescriptions: {
													typeIdentifier: "t_struct$_Counter_$1533_storage",
													typeString: "struct Counters.Counter storage ref",
												},
											},
											id: 1965,
											isConstant: false,
											isLValue: true,
											isPure: false,
											lValueRequested: false,
											memberName: "current",
											nodeType: "MemberAccess",
											referencedDeclaration: 1545,
											src: "967:17:13",
											typeDescriptions: {
												typeIdentifier:
													"t_function_internal_view$_t_struct$_Counter_$1533_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1533_storage_ptr_$",
												typeString:
													"function (struct Counters.Counter storage pointer) view returns (uint256)",
											},
										},
										id: 1966,
										isConstant: false,
										isLValue: false,
										isPure: false,
										kind: "functionCall",
										lValueRequested: false,
										names: [],
										nodeType: "FunctionCall",
										src: "967:19:13",
										tryCall: false,
										typeDescriptions: {
											typeIdentifier: "t_uint256",
											typeString: "uint256",
										},
									},
									nodeType: "VariableDeclarationStatement",
									src: "947:39:13",
								},
								{
									expression: {
										arguments: [
											{
												id: 1969,
												name: "owner",
												nodeType: "Identifier",
												overloadedDeclarations: [],
												referencedDeclaration: 1950,
												src: "1002:5:13",
												typeDescriptions: {
													typeIdentifier: "t_address",
													typeString: "address",
												},
											},
											{
												id: 1970,
												name: "newItemId",
												nodeType: "Identifier",
												overloadedDeclarations: [],
												referencedDeclaration: 1963,
												src: "1009:9:13",
												typeDescriptions: {
													typeIdentifier: "t_uint256",
													typeString: "uint256",
												},
											},
										],
										expression: {
											argumentTypes: [
												{
													typeIdentifier: "t_address",
													typeString: "address",
												},
												{
													typeIdentifier: "t_uint256",
													typeString: "uint256",
												},
											],
											id: 1968,
											name: "_mint",
											nodeType: "Identifier",
											overloadedDeclarations: [],
											referencedDeclaration: 701,
											src: "996:5:13",
											typeDescriptions: {
												typeIdentifier:
													"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
												typeString: "function (address,uint256)",
											},
										},
										id: 1971,
										isConstant: false,
										isLValue: false,
										isPure: false,
										kind: "functionCall",
										lValueRequested: false,
										names: [],
										nodeType: "FunctionCall",
										src: "996:23:13",
										tryCall: false,
										typeDescriptions: {
											typeIdentifier: "t_tuple$__$",
											typeString: "tuple()",
										},
									},
									id: 1972,
									nodeType: "ExpressionStatement",
									src: "996:23:13",
								},
								{
									expression: {
										arguments: [
											{
												id: 1974,
												name: "newItemId",
												nodeType: "Identifier",
												overloadedDeclarations: [],
												referencedDeclaration: 1963,
												src: "1042:9:13",
												typeDescriptions: {
													typeIdentifier: "t_uint256",
													typeString: "uint256",
												},
											},
											{
												id: 1975,
												name: "tokenURI",
												nodeType: "Identifier",
												overloadedDeclarations: [],
												referencedDeclaration: 1952,
												src: "1053:8:13",
												typeDescriptions: {
													typeIdentifier: "t_string_memory_ptr",
													typeString: "string memory",
												},
											},
										],
										expression: {
											argumentTypes: [
												{
													typeIdentifier: "t_uint256",
													typeString: "uint256",
												},
												{
													typeIdentifier: "t_string_memory_ptr",
													typeString: "string memory",
												},
											],
											id: 1973,
											name: "_setTokenURI",
											nodeType: "Identifier",
											overloadedDeclarations: [],
											referencedDeclaration: 1150,
											src: "1029:12:13",
											typeDescriptions: {
												typeIdentifier:
													"t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
												typeString: "function (uint256,string memory)",
											},
										},
										id: 1976,
										isConstant: false,
										isLValue: false,
										isPure: false,
										kind: "functionCall",
										lValueRequested: false,
										names: [],
										nodeType: "FunctionCall",
										src: "1029:33:13",
										tryCall: false,
										typeDescriptions: {
											typeIdentifier: "t_tuple$__$",
											typeString: "tuple()",
										},
									},
									id: 1977,
									nodeType: "ExpressionStatement",
									src: "1029:33:13",
								},
								{
									expression: {
										id: 1982,
										isConstant: false,
										isLValue: false,
										isPure: false,
										lValueRequested: false,
										leftHandSide: {
											baseExpression: {
												id: 1978,
												name: "_tokensMinted",
												nodeType: "Identifier",
												overloadedDeclarations: [],
												referencedDeclaration: 1919,
												src: "1073:13:13",
												typeDescriptions: {
													typeIdentifier: "t_mapping$_t_address_$_t_uint256_$",
													typeString: "mapping(address => uint256)",
												},
											},
											id: 1980,
											indexExpression: {
												id: 1979,
												name: "owner",
												nodeType: "Identifier",
												overloadedDeclarations: [],
												referencedDeclaration: 1950,
												src: "1087:5:13",
												typeDescriptions: {
													typeIdentifier: "t_address",
													typeString: "address",
												},
											},
											isConstant: false,
											isLValue: true,
											isPure: false,
											lValueRequested: true,
											nodeType: "IndexAccess",
											src: "1073:20:13",
											typeDescriptions: {
												typeIdentifier: "t_uint256",
												typeString: "uint256",
											},
										},
										nodeType: "Assignment",
										operator: "+=",
										rightHandSide: {
											hexValue: "31",
											id: 1981,
											isConstant: false,
											isLValue: false,
											isPure: true,
											kind: "number",
											lValueRequested: false,
											nodeType: "Literal",
											src: "1097:1:13",
											typeDescriptions: {
												typeIdentifier: "t_rational_1_by_1",
												typeString: "int_const 1",
											},
											value: "1",
										},
										src: "1073:25:13",
										typeDescriptions: {
											typeIdentifier: "t_uint256",
											typeString: "uint256",
										},
									},
									id: 1983,
									nodeType: "ExpressionStatement",
									src: "1073:25:13",
								},
							],
						},
						functionSelector: "d0def521",
						id: 1985,
						implemented: true,
						kind: "function",
						modifiers: [
							{
								id: 1955,
								kind: "modifierInvocation",
								modifierName: {
									id: 1954,
									name: "canMint",
									nodeType: "IdentifierPath",
									referencedDeclaration: 1948,
									src: "893:7:13",
								},
								nodeType: "ModifierInvocation",
								src: "893:7:13",
							},
						],
						name: "mint",
						nameLocation: "842:4:13",
						nodeType: "FunctionDefinition",
						parameters: {
							id: 1953,
							nodeType: "ParameterList",
							parameters: [
								{
									constant: false,
									id: 1950,
									mutability: "mutable",
									name: "owner",
									nameLocation: "855:5:13",
									nodeType: "VariableDeclaration",
									scope: 1985,
									src: "847:13:13",
									stateVariable: false,
									storageLocation: "default",
									typeDescriptions: {
										typeIdentifier: "t_address",
										typeString: "address",
									},
									typeName: {
										id: 1949,
										name: "address",
										nodeType: "ElementaryTypeName",
										src: "847:7:13",
										stateMutability: "nonpayable",
										typeDescriptions: {
											typeIdentifier: "t_address",
											typeString: "address",
										},
									},
									visibility: "internal",
								},
								{
									constant: false,
									id: 1952,
									mutability: "mutable",
									name: "tokenURI",
									nameLocation: "876:8:13",
									nodeType: "VariableDeclaration",
									scope: 1985,
									src: "862:22:13",
									stateVariable: false,
									storageLocation: "memory",
									typeDescriptions: {
										typeIdentifier: "t_string_memory_ptr",
										typeString: "string",
									},
									typeName: {
										id: 1951,
										name: "string",
										nodeType: "ElementaryTypeName",
										src: "862:6:13",
										typeDescriptions: {
											typeIdentifier: "t_string_storage_ptr",
											typeString: "string",
										},
									},
									visibility: "internal",
								},
							],
							src: "846:39:13",
						},
						returnParameters: {
							id: 1956,
							nodeType: "ParameterList",
							parameters: [],
							src: "905:0:13",
						},
						scope: 2002,
						src: "833:272:13",
						stateMutability: "nonpayable",
						virtual: false,
						visibility: "public",
					},
					{
						body: {
							id: 2000,
							nodeType: "Block",
							src: "1185:46:13",
							statements: [
								{
									expression: {
										id: 1998,
										isConstant: false,
										isLValue: false,
										isPure: false,
										lValueRequested: false,
										leftHandSide: {
											baseExpression: {
												id: 1994,
												name: "_allowance",
												nodeType: "Identifier",
												overloadedDeclarations: [],
												referencedDeclaration: 1923,
												src: "1195:10:13",
												typeDescriptions: {
													typeIdentifier: "t_mapping$_t_address_$_t_uint256_$",
													typeString: "mapping(address => uint256)",
												},
											},
											id: 1996,
											indexExpression: {
												id: 1995,
												name: "minter",
												nodeType: "Identifier",
												overloadedDeclarations: [],
												referencedDeclaration: 1987,
												src: "1206:6:13",
												typeDescriptions: {
													typeIdentifier: "t_address",
													typeString: "address",
												},
											},
											isConstant: false,
											isLValue: true,
											isPure: false,
											lValueRequested: true,
											nodeType: "IndexAccess",
											src: "1195:18:13",
											typeDescriptions: {
												typeIdentifier: "t_uint256",
												typeString: "uint256",
											},
										},
										nodeType: "Assignment",
										operator: "=",
										rightHandSide: {
											id: 1997,
											name: "maxToken",
											nodeType: "Identifier",
											overloadedDeclarations: [],
											referencedDeclaration: 1989,
											src: "1216:8:13",
											typeDescriptions: {
												typeIdentifier: "t_uint256",
												typeString: "uint256",
											},
										},
										src: "1195:29:13",
										typeDescriptions: {
											typeIdentifier: "t_uint256",
											typeString: "uint256",
										},
									},
									id: 1999,
									nodeType: "ExpressionStatement",
									src: "1195:29:13",
								},
							],
						},
						functionSelector: "9ce38998",
						id: 2001,
						implemented: true,
						kind: "function",
						modifiers: [
							{
								id: 1992,
								kind: "modifierInvocation",
								modifierName: {
									id: 1991,
									name: "onlyOwner",
									nodeType: "IdentifierPath",
									referencedDeclaration: 46,
									src: "1171:9:13",
								},
								nodeType: "ModifierInvocation",
								src: "1171:9:13",
							},
						],
						name: "setMinter",
						nameLocation: "1120:9:13",
						nodeType: "FunctionDefinition",
						parameters: {
							id: 1990,
							nodeType: "ParameterList",
							parameters: [
								{
									constant: false,
									id: 1987,
									mutability: "mutable",
									name: "minter",
									nameLocation: "1138:6:13",
									nodeType: "VariableDeclaration",
									scope: 2001,
									src: "1130:14:13",
									stateVariable: false,
									storageLocation: "default",
									typeDescriptions: {
										typeIdentifier: "t_address",
										typeString: "address",
									},
									typeName: {
										id: 1986,
										name: "address",
										nodeType: "ElementaryTypeName",
										src: "1130:7:13",
										stateMutability: "nonpayable",
										typeDescriptions: {
											typeIdentifier: "t_address",
											typeString: "address",
										},
									},
									visibility: "internal",
								},
								{
									constant: false,
									id: 1989,
									mutability: "mutable",
									name: "maxToken",
									nameLocation: "1154:8:13",
									nodeType: "VariableDeclaration",
									scope: 2001,
									src: "1146:16:13",
									stateVariable: false,
									storageLocation: "default",
									typeDescriptions: {
										typeIdentifier: "t_uint256",
										typeString: "uint256",
									},
									typeName: {
										id: 1988,
										name: "uint256",
										nodeType: "ElementaryTypeName",
										src: "1146:7:13",
										typeDescriptions: {
											typeIdentifier: "t_uint256",
											typeString: "uint256",
										},
									},
									visibility: "internal",
								},
							],
							src: "1129:34:13",
						},
						returnParameters: {
							id: 1993,
							nodeType: "ParameterList",
							parameters: [],
							src: "1185:0:13",
						},
						scope: 2002,
						src: "1111:120:13",
						stateMutability: "nonpayable",
						virtual: false,
						visibility: "public",
					},
				],
				scope: 2003,
				src: "301:932:13",
				usedErrors: [],
			},
		],
		src: "32:1202:13",
	},
	compiler: {
		name: "solc",
		version: "0.8.9+commit.e5eed63a.Emscripten.clang",
	},
	networks: {
		"4": {
			events: {
				"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
					anonymous: false,
					inputs: [
						{
							indexed: true,
							internalType: "address",
							name: "owner",
							type: "address",
						},
						{
							indexed: true,
							internalType: "address",
							name: "approved",
							type: "address",
						},
						{
							indexed: true,
							internalType: "uint256",
							name: "tokenId",
							type: "uint256",
						},
					],
					name: "Approval",
					type: "event",
				},
				"0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
					anonymous: false,
					inputs: [
						{
							indexed: true,
							internalType: "address",
							name: "owner",
							type: "address",
						},
						{
							indexed: true,
							internalType: "address",
							name: "operator",
							type: "address",
						},
						{
							indexed: false,
							internalType: "bool",
							name: "approved",
							type: "bool",
						},
					],
					name: "ApprovalForAll",
					type: "event",
				},
				"0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
					anonymous: false,
					inputs: [
						{
							indexed: true,
							internalType: "address",
							name: "previousOwner",
							type: "address",
						},
						{
							indexed: true,
							internalType: "address",
							name: "newOwner",
							type: "address",
						},
					],
					name: "OwnershipTransferred",
					type: "event",
				},
				"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
					anonymous: false,
					inputs: [
						{
							indexed: true,
							internalType: "address",
							name: "from",
							type: "address",
						},
						{
							indexed: true,
							internalType: "address",
							name: "to",
							type: "address",
						},
						{
							indexed: true,
							internalType: "uint256",
							name: "tokenId",
							type: "uint256",
						},
					],
					name: "Transfer",
					type: "event",
				},
			},
			links: {},
			address: "0x96C1c102c739f68c151a7D59b4368c3245db0929",
			transactionHash:
				"0x3246812fbe13025ed9be9034957737d496df1070eca00fb24ff5aa6add4e2ae3",
		},
	},
	schemaVersion: "3.4.3",
	updatedAt: "2021-10-13T09:27:59.957Z",
	networkType: "ethereum",
	devdoc: {
		kind: "dev",
		methods: {
			"approve(address,uint256)": {
				details: "See {IERC721-approve}.",
			},
			"balanceOf(address)": {
				details: "See {IERC721-balanceOf}.",
			},
			"getApproved(uint256)": {
				details: "See {IERC721-getApproved}.",
			},
			"isApprovedForAll(address,address)": {
				details: "See {IERC721-isApprovedForAll}.",
			},
			"name()": {
				details: "See {IERC721Metadata-name}.",
			},
			"owner()": {
				details: "Returns the address of the current owner.",
			},
			"ownerOf(uint256)": {
				details: "See {IERC721-ownerOf}.",
			},
			"renounceOwnership()": {
				details:
					"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
			},
			"safeTransferFrom(address,address,uint256)": {
				details: "See {IERC721-safeTransferFrom}.",
			},
			"safeTransferFrom(address,address,uint256,bytes)": {
				details: "See {IERC721-safeTransferFrom}.",
			},
			"setApprovalForAll(address,bool)": {
				details: "See {IERC721-setApprovalForAll}.",
			},
			"supportsInterface(bytes4)": {
				details: "See {IERC165-supportsInterface}.",
			},
			"symbol()": {
				details: "See {IERC721Metadata-symbol}.",
			},
			"tokenURI(uint256)": {
				details: "See {IERC721Metadata-tokenURI}.",
			},
			"transferFrom(address,address,uint256)": {
				details: "See {IERC721-transferFrom}.",
			},
			"transferOwnership(address)": {
				details:
					"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
			},
		},
		version: 1,
	},
	userdoc: {
		kind: "user",
		methods: {},
		version: 1,
	},
};
